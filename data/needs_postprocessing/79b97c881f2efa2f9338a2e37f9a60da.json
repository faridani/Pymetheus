"{'model': 'gemma2:27b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Hard: Optimal Path Finding\\\\\", \\\\\"description\\\\\": \\\\\"Given a grid represented as a list of lists where 0 represents an empty cell and 1 represents a blocked cell, find the shortest path from the top-left corner (0, 0) to the bottom-right corner (m - 1, n - 1). You can only move horizontally or vertically.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef find_shortest_path(grid: list[list[int]]) -> int:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `grid` (list[list[int]]): A 2D grid representing the map with 0 for empty cells and 1 for blocked cells.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns the length of the shortest path from the top-left corner to the bottom-right corner. Return -1 if no path exists.\\\\\", \\\\\"code\\\\\": \\\\\"from collections import deque\\\\\\\\n\\\\\\\\ndef find_shortest_path(grid: list[list[int]]) -> int:\\\\\\\\n    m, n = len(grid), len(grid[0])\\\\\\\\n    if grid[0][0] == 1 or grid[m - 1][n - 1] == 1:\\\\\\\\n        return -1\\\\\\\\n    queue = deque([(0, 0, 0)])  # (row, col, distance)\\\\\\\\n    visited = set([(0, 0)])\\\\\\\\n    while queue:\\\\\\\\n        row, col, dist = queue.popleft()\\\\\\\\n        if row == m - 1 and col == n - 1:\\\\\\\\n            return dist\\\\\\\\n        for dr, dc in [(0, 1), (1, 0), (0, -1), (-1, 0)]:\\\\\\\\n            nr, nc = row + dr, col + dc\\\\\\\\n            if 0 <= nr < m and 0 <= nc < n and grid[nr][nc] == 0 and (nr, nc) not in visited:\\\\\\\\n                queue.append((nr, nc, dist + 1))\\\\\\\\n                visited.add((nr, nc))\\\\\\\\n    return -1\\\\\\\\n\\\\\", \\\\\"tests\\\\\": [\\\\\"\\'assert find_shortest_path([[0, 0, 0], [0, 1, 0], [0, 0, 0]]) == 4\\'\\\\\", \\\\\"\\'assert find_shortest_path([[0, 1], [0, 0]]) == 2\\'\\\\\", \\\\\"\\'assert find_shortest_path([[1, 1],[1, 0]]) == -1\\'\\\\\", \\\\\"\\'assert find_shortest_path([[0, 0, 1, 0], [0, 1, 0, 1], [0, 0, 0, 0], [1, 1, 1, 0]]) == 8\\'\\\\\"] }\"'}"