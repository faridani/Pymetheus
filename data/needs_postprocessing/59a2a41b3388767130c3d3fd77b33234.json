{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Medium: Number of Islands\\\", \\\"description\\\": \\\"Given a 2D binary grid (0s and 1s), count the number of islands.\\\\n\\\\nAn island is defined as a group of contiguous '1's in the grid. Write a function `count_islands` that takes a 2D list of integers as input, where 0 represents land and 1 represents water.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef count_islands(grid: List[List[int]]) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `grid` (List[List[int]]): A 2D list of integers representing the grid.\\\\n\\\\n#### Output\\\\n- Returns an integer representing the number of islands in the grid.\\\\n\\\\n\\\", \\\"code\\\": \\\"\\\\nfrom typing import List\\\\n\\\\ndef count_islands(grid: List[List[int]]) -> int:\\\\n    if not grid:\\\\n        return 0\\\\n    \\\\n    num_islands = 0\\\\n    for i in range(len(grid)):\\\\n        for j in range(len(grid[0])):\\\\n            if grid[i][j] == 1:\\\\n                num_islands += 1\\\\n                dfs(grid, i, j)\\\\n    \\\\n    return num_islands\\\\n\\\\ndef dfs(grid: List[List[int]], i: int, j: int) -> None:\\\\n    if i<0 or i>=len(grid) or j<0 or j>=len(grid[0]) or grid[i][j] != 1:\\\\n        return\\\\n    grid[i][j] = '#'\\\\n    for dx, dy in [(0, 1), (0, -1), (1, 0), (-1, 0)]:\\\\n        dfs(grid, i+dx, j+dy)\\\\n\\\\n\\\", \\\"tests\\\": [\\\"assert count_islands([[0,0,1,0,0],[0,0,1,0,0],[0,0,1,0,0]]) == 1\\\", \\\"assert count_islands([[1,1,1,1], [1,1,1,1], [1,1,1,1]]) == 1\\\", \\\"assert count_islands([[1,1,1,1], [1,0,1,1], [1,1,1,1]]) == 3\\\"] }\""
}