"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"\\'Anagram Sorter (Hard)\\'\\\\\", \\\\\"description\\\\\": \\\\\"Given a list of words, sort them into groups such that each group consists of anagrams. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef anagram_sorter(words: List[str]) -> Dict[str, List[str]]:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `words` (List[str]): A list of strings containing lowercase letters, spaces and punctuation are removed.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns a dictionary where each key is an anagram of the given words and the corresponding value is a list of those words.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"from collections import defaultdict, Counter\\\\\\\\n\\\\\\\\ndef anagram_sorter(words: List[str]) -> Dict[str, List[str]]:\\\\\\\\n    # Create an empty dictionary to store anagram groups\\\\\\\\n    grouped = defaultdict(list)\\\\\\\\n    \\\\\\\\n    # Count the occurrence of each letter in each word\\\\\\\\n    for word in words:\\\\\\\\n        count = Counter(word)\\\\\\\\n        \\\\\\\\n        # Combine the count into a single string and sort it\\\\\\\\n        sorted_counts = \\'\\'.join(sorted(str(c) for c in count.elements()))\\\\\\\\n        \\\\\\\\n        # Use the sorted counts as the key of the group dictionary\\\\\\\\n        grouped[sorted_counts].append(word)\\\\\\\\n    \\\\\\\\n    # Convert the dictionary into a list of tuples and sort it by group keys\\\\\\\\n    return dict(sorted(grouped.items()))\\\\\", \\\\\"tests\\\\\": [\\\\\"assert anagram_sorter([\\'listen\\', \\'silent\\', \\'enlist\\', \\'education\\']) == {\\'enlistdcilou\\', [\\'enlist\\'], \\'ilistsneducatio\\', [\\'listen\\', \\'silent\\', \\'education\\']}\\\\\", \\\\\"assert anagram_sorter([\\'apple\\', \\'appelle\\', \\'appeal\\', \\'peelap\\']) == {\\'aelppa\\', [\\'apple\\', \\'appelle\\', \\'peelap\\'], \\'eallppea\\', [\\'appeal\\']}\\\\\"] }\"'}"