{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Minimum Path Sum\\\", \\\"description\\\": \\\"#### Problem\\\\nFind the minimum sum of a path from top left to bottom right in a given grid. The grid contains only positive integers. A path is allowed to start and end at any cell, including those on the border.\\\\n\\\\n#### Function Signature\\\\n```\\\\ndef min_path_sum(grid: list[list[int]]) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `grid` (list[list[int]]): A 2D grid of positive integers.\\\\n\\\\n#### Output\\\\n- The minimum sum of a path from top left to bottom right in the given grid.\\\\n\\\", \\\"code\\\": \\\"\\\\nimport sys\\\\n\\\\ndef min_path_sum(grid: list[list[int]]) -> int:\\\\n    rows, cols = len(grid), len(grid[0])\\\\n    dp = [[0] * cols for _ in range(rows)]\\\\n\\\\n    dp[0][0] = grid[0][0]\\\\n    for i in range(1, rows):\\\\n        dp[i][0] = dp[i-1][0] + grid[i][0]\\\\n    for j in range(1, cols):\\\\n        dp[0][j] = dp[0][j-1] + grid[0][j]\\\\n\\\\n    for i in range(1, rows):\\\\n        for j in range(1, cols):\\\\n            dp[i][j] = min(dp[i-1][j], dp[i][j-1]) + grid[i][j]\\\\n    return dp[-1][-1]\\\\n\\\\n\\\", \\\"tests\\\": [\\\"assert min_path_sum([[1,3,5],[4,2,1],[1,5,3],[4,7,2,6]]) == 12\\\", \\\"assert min_path_sum([[5]]), expected output: 5\\\", \\\"assert min_path_sum([[]]), expected output: None\\\"] }\""
}