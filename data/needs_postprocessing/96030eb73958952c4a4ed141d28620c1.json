{
    "model": "llama3:latest",
    "response": "{\"title\": \"Maximum Sum of Non-Adjacent Elements (Hard)\", \"description\": \"Given a list of integers, find the maximum sum of non-adjacent elements. For example, if the input is [2, 7, 9, 3, 1], the output should be 12 because you can choose elements at indices 0, 2, and 4 to get a sum of 2 + 9 + 1 = 12.\\n\\n#### Function Signature\\n```python\\ndef max_sum_of_non_adjacent_elements(nums: list[int)) -> int:\\n```\\n\\n#### Input\\n- `nums` (list[int]): A list of integers that may contain any values.\\n\\n#### Output\\n- Returns the maximum sum of non-adjacent elements in the input list.\", \"code\": \"def max_sum_of_non_adjacent_elements(nums: list[int)) -> int:\\n    if len(nums) <= 2:\\n        return max(0, max(nums))\\n    dp = [0] * (len(nums) + 1)\\n    dp[1] = max(0, nums[0])\\n    for i in range(2, len(nums) + 1):\\n        dp[i] = max(dp[i-1], dp[i-2] + nums[i-1])\\n    return dp[-1]\", \"tests\": [\"assert max_sum_of_non_adjacent_elements([2, 7, 9, 3, 1]) == 12\", \"assert max_sum_of_non_adjacent_elements([1, 2, 3, 4, 5]) == 9\", \"assert max_sum_of_non_adjacent_elements([-2, 0, 2, 4, -10]) == 8\"]}"
}