{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Maximum Sum of Distinct Integers\\\", \\\"description\\\": \\\"Given a list of integers and an integer k, find the maximum sum of k distinct integers from the given list. The order of the integers does not matter.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_sum(k: int, nums: list[int]) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `k` (int): The number of distinct integers to choose.\\\\n- `nums` (list[int]): A list of integers.\\\\n\\\\n#### Output\\\\n- Returns the maximum sum of k distinct integers from the given list.\\\\n\\\", \\\"code\\\": \\\"import heapq\\\\ndef max_sum(k: int, nums: list[int]) -> int:\\\\n    # Convert the list to a min heap\\\\n    min_heap = [-num for num in nums]\\\\n    heapq.heapify(min_heap)\\\\n    # Initialize the maximum sum and the set of chosen numbers\\\\n    max_sum = 0\\\\ncurrent_sum = 0\\\\n    chosen_nums = set()\\\\n    while k > 0:\\\\n        # Extract the smallest number from the heap that hasn't been chosen yet\\\\n        num = -heapq.heappop(min_heap)\\\\n        if num not in chosen_nums:\\\\n            current_sum += num\\\\n            chosen_nums.add(num)\\\\n            k -= 1\\\\n    return -current_sum\\\\n\\\", \\\"tests\\\": [\\\"assert max_sum(2, [1, 3, 5]) == 9\\\", \\\"assert max_sum(3, [1, 4, 10, 12, 20]) == 29\\\", \\\"assert max_sum(4, []) == 0\\\", \\\"assert max_sum(1, [1]) == 1\\\"] }\""
}