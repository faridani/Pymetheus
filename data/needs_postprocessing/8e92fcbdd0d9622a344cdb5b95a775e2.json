{
    "model": "llama3:latest",
    "response": "{\"title\": \"Minimum Swaps to Make Sorted Array\", \"description\": \"Given an unsorted array of integers, write a function that calculates the minimum number of swaps required to sort the array. The swap operation is defined as follows: you can swap any two elements in the array.\\n\\n#### Function Signature\\n```python\\ndef min_swaps(arr: list[int)) -> int:\\n```\\n\\n#### Input\\n- `arr` (list[int]): An unsorted array of integers.\\n\\n#### Output\\n- Returns the minimum number of swaps required to sort the input array.\", \"code\": \"def min_swaps(arr: list[int)) -> int:\\n    n = len(arr)\\n    inversions = 0\\n    for i in range(n):\\n        for j in range(i + 1, n):\\n            if arr[i] > arr[j]:\\n                inversions += 1\\n    return inversions // 2\", \"tests\": [\"assert min_swaps([5, 4, 3, 2, 1]) == 5\", \"assert min_swaps([1, 2, 3, 4, 5]) == 0\", \"assert min_swaps([3, 2, 1]) == 3\", \"assert min_swaps([5, 4, 3, 2]) == 6\"]}"
}