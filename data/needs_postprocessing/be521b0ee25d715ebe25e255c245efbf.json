"{'model': 'aya:35b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Sum of Unique Multiples\\\\\", \\\\\"description\\\\\": \\\\\"Given a positive integer n, find the sum of all unique multiples of positive integers less than or equal to n. The multiples should be distinct and should not include n itself.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef sum_of_unique_multiples(n: int) -> int:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `n` (int): A positive integer.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns the sum of all unique multiples of positive integers less than or equal to n, excluding n itself.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"def sum_of_unique_multiples(n: int) -> int:\\\\\\\\n    \\\\\\\\\\\\\"\\\\\\\\\\\\\"\\\\\\\\\\\\\"\\\\\\\\n    Find the sum of all unique multiples of positive integers less than or equal to n.\\\\\\\\n    \\\\\\\\n    Args:\\\\\\\\n        n (int): A positive integer.\\\\\\\\n    Returns:\\\\\\\\n        int: The sum of unique multiples.\\\\\\\\n    \\\\\\\\\\\\\"\\\\\\\\\\\\\"\\\\\\\\\\\\\"\\\\\\\\n\\\\\\\\n    # Initialize the sum and a set to store unique multiples\\\\\\\\n    total_sum = 0\\\\\\\\n    unique_multiples = set()\\\\\\\\n\\\\\\\\n    # Iterate through numbers from 1 to n\\\\\\\\n    for i in range(1, n + 1):\\\\\\\\n        # Calculate multiples of i that are less than or equal to n\\\\\\\\n        multiples = i * (n // i)\\\\\\\\n        # Add the multiples to the set if they haven\\'t been added before\\\\\\\\n        unique_multiples.update(range(i, multiples + 1, i))\\\\\\\\n    \\\\\\\\n    # Calculate the sum of unique multiples\\\\\\\\n    total_sum = sum(unique_multiples)\\\\\\\\n\\\\\\\\n    return total_sum\\\\\", \\\\\"tests\\\\\": [\\\\\"assert sum_of_unique_multiples(10) == 23\\\\\", \\\\\"assert sum_of_unique_multiples(5) == 9\\\\\", \\\\\"assert sum_of_unique_multiples(20) == 104\\\\\"] }\"'}"