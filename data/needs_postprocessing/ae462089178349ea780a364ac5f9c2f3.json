"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Anagram Finder (Hard)\\\\\", \\\\\"description\\\\\": \\\\\"Write a function `find_anagrams` that finds all anagrams of a given string within a list of strings.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef find_anagrams(word: str, words: List[str]) -> List[str]:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `word` (str): The word to find anagrams for\\\\\\\\n- `words` (List[str]): A list of words where the anagrams are to be found.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns a list of strings that are anagrams of the given word.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"def find_anagrams(word: str, words: List[str]) -> List[str]:\\\\\\\\n    # Sort the characters in the word and remove duplicates\\\\\\\\n    sorted_word = sorted(list(set(word)))\\\\\\\\n    anagrams = []\\\\\\\\n    for w in words:\\\\\\\\n        # Sort the characters in the current word and remove duplicates\\\\\\\\n        sorted_w = sorted(list(set(w)))\\\\\\\\n        # Check if both words have the same length\\\\\\\\n        if len(sorted_word) != len(sorted_w):\\\\\\\\n            continue\\\\\\\\n        # Check if the sorted characters in both words are the same\\\\\\\\n        if sorted_word == sorted_w:\\\\\\\\n            anagrams.append(w)\\\\\\\\n    return anagrams\\\\\", \\\\\"tests\\\\\": [\\\\\"assert find_anagrams(\\'listen\\', [\\'enlistment\\', \\'silent\\', \\'enlist\\']) == [\\'silent\\']\\\\\", \\\\\"assert find_anagrams(\\'racecar\\', [\\'racestar\\', \\'carcass\\', \\'crew\\']) == [\\'carcass\\', \\'crew\\']\\\\\"] }\"'}"