{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Sum of Proper Divisors\\\", \\\"description\\\": \\\"A proper divisor of a number is a divisor that is less than the number itself. For example, 1 and 2 are proper divisors of 4, but 3 is not because it is equal to 4. Write a function `sum_of_proper_divisors` that calculates the sum of all proper divisors of a given integer.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef sum_of_proper_divisors(n: int) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `n` (int): A positive integer.\\\\n\\\\n#### Output\\\\n- Returns the sum of all proper divisors of the input integer.\\\\n\\\", \\\"code\\\": \\\"\\\\ndef sum_of_proper_divisors(n: int) -> int:\\\\n    def get_divisors(num: int) -> list:\\\\n        divisors = [1]\\\\n        for i in range(2, num):\\\\n            if num % i == 0:\\\\n                divisors.append(i)\\\\n        return divisors\\\\n    proper_divisors = set(get_divisors(n))\\\\n    proper_divisors.discard(n)\\\\n    return sum(proper_divisors)\\\\n\\\\n\\\", \\\"tests\\\": [\\\"assert sum_of_proper_divisors(28) == 28\\\", \\\"assert sum_of_proper_divisors(12) == 16\\\", \\\"assert sum_of_proper_divisors(18) == 18\\\", \\\"assert sum_of_proper_divisors(1) == 0\\\"] }\""
}