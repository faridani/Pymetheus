"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"\\'Polindrome of Digits Only (Medium)\\',\\\\\", \\\\\"description\\\\\": \\\\\"A polindrome is a number that remains the same when its digits are reversed. Write a function `is_polindrome` that checks if a given number is a palindrome.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef is_polindrome(n: int) -> bool:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `n` (int): A positive integer without leading zeros.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns `True` if the input number is a palindrome, `False` otherwise.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"def is_polindrome(n: int) -> bool:\\\\\\\\n    # Ensure the number has no leading zeros and convert to a string\\\\\\\\n    n = str(n)[::-1]\\\\\\\\n    if not n[0].isdigit(): return False\\\\\\\\n    n = n.lstrip(\\'0\\')\\\\\\\\n    if len(n) % 2 == 1: # Odd length palindromes have middle digit unpaired\\\\\\\\n        mid_digit = int(n[len(n)//2])\\\\\\\\n        return all([num == mid_digit for num in n.split(\\' \\')]) \\\\\\\\n    else:\\\\\\\\n        return n == n[::-1]\\\\\\\\n\\\\\", \\\\\"tests\\\\\": [\\\\\"assert is_polindrome(121) == True\\\\\", \\\\\"assert is_polindrome(575) == True\\\\\", \\\\\"assert is_polindrome(1983) == False\\\\\", \\\\\"assert is_polindrome(1001) == False\\\\\"] }\"'}"