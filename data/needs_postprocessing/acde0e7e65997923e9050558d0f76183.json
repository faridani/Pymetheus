{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Maximum Sum of Subarrays (Easy)\\\", \\\"description\\\": \\\"Given an array of integers, find the maximum sum of a contiguous subarray. For example, for the input `[3, 2, -1, 5, -4, 6]`, the function should return `14` because the subarray `[3, 2, 5]` has the maximum sum.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_sum_subarray(arr: list[int)) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `arr` (list[int]): A list of integers.\\\\n\\\\n#### Output\\\\n- Returns the maximum sum of a contiguous subarray.\\\", \\\"code\\\": \\\"\\\\ndef max_sum_subarray(arr: list[int)) -> int:\\\\n    max_sum = float('-inf')\\\\n    current_sum = 0\\\\n    for num in arr:\\\\n        current_sum += num\\\\n        if current_sum > max_sum:\\\\n            max_sum = current_sum\\\\n        elif current_sum < 0:\\\\n            current_sum = 0\\\\n    return max_sum\\\", \\\"tests\\\": [\\\"assert max_sum_subarray([3, 2, -1, 5, -4, 6]) == 14\\\", \\\"assert max_sum_subarray([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6\\\", \\\"assert max_sum_subarray([0, 0, 0, 0, 0]) == 0\\\"] }\""
}