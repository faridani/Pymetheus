{
    "model": "llama3:latest",
    "response": "{\"title\": \"Easy: Maximum Sum of Subarray\", \"description\": \"Given a list of integers, find the maximum sum of subarray. A subarray is a contiguous sequence of elements within an array. For example, if we have the list [1, 2, -3, 4, 5], the maximum sum of subarray would be 14 because the sum of the subarray [4, 5] is 9 and the sum of the subarray [-3, 4, 5] is 6.\\n\\n#### Function Signature\\n```python\\ndef max_sum_of_subarray(arr: list[int)) -> int:\\n```\\n\\n#### Input\\n- `arr` (list[int]): A list of integers.\\n\\n#### Output\\n- Returns the maximum sum of subarray.\", \"code\": \"def max_sum_of_subarray(arr: list[int)) -> int:\\n    if not arr:\\n        return 0\\n    max_sum = current_sum = arr[0]\\n    for num in arr[1:]:\\n        current_sum = max(num, current_sum + num)\\n        max_sum = max(max_sum, current_sum)\\n    return max_sum\", \"tests\": [\"assert max_sum_of_subarray([1, 2, -3, 4, 5]) == 14\", \"assert max_sum_of_subarray([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6\"]}"
}