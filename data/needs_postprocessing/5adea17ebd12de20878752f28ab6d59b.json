{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Easy: Maximum Sum of an Increasing Subsequence\\\", \\\"description\\\": \\\"#### Problem Statement\\\\nGiven a list of integers, find the maximum sum of an increasing subsequence.\\\\n\\\\nA subsequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements. For example, the subsequence `2, 3, 4` can be derived from the original sequence `[1, 2, 3, 4]`. An increasing subsequence is a subsequence where each element is strictly greater than its predecessor.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_increasing_subsequence_sum(arr: list[int)) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `arr` (list[int]): A list of integers.\\\\n\\\\n#### Output\\\\n- Returns the maximum sum of an increasing subsequence.\\\\n\\\", \\\"code\\\": \\\"\\\\ndef max_increasing_subsequence_sum(arr: list[int)) -> int:\\\\n    n = len(arr)\\\\n    dp = [0] * n\\\\n    max_sum = 0\\\\n    \\\\n    for i in range(n):\\\\n        if i == 0:\\\\n            dp[i] = arr[i]\\\\n        else:\\\\n            dp[i] = arr[i]\\\\n            for j in range(i):\\\\n                if arr[j] < arr[i]:\\\\n                    dp[i] = max(dp[i], dp[j] + arr[i])\\\\n        max_sum = max(max_sum, dp[i])\\\\n        \\\\n    return max_sum\\\\n\\\", \\\"tests\\\": [\\\"assert max_increasing_subsequence_sum([1, 2, 3, 4]) == 10\\\", \\\"assert max_increasing_subsequence_sum([-1, 0, 1, 2]) == 3\\\", \\\"assert max_increasing_subsequence_sum([-5, -2, 3, 5]) == 8\\\"] }\""
}