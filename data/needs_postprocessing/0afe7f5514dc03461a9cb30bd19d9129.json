"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Anagram Finder (Hard)\\\\\", \\\\\"description\\\\\": \\\\\"Given two strings, write a function that checks if they are anagrams of each other. An anagram is a word or phrase that contains the same letters as another word or phrase, but in a different arrangement. For example, \\'listen\\' and \\'silent\\' are anagrams.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef are_anagrams(s1: str, s2: str) -> bool:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `s1`, `s2` (str): Two strings that may contain any combination of uppercase and lowercase letters.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns `True` if the two input strings are anagrams, `False` otherwise.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"def are_anagrams(s1: str, s2: str) -> bool:\\\\\\\\n    # Convert both strings to lowercase and remove any non-alphabetic characters\\\\\\\\n    s1 = \\'\\'.join([char for char in s1 if char.isalpha()])\\\\\\\\n    s2 = \\'\\'.join([char for char in s2 if char.isalpha()])\\\\\\\\n    # Sort the resulting strings and compare them\\\\\\\\n    return sorted(s1) == sorted(s2)\\\\\", \\\\\"tests\\\\\": [\\\\\"assert are_anagrams(\\'listen\\', \\'silent\\') == True\\\\\", \\\\\"assert are_anagrams(\\'act\\', \\'cat\\') == True\\\\\", \\\\\"assert are_anagrams(\\'apple\\', \\'pear\\') == False\\\\\", \\\\\"assert are_anagrams(\\'Mary\\', \\'Aram\\') == True\\\\\"] }\"'}"