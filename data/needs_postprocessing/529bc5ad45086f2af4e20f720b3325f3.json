{
    "model": "llama3:latest",
    "response": "{\"title\": \"Medium: Validating Brackets\", \"description\": \"Given a string of brackets, write a function that checks if all the brackets are valid and properly nested. The input may contain any type of bracket (e.g., {}, [], ()). The function should return True if the brackets are valid and False otherwise.\\n\\n#### Function Signature\\n```python\\ndef is_valid_brackets(s: str) -> bool:\\n```\\n\\n#### Input\\n- `s` (str): A string that may contain any type of bracket.\\n\\n#### Output\\n- Returns `True` if the input string contains valid and properly nested brackets, `False` otherwise.\", \"code\": \"def is_valid_brackets(s: str) -> bool:\\n    bracket_map = {')': '(', '}': '{', ']': '['}\\n    stack = []\\n    for char in s:\\n        if char in bracket_map.values():\\n            stack.append(char)\\n        elif char in bracket_map.keys():\\n            if not stack or bracket_map[char] != stack.pop():\\n                return False\\n    return not stack\", \"tests\": [\"assert is_valid_brackets(\", \"{[()]}\\\") == True\\\", \\\"assert is_valid_brackets(\\\"(}\\\") == False\\\", \\\"assert is_valid_brackets(\\\"{[)]\\\") == False\\\", \\\"assert is_valid_brackets(\\\"({[]})\\\") == True\\\"\"]}"
}