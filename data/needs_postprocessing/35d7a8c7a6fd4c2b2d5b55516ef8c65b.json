{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Easy: Divisible Summation\\\", \\\"description\\\": \\\"Given a list of integers, calculate the number of pairs of numbers that are divisible by each other. For example, if you have the list [1, 2, 3, 4, 5], there is one pair (2, 4) that are divisible by each other.\\\\n\\\\n#### Function Signature\\\\n```\\\\ndef divisible_pairs(lst: list[int]) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `lst` (list[int]): A list of integers.\\\\n\\\\n#### Output\\\\n- Returns the number of pairs of numbers in the input list that are divisible by each other.\\\\n\\\", \\\"code\\\": \\\"\\\\ndef divisible_pairs(lst: list[int]) -> int:\\\\n    count = 0\\\\n    for i in range(len(lst)):\\\\n        for j in range(i+1, len(lst)):\\\\n            if lst[i] % lst[j] == 0 or lst[j] % lst[i] == 0:\\\\n                count += 1\\\\n    return count\\\\n\\\", \\\"tests\\\": [\\\"assert divisible_pairs([1,2,3,4,5]) == 1\\\", \\\"assert divisible_pairs([6,8,16,24,36]) == 5\\\", \\\"assert divisible_pairs([2,3,5,7]) == 0\\\", \\\"assert divisible_pairs([]) == 0\\\"] }\""
}