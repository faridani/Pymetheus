{
    "model": "codebooga:latest",
    "response": "{\"title\": \"Easy - String Compression (Python)\", \"description\": \"Write a function `compress` that compresses a given string by removing consecutive duplicates of characters and return the compressed string. The order of characters must be maintained.\\n\\n#### Function Signature\\n```python\\ndef compress(s: str) -> str:\\n```\\n\\n#### Input\\n- `s` (str): A string containing lowercase alphabets only.\\n\\n#### Output\\n- Returns the compressed string.\\n\\n#### Example\\n```python\\nassert compress('aabcccccaaa') == 'a2b1c5a3'\\nassert compress('abcde') == 'a1b1c1d1e1'\\nassert compress('aaaaaaabbb') == 'a7b3'\\n```\", \"code\": \"def compress(s: str) -> str:\\n    compressed = []\\n    count = 1\\n    for i in range(len(s)): \\n        if i < len(s) - 1 and s[i] == s[i + 1]: \\n            count += 1 \\n        else: \\n            compressed.append(str(count)) \\n            compressed.append(s[i]) \\n            count = 1\\n    return ''.join(compressed)\", \"tests\": [\"assert compress('aabcccccaaa') == 'a2b1c5a3'\", \"assert compress('abcde') == 'a1b1c1d1e1'\", \"assert compress('aaaaaaabbb') == 'a7b3']\"]}"
}