"{'model': 'phi3:14b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Anagram Checker (Medium)\\\\\", \\\\\"description\\\\\": \\\\\"Two words are anagrams if they contain the same letters, but arranged differently. Write a function `is_anagram` that checks whether two given strings are anagrams of each other. The comparison should be case-insensitive and ignore any spaces or punctuation.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef is_anagram(s1: str, s2: str) -> bool:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `s1` (str): The first string to compare. May contain letters, numbers, spaces, and punctuation.\\\\\\\\n- `s2` (str): The second string to compare. May contain letters, numbers, spaces, and punctuation.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns `True` if the input strings are anagrams of each other, `False` otherwise.\\\\\", \\\\\"code\\\\\": \\\\\"from collections import Counter\\\\\\\\nimport re\\\\\\\\n\\\\\\\\ndef is_anagram(s1: str, s2: str) -> bool:\\\\\\\\n    # Remove non-alphanumeric characters and convert to lowercase\\\\\\\\n    cleaned_s1 = re.sub(\\'[^a-zA-Z0-9]\\', \\'\\', s1).lower()\\\\\\\\n    cleaned_s2 = re.sub(\\'[^a-zA-Z0-9]\\', \\'\\', s2).lower()\\\\\\\\n    # Check if the letter counts are equal using Counter from collections module\\\\\\\\n    return Counter(cleaned_score) == Counter(cleaned_score)\\\\\\\\n\\\\\", \\\\\"tests\\\\\": [\\\\\"assert is_anagram(\\\\\\\\\\\\\\\\\\\\\"Listen\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\"Silent\\\\\\\\\\\\\\\\\\\\\") == True\\\\\", \\\\\"assert is_anagram(\\\\\\\\\\\\\\\\\\\\\"Hello, world!\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\"dlrow olleh\\\\\\\\\\\\\\\\\\\\\") == False\\\\\", \\\\\"assert is_anagram(\\\\\\\\\\\\\\\\\\\\\"123 Cats\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\"Cats 321\\\\\\\\\\\\\\\\\\\\\") == True\\\\\", \\\\\"assert is_anagram(\\\\\\\\\\\\\\\\\\\\\"Astronomer!\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\"Moon starer.\\\\\\\\\\\\\\\\\\\\\") == True\\\\\"] }\"'}"