{
    "model": "llama3:latest",
    "response": "{\"title\": \"Easy: Maximum Sum of Subarray\", \"description\": \"A subarray is a contiguous sequence of elements within an array. The maximum sum of a subarray of a given array is the maximum possible sum among all its subarrays.\\n\\n#### Function Signature\\n```python\\ndef max_sum_of_subarray(arr: list[int)) -> int:\\n```\\n\\n#### Input\\n- `arr` (list[int]): A list of integers representing the array to find the maximum sum of subarray for.\\n\\n#### Output\\n- Returns the maximum possible sum among all its subarrays.\", \"code\": \"\\nimport math\\n\\ndef max_sum_of_subarray(arr: list[int)) -> int:\\n    n = len(arr)\\n    \\n    # Calculate the total sum of array\\n    total_sum = sum(arr)\\n    \\n    if total_sum < 0:\\n        return max(0, *arr)\\n    \\n    # Initialize maximum sum and minimum so far\\n    max_sum = min_sum = arr[0]\\n    \\n    for num in arr[1:]:\\n        new_max_sum = max(num, max_sum + num, min_sum + num)\\n        \\n        if new_max_sum > max_sum:\\n            max_sum = new_max_sum\\n            \\n        # Update minimum sum\\n        if new_max_sum < 0:\\n            new_min_sum = new_max_sum\\n        else:\\n            new_min_sum = min(min_sum, new_max_sum)\\n            \\n        min_sum = new_min_sum\\n        \\n    return max_sum\", \"tests\": [\"assert max_sum_of_subarray([-2,1,-3,4,-1,2,1,-5,4]) == 6\", \"assert max_sum_of_subarray([1, -2, 3, 10, -4, 7, 2, -5]) == 12\", \"assert max_sum_of_subarray([-5, -3, 5, 0, 0, 4, -1, 2, 3]) == 7\"]}"
}