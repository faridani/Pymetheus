{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Hard: Maximum Sum of Subarrays\\\", \\\"description\\\": \\\"Given an array of integers, find the maximum sum of subarrays with at most k elements. A subarray is a contiguous part of the original array.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_sum_subarrays(arr: list[int], k: int) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `arr` (list[int]): An array of integers.\\\\n- `k` (int): The maximum number of elements allowed in a subarray.\\\\n\\\\n#### Output\\\\n- Returns the maximum sum of all possible subarrays with at most k elements.\\\\n\\\", \\\"code\\\": \\\"from typing import List\\\\n\\\\ndef max_sum_subarrays(arr: List[int], k: int) -> int:\\\\n    n = len(arr)\\\\n    prefix_sum = [0] * (n + 1)\\\\n    for i in range(n):\\\\n        prefix_sum[i + 1] = prefix_sum[i] + arr[i]\\\\n    max_sum = float('-inf')\\\\n    for i in range(k, n + 1):\\\\n        for j in range(i - k + 1):\\\\n            max_sum = max(max_sum, prefix_sum[i] - prefix_sum[j])\\\\n    return max_sum\\\\n\\\", \\\"tests\\\": [\\\"assert max_sum_subarrays([1, -2, 3, 10, -4, 7, 2], 4) == 18\\\", \\\"assert max_sum_subarrays([-2, -3, 4, -1, -2, 1, 5, -3], 3) == 8\\\", \\\"assert max_sum_subarrays([1, 2, 3, 10, 11], 4) == 18\\\"] }\""
}