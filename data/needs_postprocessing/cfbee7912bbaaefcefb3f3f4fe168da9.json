"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"\\'Check if a given string is a Pangram (Hard)\\'\\\\\", \\\\\"description\\\\\": \\\\\"A pangram is a sentence or phrase that contains every letter of the alphabet at least once. Write a function `is_pangram` that checks if a given string is a pangram.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef is_pangram(s: str) -> bool:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `s` (str): A string with at least one word and containing only letters (upper or lower case). No spaces, punctuation, numbers, or special characters.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns `True` if the input string is a pangram, `False` otherwise.\\\\\\\\n\\\\\\\\n#### Constraints and Hints\\\\\\\\n- Case insensitive. For example, \\'Alphabet\\' and \\'alphabet\\' are treated as the same.\\\\\\\\n- The function should handle empty strings correctly (returns False).\\\\\", \\\\\"code\\\\\": \\\\\"def is_pangram(s: str) -> bool:\\\\\\\\n    s = s.lower()\\\\\\\\n    alphabet = string.ascii_lowercase\\\\\\\\n    set_s = set(s)\\\\\\\\n    return len(set_s) == len(alphabet) and set_s.issubset(alphabet)\\\\\\\\n\\\\\", \\\\\"tests\\\\\": [\\\\\"assert is_pangram(\\'The quick brown fox jumps over the lazy dog\\') == True\\\\\", \\\\\"assert is_pangram(\\'Alphabet soup\\') == True\\\\\", \\\\\"assert is_pangram(\\'A great example of a pangram is the alphabet\\') == True\\\\\", \\\\\"assert is_pangram(\\'This is not a pangram\\') == False\\\\\", \\\\\"assert is_pangram(\\'\\') == False\\\\\"] }\"'}"