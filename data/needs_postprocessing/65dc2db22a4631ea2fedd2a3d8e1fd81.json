{
    "model": "llama3:latest",
    "response": "{\"title\": \"Maximum Number of Ways to Partition a Set\", \"description\": \"Given a set of integers, find the maximum number of ways you can partition this set into subsets such that each subset contains consecutive integers.\\n\\n#### Function Signature\\n```python\\ndef max_partitions(nums: list[int)) -> int:\\n```\\n\\n#### Input\\n- `nums` (list[int]): A list of distinct integers.\\n\\n#### Output\\n- Returns the maximum number of ways you can partition the input set into subsets such that each subset contains consecutive integers.\", \"code\": \"\", \"\\nimport math\\n\\ndef max_partitions(nums: list[int)) -> int:\\n    if not nums:\\n        return 0\\n    \\n    nums.sort()\\n    partitions = 1\\n    current_range = [nums[0]]\\n    \\n    for num in nums[1:]:\\n        if num == current_range[-1] + 1:\\n            current_range.append(num)\\n        else:\\n            partitions += 1\\n            current_range = [num]\\n    \\n    return partitions - (current_range[-1] - current_range[0] > 0)\": \"tests\\\": [\\\"assert max_partitions([1, 2, 3, 4, 5]) == 1\", \"assert max_partitions([1, 3, 4, 7, 8, 10]) == 2\": \"assert max_partitions([1, 2, 6, 9, 11, 14, 15]) == 3\", \"assert max_partitions([]) == 0\": \"\"}"
}