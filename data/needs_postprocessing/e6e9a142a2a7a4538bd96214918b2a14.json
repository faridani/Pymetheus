{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Counting Islands\\\", \\\"description\\\": \\\"An island in a given binary grid is a connected group of 1s that are not surrounded by 2s on all sides. The grid cells have the following rules:\\\\n- A land cell (1) is surrounded by water cells (0) if it has at least one adjacent cell that is water, and at most one adjacent land cell.\\\\n- An island can be a single cell or multiple connected cells.\\\\n\\\\nWrite a function `count_islands` that takes as input a 2D list of binary values (0s and 1s) representing the grid, and returns the number of islands in the grid.\\\", \\\"code\\\": \\\"\\\\ndef count_islands(grid):\\\\n    if not grid:\\\\n        return 0\\\\n\\\\n    def dfs(i, j):\\\\n        if i<0 or j<0 or i>=len(grid) or j>=len(grid[0]) or grid[i][j] == 0:\\\\n            return\\\\n        grid[i][j] = 0\\\\n        dfs(i-1, j)\\\\n        dfs(i+1, j)\\\\n        dfs(i, j-1)\\\\n        dfs(i, j+1)\\\\n\\\\n    count = 0\\\\n    for i in range(len(grid)):\\\\n        for j in range(len(grid[0])):\\\\n            if grid[i][j] == 1:\\\\n                dfs(i, j)\\\\n                count += 1\\\\n\\\\n    return count\\\", \\\"tests\\\": [\\\"assert count_islands([['1','1','1','1','0'],['1','1','0','1','0'],['1','1','0','0','0']]) == 1\\\", \\\"assert count_islands([[\\\", 0, \\\",\\\", 0, \\\",\\\", 0, \\\",\\\", 0, \\\",\\\", 0, \\\"],\\\\n[\\\\\\\"0\\\\\\\",\\\\\\\"0\\\\\\\",\\\\\\\"0\\\\\\\",\\\\\\\"0\\\\\\\",\\\\\\\"0\\\\\\\"],\\\\n[\\\\\\\"0\\\\\\\",\\\\\\\"0\\\\\\\",\\\\\\\"0\\\\\\\",\\\\\\\"0\\\\\\\",\\\\\\\"0\\\\\\\"]]) == 0\\\", \\\"assert count_islands([[\\\", 1, \\\"],[\\\", 1, \\\"],[\\\", 1, \\\"]]) == 1\\\"] }\""
}