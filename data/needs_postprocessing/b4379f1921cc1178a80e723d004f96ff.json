"{'model': 'gemma2:27b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Hard: Balanced Parentheses\\\\\", \\\\\"description\\\\\": \\\\\"Given a string containing only parentheses (round brackets \\'(\\' and \\')\\'), write a function `is_balanced` that determines whether the parentheses are balanced. Parentheses are considered balanced if every opening parenthesis has a corresponding closing parenthesis, and they are properly nested.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef is_balanced(s: str) -> bool:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `s` (str): A string consisting of only parentheses \\'(\\' and \\')\\'.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns `True` if the parentheses in the input string are balanced, `False` otherwise.\\\\\", \\\\\"code\\\\\": \\\\\"def is_balanced(s: str) -> bool:\\\\\\\\n    stack = []\\\\\\\\n    for char in s:\\\\\\\\n        if char == \\'(\\':\\\\\\\\n            stack.append(char)\\\\\\\\n        elif char == \\')\\':\\\\\\\\n            if not stack or stack.pop() != \\'(\\'\\\\\\\\n                return False\\\\\\\\n    return len(stack) == 0\\\\\\\\n\\\\\", \\\\\"tests\\\\\": [\\\\\"\\'assert is_balanced(\\\\\\\\\\\\\"()\\\\\\\\\\\\\") == True\\'\\\\\", \\\\\"\\'assert is_balanced(\\\\\\\\\\\\\"(())\\\\\\\\\\\\\") == True\\'\\\\\", \\\\\"\\'assert is_balanced(\\\\\\\\\\\\\"(()())\\\\\\\\\\\\\") == True\\'\\\\\", \\\\\"\\'assert is_balanced(\\\\\\\\\\\\\"((\\\\\\\\\\\\\") == False\\'\\\\\", \\\\\"\\'assert is_balanced(\\\\\\\\\\\\\"))(\\\\\\\\\\\\\") == False\\'\\\\\", \\\\\"\\'assert is_balanced(\\\\\\\\\\\\\"())\\\\\\\\\\\\\") == False\\'\\\\\"] }\"'}"