{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Number of Islands\\\", \\\"description\\\": \\\"Given a 2D array of 0s and 1s, where each 1 represents a landmass and each 0 represents water, write a function `count_islands` that counts the number of islands in the given grid.\\\\n\\\\n#### Function Signature\\\\n```\\\\ndef count_islands(grid: list) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `grid` (list): A 2D array of 0s and 1s, where each 1 represents a landmass and each 0 represents water.\\\\n\\\\n#### Output\\\\n- Returns the number of islands in the given grid.\\\\n\\\", \\\"code\\\": \\\"\\\\nimport copy\\\\n\\\\ndef count_islands(grid):\\\\n    if not grid:\\\\n        return 0\\\\n\\\\n    count = 0\\\\n    for i in range(len(grid)):\\\\n        for j in range(len(grid[0])):\\\\n            if grid[i][j] == 1:\\\\n                count += 1\\\\n                dfs(grid, i, j)\\\\n\\\\n    return count\\\\n\\\\n\\\\ndef dfs(grid, i, j):\\\\n    if i < 0 or j < 0 or i >= len(grid) or j >= len(grid[0]) or grid[i][j] != 1:\\\\n        return\\\\n\\\\n    grid[i][j] = '#'\\\\n    directions = [(0, 1), (0, -1), (1, 0), (-1, 0)]\\\\n    for d in directions:\\\\n        dfs(grid, i + d[0], j + d[1])\\\\n\\\\n\\\\n\\\", \\\"tests\\\": [\\\"assert count_islands([[0,0,1,0,0],[0,0,1,0,0],[0,0,1,0,0]]) == 1\\\", \\\"assert count_islands([[0,0,1,0,0],[0,1,1,0,0],[0,0,1,0,0]]) == 2\\\", \\\"assert count_islands([[0,0,1,0,0],[0,0,1,0,0],[0,0,1,0,0]]) == 3\\\", \\\"assert count_islands([]) == 0\\\"] }\""
}