"{'model': 'mistral:latest', 'response': '{\"title\": \"\\'Check if a given string is anagram of another string (Medium)\\'\", \"description\": \"An anagram is a word or phrase that consists of the same letters as another, but arranged differently. Write a function `is_anagram` that checks if one string is an anagram of another.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef is_anagram(s1: str, s2: str) -> bool:\\\\n```\\\\n\\\\n#### Input\\\\n- `s1`, `s2` (str): Two strings containing only lowercase letters, numbers and spaces.\\\\n\\\\n#### Output\\\\n- Returns `True` if the given strings are anagrams of each other, `False` otherwise.\", \"code\": \"def is_anagram(s1: str, s2: str) -> bool:\\\\n    # Remove non-alphanumeric characters and convert to sorted lists\\\\n    s1 = \\'\\'.join(char for char in s1.lower() if char in string.ascii_letters + string.digits).split(\\'\\')\\\\ns2 = \\'\\'.join(char for char in s2.lower() if char in string.ascii_letters + string.digits).sorted()\\\\n    # Compare sorted lists\\\\n    return s1 == s2\", \"tests\": [\"assert is_anagram(\\\\\"listen\\\\\", \\\\\"silent\\\\\") == True\", \"assert is_anagram(\\\\\"racecar\\\\\", \\\\\"carrace\\\\\") == True\", \"assert is_anagram(\\\\\"hello\\\\\", \\\\\"world\\\\\") == False\", \"assert is_anagram(\\\\\"   A man, a plan, a canal, Panama \\\\\", \\\\\"amanaplanacanalpanama  a  man\\\\\") == True\"]}'}"