"{'model': 'qwen2:7b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Hard - Unique Character Substring\\\\\", \\\\\"description\\\\\": \\\\\"Given a string `s`, find the length of the longest substring that contains all unique characters. Write a function `longest_unique_substring` which takes a single argument, and returns the length of the longest substring with all distinct characters.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef longest_unique_substring(s: str) -> int:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `s`: A string composed of lowercase English alphabets (a-z).\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns an integer representing the length of the longest substring with all distinct characters.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"from collections import defaultdict\\\\\\\\n\\\\\\\\ndef longest_unique_substring(s: str) -> int:\\\\\\\\n    char_indices = defaultdict(int)\\\\\\\\n    left, max_length = 0, 0\\\\\\\\n    for right, char in enumerate(s):\\\\\\\\n        if char in char_indices:\\\\\\\\n            left = max(char_indices[char] + 1, left)\\\\\\\\n        char_indices[char] = right\\\\\\\\n        max_length = max(max_length, right - left + 1)\\\\\\\\n    return max_length\\\\\", \\\\\"tests\\\\\": [\\\\\"assert longest_unique_substring(\\\\\\\\\\\\\"abcabcbb\\\\\\\\\\\\\") == 3\\\\\", \\\\\"assert longest_unique_substring(\\\\\\\\\\\\\"bbbbb\\\\\\\\\\\\\") == 1\\\\\", \\\\\"assert longest_unique_substring(\\\\\\\\\\\\\"pwwkew\\\\\\\\\\\\\") == 3\\\\\", \\\\\"assert longest_unique_substring(\\\\\\\\\\\\\" \\\\\\\\\\\\\") == 1\\\\\"] }\"'}"