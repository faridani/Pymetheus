"{'model': 'qwen2:7b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Easy: Unique Binary Search Trees\\\\\", \\\\\"description\\\\\": \\\\\"Given an integer n, return the number of structurally unique BST\\'s (binary search trees) which has exactly n nodes. Example:\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef count_unique_bsts(n: int) -> int:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `n` (int): An integer representing the number of nodes in a binary search tree.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns an integer, which is the number of structurally unique BST\\'s with n nodes.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"def count_unique_bsts(n: int) -> int:\\\\\\\\n    if n <= 1:\\\\\\\\n        return 1\\\\\\\\n    result = 1\\\\\\\\n    for i in range(1, n):\\\\\\\\n        left_trees = count_unique_bsts(i - 1)\\\\\\\\n        right_trees = count_unique_bsts(n - i)\\\\\\\\n        result += left_trees * right_trees\\\\\\\\n    return result\\\\\", \\\\\"tests\\\\\": [\\\\\"assert count_unique_bsts(3) == 5\\\\\", \\\\\"assert count_unique_bsts(1) == 1\\\\\", \\\\\"assert count_unique_bsts(4) == 14\\\\\"] }\"'}"