{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Maximum Consecutive Sum\\\", \\\"description\\\": \\\"Given an array of integers, find the maximum sum that can be obtained by selecting some or all elements from the given array. This sum must be consecutive and in ascending order. For example, if the input array is [2, 3, -1, 5], then the maximum sum would be 5 (which is the sum of the last three elements), because this is the only possible sum that is both consecutive and in ascending order.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_consecutive_sum(arr: list[int)) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `arr` (list[int]): A list of integers.\\\\n\\\\n#### Output\\\\n- Returns the maximum sum that can be obtained by selecting some or all elements from the given array, which must be consecutive and in ascending order.\\\", \\\"code\\\": \\\"\\\\ndef max_consecutive_sum(arr: list[int)) -> int:\\\\n    arr.sort()\\\\n    max_sum = 0\\\\n    current_sum = 0\\\\n    for num in arr:\\\\n        if current_sum + num > 0:\\\\n            current_sum += num\\\\n        else:\\\\n            max_sum = max(max_sum, current_sum)\\\\n            current_sum = 0\\\\n    return max(sum(arr), max_sum + current_sum)\\\\n\\\\n\\\", \\\"tests\\\": [\\\"assert max_consecutive_sum([2, 3, -1, 5]) == 7\\\", \\\"assert max_consecutive_sum([-10, 1, 2, 3, 4]) == 9\\\", \\\"assert max_consecutive_sum([1, 1, 1, 1]) == 6\\\", \\\"assert max_consecutive_sum([]) == 0\\\"] }\""
}