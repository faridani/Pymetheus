{
    "model": "llama3:latest",
    "response": "{\"title\": \"Medium: Maximal Sum Subarray\", \"description\": \"#### Problem\\nA subarray of an array is a sequence of consecutive elements. Given an integer array, find the maximum sum of all possible subarrays.\\n\\n#### Function Signature\\n```python\\ndef maximal_sum_subarray(arr: list[int)) -> int:\\n```\\n\\n#### Input\\n- `arr` (list[int]): A list of integers.\\n\\n#### Output\\n- Returns the maximum sum of a subarray within the input array.\", \"code\": \"def maximal_sum_subarray(arr: list[int)) -> int:\\n    max_sum = float('-inf')\\n    current_sum = 0\\n    for num in arr:\\n        current_sum += num\\n        if current_sum > max_sum:\\n            max_sum = current_sum\\n        if current_sum < 0:\\n            current_sum = 0\\n    return max_sum\", \"tests\": [\"assert maximal_sum_subarray([-2,1,-3,4,-1,2,1,-5,4]) == 6\", \"assert maximal_sum_subarray([1, -2, 3, 10, -4, 7, 2, -5]) == 12\", \"assert maximal_sum_subarray([-1, 2, 3, 0, 1, 6]) == 7\"]}"
}