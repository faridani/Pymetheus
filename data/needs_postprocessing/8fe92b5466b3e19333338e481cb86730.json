{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Easy: Maximum Sum of Subarray\\\", \\\"description\\\": \\\"Given an integer array `nums`, return the maximum sum of a subarray. A subarray is a contiguous part of the array.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_sum_of_subarray(nums: list[int)) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `nums` (list[int]): An integer array that may contain negative numbers, zeros and positive numbers.\\\\n\\\\n#### Output\\\\n- Returns an integer representing the maximum sum of a subarray.\\\\n\\\", \\\"code\\\": \\\"def max_sum_of_subarray(nums: list[int)) -> int:\\\\n    if not nums:\\\\n        return 0\\\\n    current_sum = max_sum = nums[0]\\\\n    for num in nums[1:]:\\\\n        current_sum = max(num, current_sum + num)\\\\n        max_sum = max(max_sum, current_sum)\\\\n    return max_sum\\\\n\\\", \\\"tests\\\": [\\\"assert max_sum_of_subarray([1]) == 1\\\", \\\"assert max_sum_of_subarray([-2,1,-3,4,-1,2,1,-5,4]) == 6\\\", \\\"assert max_sum_of_subarray([0, -1, 10, 3]) == 13\\\"] }\""
}