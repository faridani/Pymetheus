{
    "model": "llama3:latest",
    "response": "{\"title\": \"Maximal Rectangle\", \"description\": \"Given a binary matrix and an integer K, find the maximum area of rectangle that can be formed by placing '0's as the boundary of the rectangle. The binary matrix consists only of '0's and '1's.\\n\\n#### Function Signature\\n```python\\ndef max_rectangle_area(matrix: list[list[int]], k: int) -> int:\\n```\\n\\n#### Input\\n- `matrix` (list[list[int]]): A 2D list of integers where each element is either 0 or 1, representing a binary matrix.\\n- `k` (int): An integer that represents the number of '0's allowed in the boundary of the rectangle.\\n\\n#### Output\\n- Returns the maximum area of rectangle that can be formed by placing '0's as the boundary of the rectangle.\", \"code\": \"from typing import List\\n\\ndef max_rectangle_area(matrix: List[List[int]], k: int) -> int:\\n    rows, cols = len(matrix), len(matrix[0])\\n    prefix_sum = [[0] * (cols + 1) for _ in range(rows + 1)]\\n    for i in range(1, rows + 1):\\n        for j in range(1, cols + 1):\\n            if matrix[i - 1][j - 1]:\\n                prefix_sum[i][j] = prefix_sum[i - 1][j] + prefix_sum[i][j - 1] - prefix_sum[i - 1][j - 1]\\n            else:\\n                prefix_sum[i][j] = min(prefix_sum[i - 1][j], prefix_sum[i][j - 1])\\n    max_area = 0\\n    for i in range(1, rows + 1):\\n        for j in range(1, cols + 1):\\n            if matrix[i - 1][j - 1] and prefix_sum[i][j] - prefix_sum[i - 1][j] <= k:\\n                max_area = max(max_area, (i * j) if i == j else min(i, j)\\n    return max_area\", \"tests\": [\"assert max_rectangle_area([[0, 0, 1], [1, 0, 1]], 2) == 3\", \"assert max_rectangle_area([[0, 1], [1, 1]], 1) == 2\", \"assert max_rectangle_area([[1, 1, 1], [1, 0, 1], [1, 1, 1]], 2) == 6\", \"assert max_rectangle_area([[1, 1, 1], [1, 0, 0], [1, 1, 1]], 3) == 4\"]}"
}