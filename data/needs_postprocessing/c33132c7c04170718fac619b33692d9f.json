{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Divisor Sum\\\", \\\"description\\\": \\\"Given a positive integer n, find the maximum sum of divisors of all numbers from 1 to n. For example, for n = 10, the maximum sum of divisors is 18 (because the divisors of 6 are 1, 2, 3, and 6, which sum up to 12, and the divisors of 9 are 1 and 9, which sum up to 10, so the total sum is 22). Write a function `max_sum_divisors` that calculates this maximum sum.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_sum_divisors(n: int) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `n` (int): A positive integer.\\\\n\\\\n#### Output\\\\n- The maximum sum of divisors of all numbers from 1 to `n`.\\\", \\\"code\\\": \\\"def max_sum_divisors(n: int) -> int:\\\\n    def divisor_sum(k: int) -> int:\\\\n        return sum(i for i in range(1, k + 1) if k % i == 0)\\\\n    return max(sum(divisor_sum(k) for k in range(1, n + 1)) for _ in range(n), initial=0)\\\\n\\\", \\\"tests\\\": [\\\"assert max_sum_divisors(10) == 18\\\", \\\"assert max_sum_divisors(20) == 30\\\", \\\"assert max_sum_divisors(50) == 72\\\"] }\""
}