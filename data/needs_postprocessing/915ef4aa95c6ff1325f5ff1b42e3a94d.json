"{'model': 'gemma2:27b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Hard:  Longest Consecutive Subsequence\\\\\", \\\\\"description\\\\\": \\\\\"Given an unsorted array of integers `nums`, return the length of the longest consecutive subsequence. \\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef longest_consecutive(nums: list[int]) -> int:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `nums` (list[int]): An unsorted list of integers.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns the length of the longest consecutive subsequence in the input list.\\\\\\\\nFor example, if nums = [100, 4, 200, 1, 3, 2], then the function should return 4 (corresponding to the subsequence [1, 2, 3, 4]).\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"def longest_consecutive(nums: list[int]) -> int:\\\\\\\\n    num_set = set(nums)\\\\\\\\n    longest_streak = 0\\\\\\\\n    for num in num_set:\\\\\\\\n        if num - 1 not in num_set:\\\\\\\\n            current_num = num\\\\\\\\n            current_streak = 1\\\\\\\\n            while current_num + 1 in num_set:\\\\\\\\n                current_num += 1\\\\\\\\n                current_streak += 1\\\\\\\\n            longest_streak = max(longest_streak, current_streak)\\\\\\\\n    return longest_streak\\\\\\\\n\\\\\", \\\\\"tests\\\\\": [\\\\\"assert longest_consecutive([100, 4, 200, 1, 3, 2]) == 4\\\\\", \\\\\"assert longest_consecutive([0, 3, 7, 2, 5, 8, 4, 6, 0, 1]) == 9\\\\\", \\\\\"assert longest_consecutive([1, 2, 0, 1]) == 3\\\\\"] }\"'}"