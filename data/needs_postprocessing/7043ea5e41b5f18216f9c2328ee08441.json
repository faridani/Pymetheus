{
    "model": "codestral:22b",
    "response": "\"{ \\\"title\\\": \\\"Hard: Multidimensional Array Rotation\\\", \\\"description\\\": \\\"You are given a multidimensional array `arr` of size `n x m`. Write a function `rotate_array` that rotates the array 90 degrees clockwise. The rotation should be done in-place, meaning that you modify the original array and don't create a new one.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef rotate_array(arr: List[List[int]]) -> None:\\\\n```\\\\n\\\\n#### Input\\\\n- `arr` (List[List[int]]): A 2D array of integers.\\\\n\\\\n#### Output\\\\n- The function should modify the input array in-place, so there is no return value.\\\", \\\"code\\\": \\\"from typing import List\\\\n\\\\ndef rotate_array(arr: List[List[int]]) -> None:\\\\n    n = len(arr)\\\\n    m = len(arr[0])\\\\n\\\\n    # Transpose the matrix\\\\n    for i in range(n):\\\\n        for j in range(i, m):\\\\n            arr[i][j], arr[j][i] = arr[j][i], arr[i][j]\\\\n\\\\n    # Reverse each row\\\\n    for i in range(n):\\\\n        arr[i].reverse()\\\", \\\"tests\\\": [\\\"arr = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\\\\nrotate_array(arr)\\\\nassert arr == [[7, 4, 1], [8, 5, 2], [9, 6, 3]]\\\", \\\"arr = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]]\\\\nrotate_array(arr)\\\\nassert arr == [[13, 9, 5, 1], [14, 10, 6, 2], [15, 11, 7, 3], [16, 12, 8, 4]]\\\"] }\""
}