{
    "model": "codestral:22b",
    "response": "\"{ \\\"title\\\": \\\"Hard: Minimum Swaps to Sort a Array\\\", \\\"description\\\": \\\"Given an array of n distinct elements, find the minimum number of swaps required to sort the array in ascending order.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef min_swaps(arr: List[int]) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `arr` (List[int]): A list of n distinct elements.\\\\n\\\\n#### Output\\\\n- Returns the minimum number of swaps required to sort the array in ascending order.\\\\n\\\", \\\"code\\\": \\\"def min_swaps(arr: List[int]) -> int:\\\\n    n = len(arr)\\\\n    arrpos = [*enumerate(arr)]\\\\n    arrpos.sort(key=lambda it: it[1])\\\\n    vis = {k: False for k in range(n)}\\\\n    ans = 0\\\\n    for i in range(n):\\\\n        if vis[i] or arrpos[i][0] == i:\\\\n            continue\\\\n        cycle_size = 0\\\\n        j = i\\\\n        while not vis[j]:\\\\n            vis[j] = True\\\\n            j = arrpos[j][0]\\\\n            cycle_size += 1\\\\n        if cycle_size > 0:\\\\n            ans += (cycle_size - 1)\\\\n    return ans\\\\n\\\", \\\"tests\\\": [\\\"assert min_swaps([4,3,2,1]) == 2\\\", \\\"assert min_swaps([1,5,2,4,3]) == 3\\\", \\\"assert min_swaps([1,2,3,4,5]) == 0\\\"] }\""
}