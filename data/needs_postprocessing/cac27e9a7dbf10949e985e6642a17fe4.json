{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Maximum Increasing Subsequence\\\", \\\"description\\\": \\\"A subsequence of a sequence is a sequence that can be obtained by deleting some elements without changing the order. Write a function `max_increasing_subsequence` that finds the maximum increasing subsequence in an array of integers.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_increasing_subsequence(nums: list[int)) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `nums` (list[int]): A list of integers.\\\\n\\\\n#### Output\\\\n- Returns the length of the maximum increasing subsequence in the input array.\\\", \\\"code\\\": \\\"\\\\nimport numpy as np\\\\n\\\\ndef max_increasing_subsequence(nums: list[int)) -> int:\\\\n    n = len(nums)\\\\n    dp = [1] * n\\\\n    for i in range(1, n):\\\\n        for j in range(i):\\\\n            if nums[i] > nums[j]:\\\\n                dp[i] = max(dp[i], dp[j] + 1)\\\\n    return max(dp)\\\\n\\\\n\\\", \\\"tests\\\": [\\\"assert max_increasing_subsequence([10,9,2,5,3,7,101,18]) == 4\\\", \\\"assert max_increasing_subsequence([17, 21, 23, 6, 19, 22, 20]) == 6\\\", \\\"assert max_increasing_subsequence([1, 2, 1]) == 2\\\", \\\"assert max_increasing_subsequence([5, 4, 3, 2, 1]) == 1\\\"] }\""
}