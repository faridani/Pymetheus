{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Maximum Consecutive Subarray Sum\\\", \\\"description\\\": \\\"A subarray of a given array is a contiguous part of the array. The maximum consecutive sum is the maximum sum that can be obtained by adding up all elements in any subarray.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_consecutive_sum(arr: list[int)) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `arr` (list[int]): A list of integers representing the input array.\\\\n\\\\n#### Output\\\\n- Returns the maximum consecutive sum that can be obtained by adding up all elements in any subarray.\\\\n\\\", \\\"code\\\": \\\"def max_consecutive_sum(arr: list[int)) -> int:\\\\n    if len(arr) == 0:\\\\n        return 0\\\\n    max_current = arr[0]\\\\n    max_global = arr[0]\\\\n    for i in range(1, len(arr)):\\\\n        max_current = max(arr[i], max_current + arr[i])\\\\n        if max_current > max_global:\\\\n            max_global = max_current\\\\n    return max_global\\\", \\\"tests\\\": [\\\"assert max_consecutive_sum([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6\\\", \\\"assert max_consecutive_sum([10, 20, 30, 40, 50]) == 150\\\", \\\"assert max_consecutive_sum([]) == 0\\\", \\\"assert max_consecutive_sum([-10, -20, -30, -40, -50]) == -1\\\"] }\""
}