"{'model': 'gemma2:27b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Hard: Longest Increasing Subsequence\\\\\", \\\\\"description\\\\\": \\\\\"Given an array of integers, find the length of the longest increasing subsequence.\\\\\\\\n\\\\\\\\nA sequence is a list of numbers that are in order. For example, [1, 2, 3] is a sequence but [1, 3, 2] is not.\\\\\\\\nAn increasing subsequence is a sequence where each number is greater than the one before it. For example, [1, 2, 3] and [2, 4, 6] are increasing subsequences, but [1, 2, 1] is not.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef longest_increasing_subsequence(nums: list[int]) -> int:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `nums` (list[int]): A list of integers.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns the length of the longest increasing subsequence.\\\\\", \\\\\"code\\\\\": \\\\\"def longest_increasing_subsequence(nums: list[int]) -> int:\\\\\\\\n    n = len(nums)\\\\\\\\n    dp = [1] * n\\\\\\\\n\\\\\\\\n    for i in range(1, n):\\\\\\\\n        for j in range(i):\\\\\\\\n            if nums[i] > nums[j] and dp[i] < dp[j] + 1:\\\\\\\\n                dp[i] = dp[j] + 1\\\\\\\\n\\\\\\\\n    return max(dp)\\\\\", \\\\\"tests\\\\\": [\\\\\"assert longest_increasing_subsequence([1, 3, 2, 4, 5]) == 4\\\\\", \\\\\"assert longest_increasing_subsequence([10,9,2,5,3,7,101,18]) == 4\\\\\"] }\"'}"