"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Roman Numeral Conversion\\\\\", \\\\\"description\\\\\": \\\\\"Write a function `to_roman` that converts an Arabic number to a string of its equivalent Roman numeral.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef to_roman(number: int) -> str:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `number` (int): A positive integer ranging from 1 to 3999.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns a string representation of the input number in Roman numerals.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"def to_roman(number: int) -> str:\\\\\\\\n    roman = {\\'I\\': 1, \\'V\\': 5, \\'X\\': 10, \\'L\\': 50, \\'C\\': 100, \\'D\\': 500, \\'M\\': 1000}\\\\\\\\n    result, previous_number = \\'\\', \\'\\'\\\\\\\\n    for numeral in (\\'M\\', \\'CM\\', \\'D\\', \\'CD\\', \\'C\\', \\'XC\\', \\'L\\', \\'XL\\', \\'X\\', \\'IX\\', \\'V\\', \\'IV\\'):\\\\\\\\n        while number - previous_number >= numeral:\\\\\\\\n            result += numeral\\\\\\\\n            number -= previous_number + numeral\\\\\\\\n        previous_number = number\\\\\\\\n    return result\\\\\", \\\\\"tests\\\\\": [\\\\\"assert to_roman(1) == \\'I\\'\\\\\", \\\\\"assert to_roman(3) == \\'III\\'\\\\\", \\\\\"assert to_roman(4) == \\'IV\\'\\\\\", \\\\\"assert to_roman(9) == \\'IX\\'\\\\\", \\\\\"assert to_roman(58) == \\'LVIII\\'\\\\\", \\\\\"assert to_roman(1994) == \\'MCMXCIV\\'\\\\\"] }\"'}"