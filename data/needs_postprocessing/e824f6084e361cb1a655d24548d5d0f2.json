{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Medium: Range Sum Queries\\\", \\\"description\\\": \\\"Given a list of integers and a series of range sum queries, write a function `range_sum_queries` that calculates the sum of all numbers within each query range. The input list may contain negative numbers.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef range_sum_queries(nums: List[int], queries: List[Tuple[int, int]]) -> List[int]:\\\\n```\\\\n\\\\n#### Input\\\\n- `nums` (List[int]): A list of integers.\\\\n- `queries` (List[Tuple[int, int]]): A list of tuples, where each tuple represents a range query. The first element in the tuple is the start index and the second element is the end index.\\\\n\\\\n#### Output\\\\n- Returns a list of integers, where each integer represents the sum of all numbers within its corresponding query range.\\\\n\\\", \\\"code\\\": \\\"\\\\nfrom typing import List, Tuple\\\\n\\\\ndef range_sum_queries(nums: List[int], queries: List[Tuple[int, int]]) -> List[int]:\\\\n    # Calculate prefix sums\\\\n    prefix_sums = [0]\\\\n    for num in nums:\\\\n        prefix_sums.append(prefix_sums[-1] + num)\\\\n    \\\\n    results = []\\\\n    for query in queries:\\\\n        start, end = query\\\\n        # Calculate sum using prefix sums\\\\n        result = prefix_sums[end + 1] - prefix_sums[start]\\\\n        results.append(result)\\\\n    \\\\n    return results\\\\n\\\", \\\"tests\\\": [\\\"assert range_sum_queries([-2, 4, 3], [(0, 1), (1, 2)]) == [6, 5]\\\", \\\"assert range_sum_queries([10, 20, 30, 40, 50], [(0, 2), (1, 3), (2, 4)]) == [60, 70, 60]\\\"] }\""
}