"{'model': 'mistral:latest', 'response': '{\"title\": \"\\\\\"Valid Parentheses\\' - Easy\\\\\",\\\\n    \\\\\"description\\\\\": \\\\\"Write a function `valid_parentheses` that takes a string of open and close parentheses as input and returns `True` if the parentheses are valid (i.e., properly nested), `False` otherwise.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef valid_parentheses(s: str) -> bool:\\\\n```\\\\n\\\\n#### Input\\\\n- `s` (str): A string containing only the characters \\'(\", \")\": \"n\\\\n#### Output\\\\n- Returns `True` if the input string has properly nested parentheses, `False` otherwise.\", \"code\": \"def valid_parentheses(s: str) -> bool:\\\\n    stack = []\\\\n    for char in s:\\\\n        if char == \\'(\\':\\\\n            stack.append(char)\\\\n        elif char == \\')\\':\\\\n            if not stack or stack.pop() != \\'(\\\\\\\\\\':\\\\n                return False\\\\n    return len(stack) == 0\", \"tests\": [\"assert valid_parentheses(\\'()\\') == True\", \"assert valid_parentheses(\\'())\\') == False\", \"assert valid_parentheses(\\'((()))\\') == True\", \"assert valid_parentheses(\\'(()))\\') == False\"]}'}"