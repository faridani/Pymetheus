"{'model': 'gemma2:27b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Hard - Minimum Cost Path\\\\\", \\\\\"description\\\\\": \\\\\"You are given a 2D grid of integers representing the cost of traversing each cell. Your task is to find the minimum cost path from the top-left corner (0, 0) to the bottom-right corner (m-1, n-1) of the grid. You can only move right or down at any given step.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef min_cost_path(grid: list[list[int]]) -> int:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `grid` (list[list[int]]): A 2D grid of integers representing the cost of traversing each cell.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns the minimum cost to reach the bottom-right corner from the top-left corner.\\\\\", \\\\\"code\\\\\": \\\\\"def min_cost_path(grid: list[list[int]]) -> int:\\\\\\\\n    m, n = len(grid), len(grid[0])\\\\\\\\n    dp = [[float(\\'inf\\')] * n for _ in range(m)]\\\\\\\\n    dp[0][0] = grid[0][0]\\\\\\\\n\\\\\\\\n    for i in range(m):\\\\\\\\n        for j in range(n):\\\\\\\\n            if i > 0:\\\\\\\\n                dp[i][j] = min(dp[i][j], dp[i - 1][j] + grid[i][j])\\\\\\\\n            if j > 0:\\\\\\\\n                dp[i][j] = min(dp[i][j], dp[i][j - 1] + grid[i][j])\\\\\\\\n\\\\\\\\n    return dp[m - 1][n - 1]\\\\\", \\\\\"tests\\\\\": [\\\\\"assert min_cost_path([[1, 3, 1],[1, 5, 1],[4, 2, 1]]) == 7\\\\\", \\\\\"assert min_cost_path([[1, 2, 3], [4, 8, 2], [1, 5, 3]]) == 11\\\\\", \\\\\"assert min_cost_path([[1,1],[1,1]]) == 2\\\\\"] }\"'}"