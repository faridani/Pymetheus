"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Anagram Checker (Hard)\\\\\", \\\\\"description\\\\\": \\\\\"Write a function `are_anagrams` that checks if two given strings are anagrams of each other. An anagram is a word or phrase that is formed by rearranging the letters of another, using all the original letters exactly once.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef are_anagrams(str1: str, str2: str) -> bool:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `str1` (str): A string that may contain letters and numbers, with no spaces or punctuation.\\\\\\\\n- `str2` (str): Another string that may contain letters and numbers, with no spaces or punctuation.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"def are_anagrams(str1: str, str2: str) -> bool:\\\\\\\\n    # Remove non-alphabetic characters and convert to lowercase\\\\\\\\n    s1 = \\'\\'.join(sorted(char for char in str1 if char.isalpha())).lower()\\\\\\\\n    s2 = \\'\\'.join(sorted(char for char in str2 if char.isalpha())).lower()\\\\\\\\n    # Check if the sorted strings are equal\\\\\\\\n    return s1 == s2\\\\\", \\\\\"tests\\\\\": [\\\\\"assert are_anagrams(\\'listen\\', \\'silent\\') == True\\\\\", \\\\\"assert are_anagrams(\\'hello\\', \\'world\\') == False\\\\\", \\\\\"assert are_anagrams(\\'act\\', \\'cat\\') == True\\\\\", \\\\\"assert are_anagrams(\\'racecar\\', \\'crazerac\\') == True\\\\\"] }\"'}"