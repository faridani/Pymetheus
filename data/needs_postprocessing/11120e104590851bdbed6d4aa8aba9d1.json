{
    "model": "llama3:latest",
    "response": "{\"title\": \"Counting Subarrays\", \"description\": \"Given an array of integers, write a function `count_subarrays` that returns the number of subarrays with exactly one 0.\\n\\n#### Function Signature\\n```python\\ndef count_subarrays(arr: list[int)) -> int:\\n```\\n\\n#### Input\\n- `arr` (list[int]): A list of integers.\\n\\n#### Output\\n- Returns an integer representing the number of subarrays with exactly one 0.\", \"code\": \"def count_subarrays(arr: list[int)) -> int:\\n    # Initialize count to 0\\n    count = 0\\n    # Iterate over all possible subarrays\\n    for i in range(len(arr)):\\n        for j in range(i + 1, len(arr) + 1):\\n            # Check if the subarray contains exactly one 0 and no other 0s after it\\n            if arr[i:j].count(0) == 1 and all(x != 0 for x in arr[i + 1:j]):\\n                count += 1\\n    return count\", \"tests\": [\"assert count_subarrays([0, 1, 0, 1, 0]) == 4\", \"assert count_subarrays([0, 1, 1, 0, 0]) == 2\", \"assert count_subarrays([0, 0, 1, 1]) == 3\", \"assert count_subarrays([1, 1, 1]) == 0\"]}"
}