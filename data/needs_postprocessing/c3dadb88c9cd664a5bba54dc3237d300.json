"{'model': 'gemma2:27b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Hard - Matrix Pathfinding with Obstacles\\\\\", \\\\\"description\\\\\": \\\\\"Given a square matrix of integers representing a grid, where 0 represents an open path and 1 represents an obstacle, find the number of unique paths from the top-left corner to the bottom-right corner. You can only move down or right at each step.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef num_paths(grid: list[list[int]]) -> int:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `grid` (list[list[int]]): A square matrix representing the grid.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns the number of unique paths from the top-left corner to the bottom-right corner.\\\\\", \\\\\"code\\\\\": \\\\\"def num_paths(grid: list[list[int]]) -> int:\\\\\\\\n    n = len(grid)\\\\\\\\n    dp = [[0 for _ in range(n)] for _ in range(n)]\\\\\\\\n    dp[0][0] = 1 if grid[0][0] == 0 else 0\\\\\\\\n\\\\\\\\n    for i in range(n):\\\\\\\\n        for j in range(n):\\\\\\\\n            if grid[i][j] == 1:\\\\\\\\n                continue\\\\\\\\n            if i > 0: \\\\\\\\n                dp[i][j] += dp[i-1][j]\\\\\\\\n            if j > 0: \\\\\\\\n                dp[i][j] += dp[i][j-1]\\\\\\\\n    return dp[n-1][n-1]\\\\\", \\\\\"tests\\\\\": [\\\\\"assert num_paths([[0,0,0],[0,1,0],[0,0,0]]) == 2\\\\\", \\\\\"assert num_paths([[0,1],[0,0]]) == 1\\\\\", \\\\\"assert num_paths([[0,0,1],[0,1,0],[1,0,0]]) == 1\\\\\"] }\"'}"