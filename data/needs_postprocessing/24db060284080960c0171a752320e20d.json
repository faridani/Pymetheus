"{'model': 'gemma2:27b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Hard: Longest Increasing Subsequence with a Twist\\\\\", \\\\\"description\\\\\": \\\\\"You are given an array of integers `nums`. Find the length of the longest increasing subsequence (LIS) where each element in the subsequence is at least twice the value of its preceding element. \\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef longest_increasing_subsequence_with_twist(nums: list[int]) -> int:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `nums` (list[int]): A list of integers.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns the length of the longest increasing subsequence where each element is at least twice its preceding element. If no such subsequence exists, return 0.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"def longest_increasing_subsequence_with_twist(nums: list[int]) -> int:\\\\\\\\n    n = len(nums)\\\\\\\\n    dp = [1] * n\\\\\\\\n\\\\\\\\n    for i in range(1, n):\\\\\\\\n        for j in range(i):\\\\\\\\n            if nums[i] >= 2 * nums[j] and dp[i] < dp[j] + 1:\\\\\\\\n                dp[i] = dp[j] + 1\\\\\\\\n\\\\\\\\n    return max(dp) if max(dp) > 1 else 0\\\\\", \\\\\"tests\\\\\": [\\\\\"assert longest_increasing_subsequence_with_twist([1,2,4,8]) == 4\\\\\", \\\\\"assert longest_increasing_subsequence_with_twist([1,3,2,4]) == 2\\\\\", \\\\\"assert longest_increasing_subsequence_with_twist([10,5,7,14]) == 2\\\\\", \\\\\"assert longest_increasing_subsequence_with_twist([1,2,3,6,9]) == 4\\\\\"] }\"'}"