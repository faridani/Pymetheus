{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Finding the Smallest Rectangle\\\", \\\"description\\\": \\\"You are given a list of points, where each point is represented by two integers (x and y) indicating its coordinates on a 2D plane. Your task is to find the smallest rectangle that covers all these points.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef smallest_rectangle(points: list[tuple[int, int]]) -> tuple[int, int, int, int]:\\\\n```\\\\n\\\\n#### Input\\\\n- `points` (list[tuple[int, int]]): A list of 2D points, where each point is a tuple of two integers representing its coordinates.\\\\n\\\\n#### Output\\\\n- Returns the smallest rectangle that covers all input points. The rectangle should be returned as a tuple of four integers: `(x1, y1, x2, y2)`, where `x1` and `y1` are the top-left coordinates, and `x2` and `y2` are the bottom-right coordinates.\\\\n\\\", \\\"code\\\": \\\"\\\\nfrom typing import List, Tuple\\\\n\\\\ndef smallest_rectangle(points: List[Tuple[int, int]]) -> Tuple[int, int, int, int]:\\\\n    min_x = float('inf')\\\\n    max_x = float('-inf')\\\\n    min_y = float('inf')\\\\n    max_y = float('-inf')\\\\n\\\\n    for point in points:\\\\n        x, y = point\\\\n        min_x = min(min_x, x)\\\\n        max_x = max(max_x, x)\\\\n        min_y = min(min_y, y)\\\\n        max_y = max(max_y, y)\\\\n\\\\n    return (min_x, min_y, max_x, max_y)\\\\n\\\", \\\"tests\\\": [\\\"assert smallest_rectangle([(0, 0), (1, 0), (2, 0)]) == (0, 0, 2, 0)\\\", \\\"assert smallest_rectangle([(0, 0), (1, 0), (2, 1), (3, 1), (4, 1), (5, 1)]) == (0, 0, 5, 1)\\\", \\\"assert smallest_rectangle([(0, 0), (1, 1), (2, 2), (3, 3)]) == (0, 0, 3, 3)\\\"] }\""
}