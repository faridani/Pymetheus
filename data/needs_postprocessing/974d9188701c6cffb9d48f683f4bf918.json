{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Hard: Maximum Difference Subarray Sum\\\", \\\"description\\\": \\\"Given an array of integers, find the maximum difference between the sum of any two subarrays. A subarray is a contiguous part of the array.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_diff_subarray_sum(arr: list[int)) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `arr` (list[int]): A list of integers.\\\\n\\\\n#### Output\\\\n- Returns the maximum difference between the sum of any two subarrays.\\\", \\\"code\\\": \\\"def max_diff_subarray_sum(arr: list[int)) -> int:\\\\n    if len(arr) < 3:\\\\n        return 0\\\\n    max_diff = float('-inf')\\\\n    current_sum = 0\\\\n    for i in range(len(arr)):\\\\n        current_sum += arr[i]\\\\n        left_sum = current_sum - (i > 0 and arr[0:i].sum())\\\\n        right_sum = current_sum\\\\n        max_diff = max(max_diff, abs(left_sum) + abs(right_sum))\\\\n    return max_diff\\\\n\\\", \\\"tests\\\": [\\\"assert max_diff_subarray_sum([1, 2, 3, 4, -5]) == 9\\\", \\\"assert max_diff_subarray_sum([-1, 1, 1, -2, 2, 2, -5, 5]) == 11\\\", \\\"assert max_diff_subarray_sum([]) == 0\\\", \\\"assert max_diff_subarray_sum([1]) == 0\\\"] }\""
}