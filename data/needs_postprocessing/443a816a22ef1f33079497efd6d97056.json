{
    "model": "llama3:latest",
    "response": "{\"title\": \"Maximum Sum of Subarray\", \"description\": \"Given an array of integers, find the maximum sum of a subarray within that array. A subarray is a contiguous part of the array.\\n\\n#### Function Signature\\n```python\\ndef max_sum_subarray(arr: list[int)) -> int:\\n```\\n\\n#### Input\\n- `arr` (list[int]): A list of integers.\\n\\n#### Output\\n- Returns the maximum sum of a subarray within the input array.\", \"code\": \"def max_sum_subarray(arr: list[int)) -> int:\\n    # Initialize maximum sum and current sum to the first element of the array\\n    max_sum = current_sum = arr[0]\\n    for num in arr[1:]:\\n        # Update current sum to be the maximum of the current number or the sum of the current number and the previous current sum\\n        current_sum = max(num, current_sum + num)\\n        # Update maximum sum if the current sum is greater\\n        max_sum = max(max_sum, current_sum)\\n    return max_sum\", \"tests\": [\"assert max_sum_subarray([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6\", \"assert max_sum_subarray([1]) == 1\", \"assert max_sum_subarray([-1, 0, 1]) == 2\", \"assert max_sum_subarray([-2147483648]) == -2147483648\"]}"
}