"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Anagram Detection (Hard)\\\\\", \\\\\"description\\\\\": \\\\\"Given two strings, write a function to check if they are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef are_anagrams(s1: str, s2: str) -> bool:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `s1` (str): A string containing only lowercase English alphabets.\\\\\\\\n- `s2` (str): Another string containing only lowercase English alphabets.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns `True` if the input strings are anagrams of each other, `False` otherwise.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"def are_anagrams(s1: str, s2: str) -> bool:\\\\\\\\n    # Sort both strings in alphabetical order\\\\\\\\n    sorted_s1 = sorted(list(s1))\\\\\\\\n    sorted_s2 = sorted(list(s2))\\\\\\\\n    \\\\\\\\n    # Check if the sorted strings are equal\\\\\\\\n    return sorted_s1 == sorted_s2\\\\\", \\\\\"tests\\\\\": [\\\\\"assert are_anagrams(\\'listen\\', \\'silent\\') == True\\\\\", \\\\\"assert are_anagrams(\\'hello\\', \\'world\\') == False\\\\\", \\\\\"assert are_anagrams(\\'act\\', \\'cat\\') == True\\\\\", \\\\\"assert are_anagrams(\\'dog\\', \\'god\\') == False\\\\\"] }\"'}"