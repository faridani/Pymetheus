{
    "model": "llama3:latest",
    "response": "{\"title\": \"Medium: Maximum Sum of Subarray\", \"description\": \"Write a function `max_sum_subarray` that takes an array of integers as input and returns the maximum sum of a subarray within the given array.\\n\\n#### Function Signature\\n```python\\ndef max_sum_subarray(arr: list[int)) -> int:\\n```\\n\\n#### Input\\n- `arr` (list[int]): An array of integers.\\n\\n#### Output\\n- Returns the maximum sum of a subarray within the given array.\", \"code\": \"def max_sum_subarray(arr: list[int)) -> int:\\n    # Initialize maximum sum and current sum to negative infinity\\n    max_sum = float('-inf')\\n    curr_sum = 0\\n\\n    for num in arr:\\n        # Add the current number to the current sum, but if it's less than 0 reset to 0\\n        curr_sum = max(0, curr_sum + num)\\n\\n        # Update maximum sum if the current sum is greater\\n        max_sum = max(max_sum, curr_sum)\\n\\n    return max_sum\", \"tests\": [\"assert max_sum_subarray([-2,1,-3,4,-1,2,1,-5,4]) == 6\", \"assert max_sum_subarray([1, -3, 2, 3, -2]) == 6\", \"assert max_sum_subarray([0, -1, 0, 1, 0]) == 1\", \"assert max_sum_subarray([-5, -4, -3, -2, -1, 0, 1, 2]) == 3\"]}"
}