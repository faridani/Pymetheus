{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Easy: Divisor Sum\\\", \\\"description\\\": \\\"Given a positive integer n, write a function `divisor_sum` that calculates the sum of all its proper divisors (excluding itself). For example, for input 12, the output should be 16 because 1+2+3+4+6=16. The function should return -1 if the number is prime (i.e., it has no proper divisors other than 1).\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef divisor_sum(n: int) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `n` (int): A positive integer.\\\\n\\\\n#### Output\\\\n- The sum of all the proper divisors of `n`, excluding itself. If `n` is prime, returns -1.\\\", \\\"code\\\": \\\"def divisor_sum(n: int) -> int:\\\\n    if n <= 1:\\\\n        return -1\\\\n    sum_divisors = 0\\\\n    for i in range(2, int(n ** 0.5) + 1):\\\\n        while n % i == 0:\\\\n            sum_divisors += i\\\\n            n //= i\\\\n    if n > 1:\\\\n        sum_divisors += n\\\\n    return -1 if sum_divisors == 1 else sum_divisors\\\", \\\"tests\\\": [\\\"assert divisor_sum(12) == 16\\\", \\\"assert divisor_sum(7) == -1\\\", \\\"assert divisor_sum(24) == 28\\\", \\\"assert divisor_sum(13) == -1\\\"] }\""
}