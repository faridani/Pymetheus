"{'model': 'qwen2:7b', 'response': '{\"title\": \"Minimum Window Substring\", \"description\": \"Given two strings `source` and `target`, find the minimum window substring of `source` which will contain all characters of `target`. The order of characters does not matter, but each character from `target` must appear at least once in the window.\", \"function_signature\": \"```python\\\\ndef min_window_substring(source: str, target: str) -> str:\\\\n    pass\\\\n```\", \"input_format\": \"- `source`: A string containing only lowercase English characters.\\\\n- `target`: A string containing only lowercase English characters.\", \"output_format\": \"- Returns the minimum window substring in source which will contain all characters of target. If no such window exists, return an empty string.\", \"constraints\": \"1 <= len(source) <= 4 * 10^4\\\\n1 <= len(target) <= 26\", \"hints\": \"Use a sliding window approach to find the minimum substring containing all characters of target.\"}'}"