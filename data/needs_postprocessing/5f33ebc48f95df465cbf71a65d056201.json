"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Pythagorean Triplets Finder (Medium)\\\\\", \\\\\"description\\\\\": \\\\\"A Pythagorean triplet is a set of three natural numbers, a < b < c, for which a^2 + b^2 = c^2. Write a function `find_triplets` that finds all unique Pythagorean triplets up to 1000.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef find_triplets() -> list:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\nNo input needed for this function.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\nThe function should return a list of unique Pythagorean triplets as tuples, where each triplet is sorted in ascending order (a, b, c). Example: [(3, 4, 5), (5, 12, 13)]\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"def find_triplets():\\\\\\\\n    # Initialize a list to store the triplets\\\\\\\\n    triplets = []\\\\\\\\n    # Iterate through possible values of c up to the square root of 1000\\\\\\\\n    for c in range(1, int(math.sqrt(1000)) + 1):\\\\\\\\n        # Calculate a and b using the Pythagorean theorem\\\\\\\\n        a = (5 * c) // 2\\\\\\\\nb = (c * (c - a))\\\\\\\\n        # Check if a, b and c are integers\\\\\\\\n        if a.is_integer() and b.is_integer() and c.is_integer():\\\\\\\\n            # If they are, add the triplet to the list of triplets\\\\\\\\n            triplets.append((a, b, c))\\\\\\\\n    return triplets\\\\\", \\\\\"tests\\\\\": [\\\\\"assert len(find_triplets()) == 24\\\\\", \\\\\"\\'Expected output: [(3, 4, 5), (5, 12, 13)], actual output: [.....]\\'\\\\\", \\\\\"assert 3 in find_triplets()\\\\\", \\\\\"assert 8 in find_triplets()\\\\\", \\\\\"assert 15 in find_triplets()\\\\\", \\\\\"assert 20 in find_triplets()\\\\\"] }\"'}"