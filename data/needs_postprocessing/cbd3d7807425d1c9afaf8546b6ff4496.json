"{'model': 'gemma2:27b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Hard - Longest Consecutive Sequence\\\\\", \\\\\"description\\\\\": \\\\\"Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence. You may not use extra space (O(1) memory complexity).\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef longestConsecutive(nums: list[int]) -> int:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `nums` (list[int]): A list of integers that may contain duplicates.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns the length of the longest consecutive sequence in the input array.\\\\\\\\n\\\\\\\\n#### Constraints\\\\\\\\n- 0 <= len(nums) <= 10^5\\\\\\\\n- -10^9 <= nums[i] <= 10^9\\\\\", \\\\\"code\\\\\": \\\\\"def longestConsecutive(nums: list[int]) -> int:\\\\\\\\n    longest_streak = 0\\\\\\\\n    num_set = set(nums)\\\\\\\\n\\\\\\\\n    for num in num_set:\\\\\\\\n        if num - 1 not in num_set:\\\\\\\\n            current_num = num\\\\\\\\n            current_streak = 1\\\\\\\\n\\\\\\\\n            while current_num + 1 in num_set:\\\\\\\\n                current_num += 1\\\\\\\\n                current_streak += 1\\\\\\\\n\\\\\\\\n            longest_streak = max(longest_streak, current_streak)\\\\\\\\n\\\\\\\\n    return longest_streak\\\\\", \\\\\"tests\\\\\": [\\\\\"\\'assert longestConsecutive([100,4,200,1,3,2]) == 4\\'\\\\\", \\\\\"\\'assert longestConsecutive([0,3,7,2,5,8,4,6,0,1]) == 9\\'\\\\\"] }\"'}"