"{'model': 'mistral:latest', 'response': '{\"title\": \"\\'Anagram Finder: Find all anagrams of a given string (Hard)\\'\", \"description\": \"An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Write a function `find_anagrams` that takes a string as input and returns all its unique anagrams in the form of a list.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef find_anagrams(s: str) -> List[str]:\\\\n```\\\\n\\\\n#### Input\\\\n- `s` (str): A string that may contain letters, numbers and spaces.\\\\n\\\\n#### Output\\\\n- Returns a list of strings where each string is an anagram of the input string.\", \"code\": \"def find_anagrams(s: str) -> List[str]:\\\\n    # Remove duplicates and non-alphabetic characters\\\\n    s = \\'\\'.join(sorted(char for char in s if char.isalpha())).lower()\\\\n    anagrams = []\\\\n    for word in set(map(\\'\\'.join, itertools.permutations(list(s))):\\\\n        # Check if the permutation is a valid anagram by sorting the characters and comparing with the input string\\\\n        if sorted(word) == s:\\\\n            anagrams.append(word)\\\\n    return anagrams\", \"tests\": [\"assert find_anagrams(\\'listen\\') == [\\'enlist\\', \\'silent\\']\", \"assert find_anagrams(\\'abcdefg\\') == []\", \"assert find_anagrams(\\'hello world\\') == [\\'olleh dlrow\\']\"]}'}"