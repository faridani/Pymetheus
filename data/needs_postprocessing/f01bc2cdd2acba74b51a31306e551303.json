{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Easy: Perfect Squares\\\", \\\"description\\\": \\\"Write a function `perfect_squares` that takes a list of integers as input and returns the number of perfect squares present in the list. A perfect square is an integer that is the square of an integer. For example, 1, 4, 9, 16 are all perfect squares.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef perfect_squares(lst: list[int]) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `lst` (list[int]): A list of integers.\\\\n\\\\n#### Output\\\\n- Returns the number of perfect squares present in the input list.\\\\n\\\", \\\"code\\\": \\\"import math\\\\n\\\\ndef perfect_squares(lst: list[int]) -> int:\\\\n    count = 0\\\\n    for num in lst:\\\\n        root = math.isqrt(num)\\\\n        if root ** 2 == num:\\\\n            count += 1\\\\n    return count\\\", \\\"tests\\\": [\\\"assert perfect_squares([1, 4, 9, 16]) == 4\\\", \\\"assert perfect_squares([1, 10, 25, 36]) == 3\\\", \\\"assert perfect_squares([1, 2, 3, 4]) == 0\\\", \\\"assert perfect_squares([]) == 0\\\"] }\""
}