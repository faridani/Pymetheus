{
    "model": "codestral:22b",
    "response": "\"{ \\\"title\\\": \\\"[Hard] Longest Increasing Subsequence\\\", \\\"description\\\": \\\"Given an array of integers, find the length of the longest increasing subsequence. Write a function `longest_increasing_subsequence` that takes in an array of integers and returns the length of the longest increasing subsequence.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef longest_increasing_subsequence(nums: List[int]) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `nums` (List[int]): A list of integers.\\\\n\\\\n#### Output\\\\n- Returns an integer representing the length of the longest increasing subsequence.\\\", \\\"code\\\": \\\"from typing import List\\\\ndef longest_increasing_subsequence(nums: List[int]) -> int:\\\\n    if not nums:\\\\n        return 0\\\\n    dp = [1] * len(nums)\\\\n    for i in range(len(nums)):\\\\n        for j in range(i):\\\\n            if nums[j] < nums[i]:\\\\n                dp[i] = max(dp[i], dp[j] + 1)\\\\n    return max(dp)\\\", \\\"tests\\\": [\\\"assert longest_increasing_subsequence([10, 9, 2, 5, 3, 7, 101, 18]) == 4\\\", \\\"assert longest_increasing_subsequence([0, 1, 0, 3, 2, 3]) == 4\\\", \\\"assert longest_increasing_subsequence([]) == 0\\\", \\\"assert longest_increasing_subsequence([7, 7, 7, 7, 7, 7, 7]) == 1\\\"] }\""
}