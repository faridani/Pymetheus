{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Easy: Counting Islands\\\", \\\"description\\\": \\\"An island is any landmass that is completely surrounded by water. In this problem, we consider '1' as land and '0' as water in a binary grid representation. Write a function `count_islands` that counts the number of islands in the given 2D array.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef count_islands(grid: list[list[str]]) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `grid` (list[list[str]]): A 2D binary grid where '1' represents land and '0' represents water.\\\\n\\\\n#### Output\\\\n- Returns the number of islands in the input grid.\\\\n\\\", \\\"code\\\": \\\"def count_islands(grid: list[list[str]]) -> int:\\\\n    if not grid or not grid[0]:\\\\n        return 0\\\\n    count = 0\\\\n    for i in range(len(grid)):\\\\n        for j in range(len(grid[0])):\\\\n            if grid[i][j] == '1':\\\\n                self._dfs(grid, i, j)\\\\n                count += 1\\\\n    return count\\\\n\\\\n    def _dfs(self, grid, i, j):\\\\n        if i<0 or j<0 or i>=len(grid) or j>=len(grid[0]) or grid[i][j] != '1':\\\\n            return\\\\n        grid[i][j] = '0'\\\\n        self._dfs(grid, i-1, j)\\\\n        self._dfs(grid, i+1, j)\\\\n        self._dfs(grid, i, j-1)\\\\n        self._dfs(grid, i, j+1)\\\", \\\"tests\\\": [\\\"assert count_islands([['0','0','0'],['1','1','0'],['0','1','0']]) == 1\\\", \\\"assert count_islands([['0','0','0'],['1','0','0'], ['0','1','0']]) == 2\\\", \\\"assert count_islands([]) == 0\\\", \\\"assert count_islands([['0'], ['0'], ['0']]) == 0\\\"] }\""
}