{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Easy: Maximum Sum of Subarray\\\", \\\"description\\\": \\\"Given an array of integers, find the maximum sum of a contiguous subarray within the given array.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_sum_subarray(arr: list[int)) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `arr` (list[int]): A list of integers.\\\\n\\\\n#### Output\\\\n- Returns the maximum sum of a contiguous subarray.\\\\n\\\", \\\"code\\\": \\\"def max_sum_subarray(arr: list[int)) -> int:\\\\n    if not arr:\\\\n        return 0\\\\n    max_sum = current_sum = arr[0]\\\\n    for num in arr[1:]:\\\\n        current_sum = max(num, current_sum + num)\\\\n        max_sum = max(max_sum, current_sum)\\\\n    return max_sum\\\", \\\"tests\\\": [\\\"assert max_sum_subarray([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6\\\", \\\"assert max_sum_subarray([1]) == 1\\\", \\\"assert max_sum_subarray([]) == 0\\\", \\\"assert max_sum_subarray([-1, 2, -3, 4, -1, 2, 1]) == 6\\\"] }\""
}