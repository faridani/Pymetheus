{
    "model": "llama3:latest",
    "response": "{\"title\": \"Maximum Sum Subarray\", \"description\": \"Given a list of integers, write a function that returns the maximum sum of any contiguous subarray. For example, given the list [1, -2, 3, 10, -4, 7, 2], the maximum sum would be 18 (from the subarray [10, 7, 2]).\\n\\n#### Function Signature\\n```python\\ndef max_sum_subarray(nums: list[int)) -> int:\\n```\\n\\n#### Input\\n- `nums` (list[int]): A list of integers.\\n\\n#### Output\\n- Returns the maximum sum of any contiguous subarray.\", \"code\": \"def max_sum_subarray(nums: list[int)) -> int:\\n    if not nums:\\n        return 0\\n    max_current = max_global = nums[0]\\n    for num in nums[1:]:\\n        max_current = max(num, max_current + num)\\n        max_global = max(max_global, max_current)\\n    return max_global\", \"tests\": [\"assert max_sum_subarray([1, -2, 3, 10, -4, 7, 2]) == 18\", \"assert max_sum_subarray([-1, 0, 1, 2, -1, -6]) == 6\", \"assert max_sum_subarray([]) == 0\", \"assert max_sum_subarray([1]) == 1\"]}"
}