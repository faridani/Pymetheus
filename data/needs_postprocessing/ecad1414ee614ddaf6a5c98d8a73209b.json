{
    "model": "llama3:latest",
    "response": "{\"title\": \"Minimum Number of Operations to Make Array Beautiful\", \"description\": \"A beautiful array is an array where the difference between the maximum and minimum element is as small as possible. Write a function `min_operations` that takes a list of integers as input and returns the minimum number of operations required to make the array beautiful.\\n\\n#### Function Signature\\n```python\\ndef min_operations(arr: list[int)) -> int:\\n```\\n\\n#### Input\\n- `arr` (list[int]): A list of integers.\\n\\n#### Output\\n- Returns the minimum number of operations required to make the array beautiful. An operation is defined as increasing or decreasing an element in the array by 1.\", \"code\": \"\\ndef min_operations(arr: list[int)) -> int:\\n    arr.sort()\\n    max_diff = arr[-1] - arr[0]\\n    operations = 0\\n    for i in range(1, len(arr)):\\n        diff = arr[i] - arr[i-1]\\n        if diff > max_diff // 2:\\n            return -1  # This array cannot be made beautiful\\n        operations += abs(diff)\\n    return operations\", \"tests\": [\"assert min_operations([10, 30]) == 20\", \"assert min_operations([5, 6, 7, 8, 9]) == 0\", \"assert min_operations([-1, -2, 0, 1, 3]) == 7\", \"assert min_operations([1, 2, 4, 5, 10]) == 9\"]}"
}