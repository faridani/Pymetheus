{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Maximum Sum of Arithmetic Subarrays (Hard)\\\", \\\"description\\\": \\\"An arithmetic sequence is a sequence of numbers where the difference between any two consecutive terms is constant. Given an array `arr` of integers, write a function that returns the maximum sum of all arithmetic subarrays in `arr`. An arithmetic subarray is a contiguous segment of `arr` that forms an arithmetic sequence.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_arithmetic_subarray_sum(arr: list[int)) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `arr` (list[int]): A list of integers where each integer represents the value in the array.\\\\n\\\\n#### Output\\\\n- Returns the maximum sum of all arithmetic subarrays in `arr`.\\\", \\\"code\\\": \\\"\\\\ndef max_arithmetic_subarray_sum(arr: list[int)) -> int:\\\\n    n = len(arr)\\\\n    max_sum = float('-inf')\\\\n    \\\\n    for i in range(n):\\\\n        diff = arr[i+1] - arr[i]\\\\n        \\\\n        if diff == 0:\\\\n            continue\\\\n        \\\\n        sum_arithmetic = arr[i]\\\\n        \\\\n        for j in range(i + 2, n):\\\\n            if arr[j] - arr[j-1] != diff:\\\\n                break\\\\n            sum_arithmetic += arr[j]\\\\n        \\\\n        max_sum = max(max_sum, sum_arithmetic)\\\\n    \\\\n    return max_sum\\\", \\\"tests\\\": [\\\"assert max_arithmetic_subarray_sum([10, 20, 30, 40, 50]) == 150\\\", \\\"assert max_arithmetic_subarray_sum([-1, -2, -3, -4, -5]) == -9\\\", \\\"assert max_arithmetic_subarray_sum([1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66, 78, 91, 105]) == 210\\\"] }\""
}