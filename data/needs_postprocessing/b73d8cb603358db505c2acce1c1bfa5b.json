"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Anagram Finder (Hard)\\\\\", \\\\\"description\\\\\": \\\\\"Write a function `find_anagrams` that finds all the anagrams of a given string within a list of strings.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef find_anagrams(target: str, words: List[str]) -> List[str]:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `target` (str): The target string to find anagrams of.\\\\\\\\n- `words` (List[str]): A list of strings containing possible anagrams.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns a list of strings that are anagrams of the input target string.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"from collections import Counter\\\\\\\\n\\\\\\\\ndef find_anagrams(target: str, words: List[str]) -> List[str]:\\\\\\\\n    # Count the occurrences of each character in the target string\\\\\\\\n    target_count = Counter(target)\\\\\\\\n    \\\\\\\\n    # Find anagrams by checking if a word has the same character counts as the target\\\\\\\\n    anagrams = [word for word in words if Counter(word) == target_count]\\\\\", \\\\\"tests\\\\\": [\\\\\"assert find_anagrams(\\'listen\\', [\\'enlists\\', \\'silent\\', \\'net\\', \\'hillside\\', \\'tinsel\\']) == [\\'enlists\\', \\'silent\\']\\\\\", \\\\\"assert find_anagrams(\\'programming\\', [\\'graphem\\', \\'gnarlimp\\', \\'margarp\\']) == [\\'programming\\']\\\\\", \\\\\"assert find_anagrams(\\'java\\', [\\'avaj\\', \\'jave\\', \\'vaja\\']) == [\\'avaj\\', \\'jave\\', \\'vaja\\']\\\\\"] }\"'}"