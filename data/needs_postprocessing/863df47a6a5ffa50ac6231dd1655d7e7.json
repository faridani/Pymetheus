{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Maximum Sum of Non-adjacent Elements\\\", \\\"description\\\": \\\"Given an array of integers `nums`, find the maximum sum of non-adjacent elements. For example, if `nums = [2, 7, 9, 3, 1]`, then the maximum sum of non-adjacent elements is `2 + 9 + 1 = 12`. The function should return the maximum sum.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_sum_non_adjacent(nums: list[int)) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n* `nums` (list[int]): A list of integers where each integer is a valid value in an array.\\\\n\\\\n#### Output\\\\n* Returns the maximum sum of non-adjacent elements.\\\\n\\\", \\\"code\\\": \\\"\\\\ndef max_sum_non_adjacent(nums: list[int)) -> int:\\\\n    if len(nums) <= 2:\\\\n        return max(0, max(nums))\\\\n\\\\n    incl = 0\\\\n    excl = max(0, nums[0])\\\\n\\\\n    for i in range(1, len(nums)):\\\\n        new_excl = max(excl, incl)\\\\n        incl = excl + nums[i]\\\\n        excl = new_excl\\\\n\\\\n    return max(incl, excl)\\\\n\\\\n\\\", \\\"tests\\\": [\\\"assert max_sum_non_adjacent([2, 7, 9, 3, 1]) == 12\\\", \\\"assert max_sum_non_adjacent([-5, 1, -8, 10, -2]) == 11\\\", \\\"assert max_sum_non_adjacent([]) == 0\\\", \\\"assert max_sum_non_adjacent([1]) == 1\\\"] }\""
}