{
    "model": "llama3:latest",
    "response": "{\"title\": \"Medium: Valid Parentheses\", \"description\": \"Write a function `is_valid_parentheses` that checks if a given string of parentheses is valid. A string of parentheses is considered valid if every open parenthesis has a corresponding close parenthesis and they are properly nested.\\n\\n#### Function Signature\\n```python\\ndef is_valid_parentheses(s: str) -> bool:\\n```\\n\\n#### Input\\n- `s` (str): A string that contains only parentheses characters '(' and ')'.\\n\\n#### Output\\n- Returns `True` if the input string of parentheses is valid, `False` otherwise.\", \"code\": \"\", \"\\ndef is_valid_parentheses(s: str) -> bool:\\n    stack = []\\n    for char in s:\\n        if char == '(':\\n            stack.append(char)\\n        elif char == ')':\\n            if len(stack) == 0:\\n                return False\\n            stack.pop()\\n    return len(stack) == 0\": \"\", \"tests\": [\"assert is_valid_parentheses(\", \"(())\", \") == True\", \"assert is_valid_parentheses(\\\")(\\\")\\\") == False\\\", \\\"assert is_valid_parentheses(\\\"(\\\")\\\"\", false, \", \\\"assert is_valid_parentheses(\\\"\", true]}"
}