{
    "model": "llama3:latest",
    "response": "{\"title\": \"Counting Prime Factors\", \"description\": \"Write a function `prime_factors` that takes an integer `n` as input and returns the count of distinct prime factors of `n`. A prime factor is a prime number that divides `n`.\\n\\n#### Function Signature\\n```python\\ndef prime_factors(n: int) -> int:\\n```\\n\\n#### Input\\n- `n` (int): An integer for which you need to find the count of distinct prime factors.\\n\\n#### Output\\n- Returns the count of distinct prime factors of `n`.\\n\\n#### Constraints\\n- The input number is a positive integer.\\n- You can assume that the input number does not exceed 10^6.\\n\\n```python\\ndef prime_factors(n: int) -> int:\\n    def find_prime_factors(num):\\n        i = 2\\n        factors = set()\\n        while i * i <= num:\\n            if num % i:\\n                i += 1\\n            else:\\n                num //= i\\n                factors.add(i)\\n        if num > 1:\\n            factors.add(num)\\n        return len(factors)\\n\\n    return find_prime_factors(n)\\n```\\n\\n{'tests': ['assert prime_factors(10) == 2', 'assert prime_factors(12) == 2', 'assert prime_factors(24) == 3', 'assert prime_factors(30) == 4']\"}"
}