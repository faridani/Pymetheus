{
    "model": "codestral:22b",
    "response": "\"{ \\\"title\\\": \\\"Hard: Unique Paths in a Grid\\\", \\\"description\\\": \\\"You are given an M x N grid. You start at the top-left corner and your goal is to reach the bottom-right corner. Each cell can be either blocked or open, you can only move down or right from each cell. Write a function `unique_paths` that calculates the number of unique paths from the top-left to the bottom-right.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef unique_paths(m: int, n: int) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `m` (int): The number of rows in the grid\\\\n- `n` (int): The number of columns in the grid\\\\n\\\\n#### Output\\\\n- Returns the number of unique paths from the top-left to the bottom-right.\\\\n\\\", \\\"code\\\": \\\"def unique_paths(m: int, n: int) -> int:\\\\n    # Create a 2D array to store results\\\\n    dp = [[1]*n for _ in range(m)]\\\\n\\\\n    # Calculate number of paths for each cell\\\\n    for i in range(1, m):\\\\n        for j in range(1, n):\\\\n            dp[i][j] = dp[i-1][j] + dp[i][j-1]\\\\n\\\\n    return dp[-1][-1]\\\\n\\\", \\\"tests\\\": [\\\"assert unique_paths(3, 7) == 28\\\", \\\"assert unique_paths(3, 2) == 3\\\", \\\"assert unique_paths(7, 3) == 28\\\", \\\"assert unique_paths(5, 5) == 70\\\"] }\""
}