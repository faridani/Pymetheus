"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"\\'Anagram Finder (Hard)\\'\\\\\", \\\\\"description\\\\\": \\\\\"Write a function `find_anagrams` that takes a list of strings as input and returns another list containing the pairs of strings that are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef find_anagrams(words: List[str]) -> List[List[str]]:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `words` (List[str]): A list of strings containing only lowercase English alphabets.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns a list, where each inner list contains the anagrams of a given word in the input list.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"def find_anagrams(words: List[str]) -> List[List[str]]:\\\\\\\\n    # Sort the words and store them in a dictionary\\\\\\\\n    word_dict = {sorted(word): word for word in words}\\\\\\\\n    \\\\\\\\n    anagrams = []\\\\\\\\n    # Iterate through each sorted word\\\\\\\\n    for sorted_word in sorted(set(sorted(word) for word in words)):\\\\\\\\n        # If a word with the same sorted form is found, add it to the list of anagrams\\\\\\\\n        if sorted_word in word_dict:\\\\\\\\n            anagrams.append([word_dict[sorted_word], sorted_word])\\\\\\\\n    \\\\\\\\n    return anagrams\\\\\", \\\\\"tests\\\\\": [\\\\\"assert find_anagrams([\\\\\\\\\\\\\"listen\\\\\\\\\\\\\", \\\\\\\\\\\\\"silent\\\\\\\\\\\\\", \\\\\\\\\\\\\"enlist\\\\\\\\\\\\\"]) == [[\\\\\\\\\\\\\"listen\\\\\\\\\\\\\", \\\\\\\\\\\\\"enlist\\\\\\\\\\\\\"], [\\\\\\\\\\\\\"silent\\\\\\\\\\\\\"]]\\\\\\\\n\\\\\", \\\\\"assert find_anagrams([\\\\\\\\\\\\\"civic\\\\\\\\\\\\\", \\\\\\\\\\\\\"clown\\\\\\\\\\\\\", \\\\\\\\\\\\\"viccage\\\\\\\\\\\\\", \\\\\\\\\\\\\"wince\\\\\\\\\\\\\", \\\\\\\\\\\\\"wince\\\\\\\\\\\\\", \\\\\\\\\\\\\"wincek\\\\\\\\\\\\\", \\\\\\\\\\\\\"wrinkle\\\\\\\\\\\\\", \\\\\\\\\\\\\"crew\\\\\\\\\\\\\"]) == [[\\\\\\\\\\\\\"civic\\\\\\\\\\\\\", \\\\\\\\\\\\\"viccage\\\\\\\\\\\\\"], [\\\\\\\\\\\\\"clown\\\\\\\\\\\\\", \\\\\\\\\\\\\"wince\\\\\\\\\\\\\", \\\\\\\\\\\\\"wince\\\\\\\\\\\\\", \\\\\\\\\\\\\"wincek\\\\\\\\\\\\\"], [\\\\\\\\\\\\\"wrinkle\\\\\\\\\\\\\"]]\\\\\", \\\\\"assert find_anagrams([\\\\\\\\\\\\\"python\\\\\\\\\\\\\", \\\\\\\\\\\\\"typhon\\\\\\\\\\\\\", \\\\\\\\\\\\\"phyton\\\\\\\\\\\\\"]) == [[\\\\\\\\\\\\\"python\\\\\\\\\\\\\", \\\\\\\\\\\\\"phyton\\\\\\\\\\\\\"], [\\\\\\\\\\\\\"typhon\\\\\\\\\\\\\"]]\\\\\"] }\"'}"