"{'model': 'gemma2:27b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Hard: Lexicographically Smallest Rotation\\\\\", \\\\\"description\\\\\": \\\\\"Given a string <i>s</i>, find the lexicographically smallest rotation of it. A rotation of a string is formed by moving characters from the beginning to the end. For example, the rotations of \\\\\\\\\\\\\"abc\\\\\\\\\\\\\" are \\\\\\\\\\\\\"abc\\\\\\\\\\\\\", \\\\\\\\\\\\\"bca\\\\\\\\\\\\\", and \\\\\\\\\\\\\"cab\\\\\\\\\\\\\".\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef smallest_rotation(s: str) -> str:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `s` (str): A string containing lowercase letters only.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns the lexicographically smallest rotation of the input string.\\\\\", \\\\\"code\\\\\": \\\\\"def smallest_rotation(s: str) -> str:\\\\\\\\n    smallest = s\\\\\\\\n    for i in range(len(s)):\\\\\\\\n        rotation = s[i:] + s[:i]\\\\\\\\n        if rotation < smallest:\\\\\\\\n            smallest = rotation\\\\\\\\n    return smallest\\\\\", \\\\\"tests\\\\\": [\\\\\"\\'assert smallest_rotation(\\\\\\\\\\\\\"abc\\\\\\\\\\\\\") == \\'abc\\'\\\\\", \\\\\"\\'assert smallest_rotation(\\\\\\\\\\\\\"cba\\\\\\\\\\\\\") == \\'abc\\'\\\\\", \\\\\"\\'assert smallest_rotation(\\\\\\\\\\\\\"bba\\\\\\\\\\\\\") == \\'abb\\'\\\\\", \\\\\"\\'assert smallest_rotation(\\\\\\\\\\\\\"abababa\\\\\\\\\\\\\") == \\'abababa\\'\\\\\"] }\"'}"