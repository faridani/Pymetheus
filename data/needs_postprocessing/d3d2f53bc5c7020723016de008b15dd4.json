{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Easy: Longest Increasing Subsequence\\\", \\\"description\\\": \\\"Given an array of integers, find the length of the longest increasing subsequence.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef longest_increasing_subsequence(arr: list[int)) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `arr` (list[int]): A list of integers.\\\\n\\\\n#### Output\\\\n- Returns the length of the longest increasing subsequence.\\\\n\\\", \\\"code\\\": \\\"def longest_increasing_subsequence(arr: list[int)) -> int:\\\\n    n = len(arr)\\\\n    dp = [1] * n\\\\n    for i in range(1, n):\\\\n        for j in range(i):\\\\n            if arr[i] > arr[j]:\\\\n                dp[i] = max(dp[i], dp[j] + 1)\\\\n    return max(dp)\\\", \\\"tests\\\": [\\\"assert longest_increasing_subsequence([10, 9, 2, 5, 3, 7, 101, 18]) == 4\\\", \\\"assert longest_increasing_subsequence([0, 1, 2, 3, 4, 5]) == 6\\\", \\\"assert longest_increasing_subsequence([-1, -2, -3, -4, -5]) == 1\\\", \\\"assert longest_increasing_subsequence([]) == 0\\\"] }\""
}