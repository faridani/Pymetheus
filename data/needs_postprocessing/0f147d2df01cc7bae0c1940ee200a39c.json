"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Anagram Detection\\\\\", \\\\\"description\\\\\": \\\\\"Write a function `find_anagrams` that given a list of words, finds all pairs of anagrams within the list. Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef find_anagrams(words: List[str]) -> List[List[str]]:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `words` (List[str]): A list of strings containing words, each word may contain only lowercase letters.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns a list of lists, where each sublist contains all the anagrams within the original list that can form a pair.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"from collections import Counter\\\\\\\\ndef find_anagrams(words: List[str]) -> List[List[str]]:\\\\\\\\n    # Create a dictionary to count the occurrence of each letter in each word\\\\\\\\n    word_count = { Counter(word) for word in words }\\\\\\\\n    # Find pairs of words where their corresponding counter dictionaries are equal\\\\\\\\n    anagrams = [pair for word1, word2 in combinations(words, 2) if word_count[Counter(word1)] == word_count[Counter(word2)]]\\\\\\\\n\\\\\", \\\\\"tests\\\\\": [\\\\\"assert find_anagrams([\\'listen\\', \\'silent\\', \\'enlist\\']) == [[\\'listen\\', \\'silent\\'], [\\'enlist\\']]\\\\\", \\\\\"assert find_anagrams([\\'hello\\', \\'world\\', \\'hollo\\', \\'dlrow\\']) == [[\\'hello\\', \\'hollo\\'], [\\'dlrow\\']]\\\\\"] }\"'}"