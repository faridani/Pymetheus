"{'model': 'mistral:latest', 'response': '{\"title\": \"\\'Anagram Detector (Hard)\\'\", \"description\": \"An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Write a function `find_anagrams` that finds all possible anagrams for a given string.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef find_anagrams(word: str) -> list[str]:\\\\n```\\\\n\\\\n#### Input\\\\n- `word` (str): A string containing only lowercase letters, with no spaces or special characters.\\\\n\\\\n#### Output\\\\n- Returns a list of strings representing all possible anagrams for the given input word.\", \"code\": \"from itertools import permutations\\\\ndef find_anagrams(word: str) -> list[str]:\\\\n    # Ensure input is lowercase\\\\n    word = word.lower()\\\\n    # Generate all possible permutations of the letters in the word\\\\n    perms = [\", \"tests\": [\"assert find_anagrams(\\'listen\\') == [\\'enlist\\', \\'silent\\', \\'slient\\']\", \"assert find_anagrams(\\'programming\\') == [\\'gnippromarap\\', \\'grnamropmg\\', \\'programminG\\']\", \"assert find_anagrams(\\'apple\\') == [\\'apple\\']\"]}'}"