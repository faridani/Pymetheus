"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Anagram Detection (Hard)\\\\\", \\\\\"description\\\\\": \\\\\"Given two strings, determine if they are anagrams of each other.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef are_anagrams(s1: str, s2: str) -> bool:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `s1` (str): A string containing only lowercase letters, numbers, and spaces.\\\\\\\\n- `s2` (str): A string containing only lowercase letters, numbers, and spaces.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"def are_anagrams(s1: str, s2: str) -> bool:\\\\\\\\n    # Remove non-alphabetic characters and convert to set\\\\\\\\n    s1_set = set(filter(str.isalpha, s1)).lower()\\\\\\\\n    s2_set = set(filter(str.isalpha, s2)).lower()\\\\\\\\n    \\\\\\\\n    # Check if the two sets have the same number of elements and all elements appear in both sets\\\\\\\\n    return len(s1_set) == len(s2_set) and s1_set <= s2_set\\\\\", \\\\\"tests\\\\\": [\\\\\"assert are_anagrams(\\\\\\\\\\\\\"listen\\\\\\\\\\\\\", \\\\\\\\\\\\\"silent\\\\\\\\\\\\\") == True\\\\\", \\\\\"assert are_anagrams(\\\\\\\\\\\\\"python\\\\\\\\\\\\\", \\\\\\\\\\\\\"typhon\\\\\\\\\\\\\") == False\\\\\", \\\\\"assert are_anagrams(\\\\\\\\\\\\\"   anagram   \\\\\", \\\\\"antigramma   \\\\\\\\\\\\\") == True\\\\\"] }\"'}"