{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Hard: Maximum Sum of a Subarray\\\", \\\"description\\\": \\\"A subarray of an array is a contiguous part of the array. The maximum sum of a subarray is the maximum value that can be obtained by adding all elements in a subarray. Write a function `max_sum_subarray` that finds the maximum sum of a subarray.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_sum_subarray(arr: list[int]) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `arr` (list[int]): A list of integers.\\\\n\\\\n#### Output\\\\n- Returns the maximum sum of a subarray.\\\\n\\\", \\\"code\\\": \\\"def max_sum_subarray(arr: list[int]) -> int:\\\\n    if not arr:\\\\n        return 0\\\\n    current_sum = max_sum = arr[0]\\\\n    for num in arr[1:]:\\\\n        current_sum = max(num, current_sum + num)\\\\n        max_sum = max(max_sum, current_sum)\\\\n    return max_sum\\\\n\\\", \\\"tests\\\": [\\\"assert max_sum_subarray([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6\\\", \\\"assert max_sum_subarray([1, 2, 3, 4, 5, 6]) == 21\\\", \\\"assert max_sum_subarray([-1, -2, -3, -4, -5]) == -1\\\", \\\"assert max_sum_subarray([]) == 0\\\"] }\""
}