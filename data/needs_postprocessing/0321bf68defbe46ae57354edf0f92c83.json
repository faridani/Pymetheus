{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Easy: Find Maximum Sum of Subarray\\\", \\\"description\\\": \\\"Given an array of integers, find the maximum sum of a contiguous subarray within it.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_sum_subarray(arr: list[int)) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `arr` (list[int]): A list of integers.\\\\n\\\\n#### Output\\\\n- Returns the maximum sum of a contiguous subarray within the input array.\\\\n\\\", \\\"code\\\": \\\"def max_sum_subarray(arr: list[int)) -> int:\\\\n    max_sum = float('-inf')\\\\n    current_sum = 0\\\\n    for num in arr:\\\\n        current_sum += num\\\\n        if current_sum > max_sum:\\\\n            max_sum = current_sum\\\\n        elif current_sum < 0:\\\\n            current_sum = 0\\\\n    return max_sum\\\", \\\"tests\\\": [\\\"assert max_sum_subarray([-2, -3, 4, -1, -2, 1, 5, -3]) == 7\\\", \\\"assert max_sum_subarray([1, 2, 3, 10, -8, 9]) == 24\\\", \\\"assert max_sum_subarray([-1, -2, -3, -4, -5]) == 0\\\", \\\"assert max_sum_subarray([]) == 0\\\"] }\""
}