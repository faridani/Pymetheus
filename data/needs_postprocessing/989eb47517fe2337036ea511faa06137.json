"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Anagram Checker (Hard)\\\\\", \\\\\"description\\\\\": \\\\\"Write a function `is_anagram` that checks if two strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of another, such as \\'listen\\' and \\'silent\\'.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef is_anagram(s1: str, s2: str) -> bool:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `s1`, `s2` (str): Two strings containing only lowercase letters and no spaces.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns `True` if the input strings are anagrams of each other, `False` otherwise.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"def is_anagram(s1: str, s2: str) -> bool:\\\\\\\\n    # Remove spaces and convert to sorted lists\\\\\\\\n    s1 = list(sorted(filter(str.isalpha, s1)))\\\\\\\\n    s2 = list(sorted(filter(str.isalpha, s2)))\\\\\\\\n    # Check if the two sorted lists are equal\\\\\\\\n    return s1 == s2\\\\\", \\\\\"tests\\\\\": [\\\\\"assert is_anagram(\\'listen\\', \\'silent\\') == True\\\\\", \\\\\"assert is_anagram(\\'hello\\', \\'world\\') == False\\\\\", \\\\\"assert is_anagram(\\'morsecode\\', \\'edcomsrom\\') == True\\\\\"] }\"'}"