"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"\\'Anagram Detector (Hard)\\'\\\\\", \\\\\"description\\\\\": \\\\\"An anagram is a word or phrase that consists of the same letters as another, but in a different order. For example, \\'listen\\' and \\'silent\\' are anagrams.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef find_anagrams(words: List[str]) -> Dict[str, List[str]]:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `words` (List[str]): A list of strings containing words to be checked for anagrams.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns a dictionary where keys are unique words and values are lists of other words that are anagrams of the key word.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"from collections import Counter\\\\\\\\n\\\\\\\\ndef find_anagrams(words: List[str]) -> Dict[str, List[str]]:\\\\\\\\n    # Create a dictionary with counts of each character for each word\\\\\\\\n    anagram_dict = {word: Counter(word) for word in words}\\\\\\\\n    # Find pairs of words that have the same count for each character\\\\\\\\n    result = {\\\\\\\\n        key: [val for val in words if anagram_dict[key] == anagram_dict[val] and key != val]\\\\\\\\n        for key, _ in anagram_dict.items()}\\\\\\\\n    return {k: sorted(v) for k, v in result.items()}\\\\\", \\\\\"tests\\\\\": [\\\\\"assert find_anagrams([\\\\\\\\\\\\\"listen\\\\\\\\\\\\\", \\\\\\\\\\\\\"silent\\\\\\\\\\\\\", \\\\\\\\\\\\\"enlist\\\\\\\\\\\\\", \\\\\\\\\\\\\"service\\\\\\\\\\\\\"]) == {\\\\\\\\\\\\\"listen\\\\\\\\\\\\\": [\\\\\\\\\\\\\"silent\\\\\\\\\\\\\", \\\\\\\\\\\\\"enlist\\\\\\\\\\\\\"], \\\\\\\\\\\\\"service\\\\\\\\\\\\\": []}\\\\\", \\\\\"assert find_anagrams([\\\\\\\\\\\\\"civic\\\\\\\\\\\\\", \\\\\\\\\\\\\"clown\\\\\\\\\\\\\", \\\\\\\\\\\\\"vicious\\\\\\\\\\\\\", \\\\\\\\\\\\\"iconic\\\\\\\\\\\\\", \\\\\\\\\\\\\"victor\\\\\\\\\\\\\", \\\\\\\\\\\\\"cooling\\\\\\\\\\\\\"]) == {\\\\\\\\\\\\\"civic\\\\\\\\\\\\\": [\\\\\\\\\\\\\"clown\\\\\\\\\\\\\", \\\\\\\\\\\\\"vicious\\\\\\\\\\\\\"], \\\\\\\\\\\\\"vicious\\\\\\\\\\\\\": [\\\\\\\\\\\\\"clown\\\\\\\\\\\\\"], \\\\\\\\\\\\\"iconic\\\\\\\\\\\\\": [], \\\\\\\\\\\\\"cooling\\\\\\\\\\\\\": []}\\\\\", \\\\\"assert find_anagrams([\\\\\\\\\\\\\"python\\\\\\\\\\\\\", \\\\\\\\\\\\\"typhon\\\\\\\\\\\\\", \\\\\\\\\\\\\"hotyp\\\\\\\\\\\\\", \\\\\\\\\\\\\"htopy\\\\\\\\\\\\\"]) == {\\\\\\\\\\\\\"python\\\\\\\\\\\\\": [\\\\\\\\\\\\\"typhon\\\\\\\\\\\\\", \\\\\\\\\\\\\"hotyp\\\\\\\\\\\\\", \\\\\\\\\\\\\"htopy\\\\\\\\\\\\\"]}\\\\\"] }\"'}"