{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Hard: Perfect Squares\\\", \\\"description\\\": \\\"A perfect square is a number that can be expressed as the square of an integer. For example, 16 is a perfect square because it can be expressed as 4^2. Write a function `perfect_squares` that generates all perfect squares in a given range.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef perfect_squares(start: int, end: int) -> list[int]:\\\\n```\\\\n\\\\n#### Input\\\\n- `start` (int): The start of the range (inclusive).\\\\n- `end` (int): The end of the range (exclusive).\\\\n\\\\n#### Output\\\\n- Returns a list of all perfect squares in the given range.\\\\n\\\", \\\"code\\\": \\\"import math\\\\n\\\\ndef perfect_squares(start: int, end: int) -> list[int]:\\\\n    result = []\\\\n    for i in range(int(math.sqrt(start)), int(math.sqrt(end)) + 1):\\\\n        square = i ** 2\\\\n        if start <= square < end:\\\\n            result.append(square)\\\\n    return result\\\\n\\\", \\\"tests\\\": [\\\"assert perfect_squares(0, 100) == [0, 1, 4, 9, 16, 25, 36, 49, 64, 81],\\\", \\\"assert perfect_squares(-10, -5) == []\\\", \\\"assert perfect_squares(100, 200) == [121, 144, 169, 196]\\\", \\\"assert perfect_squares(1, 20) == [1, 4, 9, 16, 25]\\\"] }\""
}