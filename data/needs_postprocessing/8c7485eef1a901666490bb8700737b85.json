{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Number of Islands\\\", \\\"description\\\": \\\"Given a 2D binary grid, which represents an image composed of 1s and 0s. An island is a group of 1s that are connected vertically or horizontally. Write a function `numIslands` that calculates the number of islands in the given grid.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef numIslands(grid: List[List[int]]) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `grid` (List[List[int]]): A 2D binary grid, where each cell is either 0 or 1. The grid may contain rows and columns of varying lengths.\\\\n\\\\n#### Output\\\\n- Returns the number of islands in the given grid.\\\", \\\"code\\\": \\\"def numIslands(grid: List[List[int]]) -> int:\\\\n    if not grid:\\\\n        return 0\\\\n    count = 0\\\\n    for i in range(len(grid)):\\\\n        for j in range(len(grid[0])):\\\\n            if grid[i][j] == 1:\\\\n                self._dfs(grid, i, j)\\\\n                count += 1\\\\n    return count\\\\n\\\\n    def _dfs(self, grid: List[List[int]], i: int, j: int):\\\\n        if i<0 or j<0 or i>=len(grid) or j>=len(grid[0]) or grid[i][j] == 0:\\\\n            return\\\\n        grid[i][j] = 0\\\\n        self._dfs(grid, i-1, j)\\\\n        self._dfs(grid, i+1, j)\\\\n        self._dfs(grid, i, j-1)\\\\n        self._dfs(grid, i, j+1)\\\", \\\"tests\\\": [\\\"assert numIslands([[0,0,1,0,0],[1,0,1,1,0],[0,1,0,0,1],[0,1,0,0,1],[0,0,0,0,0]]) == 1\\\", \\\"assert numIslands([[1,1,0,0,0],[1,1,0,0,0],[0,0,1,0,0],[0,0,0,1,1]]) == 3\\\"] }\""
}