{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Easy: Number of Islands\\\", \\\" description\\\": \\\"You are given a 2D grid where each cell can be either water (represented as 0) or land (represented as 1). You are also given the coordinates of an island in the grid. Write a function `count_islands` that counts the number of islands in the given grid.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef count_islands(grid: list[list[int]], start_x: int, start_y: int) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `grid` (list[list[int]]): A 2D grid where each cell can be either water or land.\\\\n- `start_x` (int): The x-coordinate of the top-left cell of an island in the grid.\\\\n- `start_y` (int): The y-coordinate of the top-left cell of an island in the grid.\\\\n\\\\n#### Output\\\\n- Returns the number of islands in the given grid.\\\\n\\\", \\\"code\\\": \\\"def count_islands(grid: list[list[int]], start_x: int, start_y: int) -> int:\\\\n    def dfs(x: int, y: int) -> None:\\\\n        if 0 <= x < len(grid) and 0 <= y < len(grid[0]) and grid[x][y] == 1:\\\\n            grid[x][y] = 0\\\\n            dfs(x - 1, y)\\\\n            dfs(x + 1, y)\\\\n            dfs(x, y - 1)\\\\n            dfs(x, y + 1)\\\\n    count = 0\\\\n    for i in range(len(grid)):\\\\n        for j in range(len(grid[0])):\\\\n            if grid[i][j] == 1:\\\\n                dfs(i, j)\\\\n                count += 1\\\\n    return count\\\", \\\"tests\\\": [\\\"assert count_islands([[0,0,0,1,1],[0,0,0,1,0],[0,0,0,1,0],[0,0,1,1,1],[0,0,0,0,0]], 2, 3) == 1\\\", \\\"assert count_islands([[0,0,0,1,1],[0,0,0,1,0],[0,0,0,1,0],[0,0,1,1,1],[0,0,0,0,0]], 4, 4) == 5\\\", \\\"assert count_islands([[0,0,0,1,1],[0,0,0,1,0],[0,0,0,1,0],[0,0,1,1,1],[0,0,0,0,0]], 1, 1) == 4\\\"] }\""
}