"{'model': 'phi3:14b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Easy Project Euler Problem: Sum of Divisors\\\\\", \\\\\"description\\\\\": \\\\\"The sum of divisors function, often denoted as sigma(n), represents the sum of all positive integers that divide n (including 1 and n). Write a function `sum_of_divisors` to compute this value. The function should handle inputs ranging from 1 to 2 * 10^5.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef sum_of_divisors(n: int) -> int:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `n` (int): A positive integer where \\\\\\\\(1 \\\\\\\\\\\\\\\\leq n \\\\\\\\\\\\\\\\leq 2 * 10^5\\\\\\\\\\\\\\\\).\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns the sum of all divisors of `n`.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"from math import sqrt\\\\\\\\n\\\\\\\\ndef sum_of_divisors(n: int) -> int:\\\\\\\\n    total = 1  # Start with 1 because it\\'s a divisor for every number\\\\\\\\n    for i in range(2, int(sqrt(n)) + 1):\\\\\\\\n        if n % i == ebinator:\\\\\\\\n            total += i\\\\\\\\n            if i != sqrt(n):\\\\\\\\n                # If the number is not prime and the divisor\\'s pair isn\\'t itself (for perfect squares)\\\\\\\\n                total += n // i  # Add the pair of the divisor to the sum\\\\\\\\n    return total + n  # Include the original number in the sum\\\\\\\\n\\\\\", \\\\\"tests\\\\\": [\\\\\"assert sum_of_divisors(12) == 28\\\\\", \\\\\"assert sum_of_divisors(28) == 56\\\\\", \\\\\"assert sum_of_divisors(496) == 704\\\\\", \\\\\"assert sum_of_divisors(6) == 12\\\\\"] }\"'}"