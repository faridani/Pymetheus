{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Closest Pair of Points\\\", \\\"description\\\": \\\"Given a list of points on the plane, find the closest pair of points. The points are represented as tuples of two integers (x-coordinate and y-coordinate). Write a function `closest_pair` that takes a list of points as input and returns the distance between the closest pair of points.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef closest_pair(points: list[tuple[int, int]]) -> float:\\\\n```\\\\n\\\\n#### Input\\\\n- `points` (list[tuple[int, int]]): A list of points on the plane, where each point is represented as a tuple of two integers.\\\\n\\\\n#### Output\\\\n- Returns the distance between the closest pair of points.\\\", \\\"code\\\": \\\"\\\\nimport math\\\\n\\\\ndef closest_pair(points: list[tuple[int, int]]) -> float:\\\\n    def brute_force_closest_pair(points):\\\\n        min_distance = float('inf')\\\\n        for i in range(len(points)):\\\\n            for j in range(i + 1, len(points)):\\\\n                distance = ((points[i][0] - points[j][0]) ** 2 + (points[i][1] - points[j][1]) ** 2) ** 0.5\\\\n                min_distance = min(min_distance, distance)\\\\n        return min_distance\\\\n\\\\n    def closest_pair_recursive(points):\\\\n        if len(points) <= 3:\\\\n            return brute_force_closest_pair(points)\\\\n\\\\n        x_middle = points[len(points) // 2]\\\\n        left_points = [point for point in points if point[0] < x_middle[0]]\\\\n        right_points = [point for point in points if point[0] > x_middle[0]]\\\\n        min_distance = min(min(closest_pair_recursive(left_points), closest_pair_recursive(right_points)), \\\\n                            math.sqrt(2 * (x_middle[1] - min(x, key=lambda point: point[1])[1]) ** 2))\\\\n        return min_distance\\\\n\\\\n    return closest_pair_recursive(points)\\\\n\\\\n\\\", \\\"tests\\\": [\\\"assert closest_pair([(0,0),(0,3),(0,7),(10,0)]) == 6.0\\\", \\\"assert closest_pair([(0,0),(0,1),(0,2),(0,3)]==0.0\\\", \\\"assert closest_pair([(-1,-2), (-5,4), (2,4), (5, -9), (7, -6), (8, 3)]) == 1.0\\\"] }\""
}