{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Max Sum Increasing Subsequence\\\", \\\"description\\\": \\\"Given an array of integers, write a function `max_sum_is` that returns the maximum sum of a subsequence such that the elements are in strictly increasing order.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_sum_is(arr: list[int)) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `arr` (list[int]): A list of integers.\\\\n\\\\n#### Output\\\\n- Returns the maximum sum of a subsequence that is in strictly increasing order.\\\\n\\\", \\\"code\\\": \\\"def max_sum_is(arr: list[int)) -> int:\\\\n    n = len(arr)\\\\n    dp = [0] * n\\\\n    for i in range(n):\\\\n        dp[i] = arr[i]\\\\n        for j in range(i):\\\\n            if arr[j] < arr[i]:\\\\n                dp[i] = max(dp[i], dp[j] + arr[i])\\\\n    return max(dp)\\\\n\\\", \\\"tests\\\": [\\\"assert max_sum_is([10, 70, 40, 20, 50, 80, 30]) == 210\\\", \\\"assert max_sum_is([-1, -2, -3, -4, -5]) == -1\\\", \\\"assert max_sum_is([1, 100, 2, 3, 4]) == 104\\\"] }\""
}