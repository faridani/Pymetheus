"{'model': 'gemma2:27b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Hard: Flatten a Nested Dictionary\\\\\", \\\\\"description\\\\\": \\\\\"Write a function `flatten_dict` that takes a nested dictionary as input and returns a flattened dictionary where the keys are formed by joining the keys of the nested dictionary with dots (.) as separators.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef flatten_dict(nested_dict: dict) -> dict:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `nested_dict` (dict): A dictionary that may contain other dictionaries as values.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns a flattened dictionary with the keys formed by joining the keys of the nested dictionary with dots (.) as separators.\\\\\\\\n\\\\\\\\n**Example:**\\\\\\\\n```python\\\\\\\\nnested_dict = {\\'a\\': 1, \\'b\\': {\\'c\\': 2, \\'d\\': 3}, \\'e\\': {\\'f\\': 4}}\\\\\\\\nflattened_dict = flatten_dict(nested_dict)\\\\\\\\nprint(flattened_dict) # Output: {\\'a\\': 1, \\'b.c\\': 2, \\'b.d\\': 3, \\'e.f\\': 4}\\\\\\\\n\\\\\\\\n```\\\\\", \\\\\"code\\\\\": \\\\\"def flatten_dict(nested_dict: dict) -> dict:\\\\\\\\n    flattened_dict = {}\\\\\\\\n\\\\\\\\n    def _flatten(key, value):\\\\\\\\n        if isinstance(value, dict):\\\\\\\\n            for k, v in value.items():\\\\\\\\n                _flatten(f\\'{key}.{k}\\', v)\\\\\\\\n        else:\\\\\\\\n            flattened_dict[key] = value\\\\\\\\n\\\\\\\\n    for key, value in nested_dict.items():\\\\\\\\n        _flatten(key, value)\\\\\\\\n\\\\\\\\n    return flattened_dict\\\\\", \\\\\"tests\\\\\": [\\\\\"nested_dict1 = {\\'a\\': 1, \\'b\\': {\\'c\\': 2, \\'d\\': 3}, \\'e\\': {\\'f\\': 4}}\\\\\\\\nassert flatten_dict(nested_dict1) == {\\'a\\': 1, \\'b.c\\': 2, \\'b.d\\': 3, \\'e.f\\': 4}\\\\\", \\\\\"nested_dict2 = {\\'x\\': 5, \\'y\\': {\\'z\\': 6}} \\\\\\\\n assert flatten_dict(nested_dict2) == {\\'x\\': 5, \\'y.z\\': 6} \\\\\", \\\\\"nested_dict3 = {1: \\'one\\', 2: {3: \\'three\\'}} \\\\\\\\nassert flatten_dict(nested_dict3) == {\\'1\\': \\'one\\', \\'2.3\\': \\'three\\'}\\\\\"] }\"'}"