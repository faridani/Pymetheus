"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Reverse Vowel String\\\\\", \\\\\"description\\\\\": \\\\\"Write a function `reverse_vowels` that takes a string as input and returns the same string with all its vowels (a, e, i, o, u, A, E, I, O, U) in reverse order. The function should ignore any capitalization.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef reverse_vowels(s: str) -> str:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `s` (str): A string containing any combination of vowels, consonants and spaces.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns a new string with all the vowels in reverse order without changing the order or case of the non-vowel characters.\\\\\", \\\\\"code\\\\\": \\\\\"def reverse_vowels(s: str) -> str:\\\\\\\\n    # Define the list of vowels (case insensitive)\\\\\\\\n    vowels = set([\\'a\\', \\'e\\', \\'i\\', \\'o\\', \\'u\\', \\'A\\', \\'E\\', \\'I\\', \\'O\\', \\'U\\'])\\\\\\\\n    # Split the string into a list\\\\\\\\n    s_list = list(s)\\\\\\\\n    # Iterate through the string list and reverse vowels\\\\\\\\n    for i, char in enumerate(s_list):\\\\\\\\n        if char in vowels:\\\\\\\\n            # Find the position of the corresponding reversed vowel\\\\\\\\n            index = len(s_list) - i - 1\\\\\\\\n            # Swap the characters at the current and found positions\\\\\\\\n            if index >= 0 and s_list[index] not in vowels:\\\\\\\\n                s_list[i], s_list[index] = s_list[index], s_list[i]\\\\\\\\n    # Join the list back into a string and return it\\\\\\\\n    return \\'\\'.join(s_list)\\\\\", \\\\\"tests\\\\\": [\\\\\"assert reverse_vowels(\\'hello\\') == \\'holle\\'\\\\\", \\\\\"assert reverse_vowels(\\'LEetcode\\') == \\'delectes\\',\\\\\", \\\\\"assert reverse_vowels(\\'A man, a plan, a canal: Panama\\') == \\'amanaplanacanalpanama\\'\\\\\"] }\"'}"