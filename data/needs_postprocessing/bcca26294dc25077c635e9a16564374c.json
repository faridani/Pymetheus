{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Max Area of Island\\\", \\\"description\\\": \\\"A grid cell represents land (1) or water (0). Write a function `max_island_area` that takes a 2D grid as input and returns the maximum area of an island.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_island_area(grid: list[list[int]]) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `grid` (list[list[int]]): A 2D grid where `1` represents land and `0` represents water.\\\\n\\\\n#### Output\\\\n- Returns the maximum area of an island in the input grid.\\\\n\\\", \\\"code\\\": \\\"def max_island_area(grid: list[list[int]]) -> int:\\\\n    if not grid or not grid[0]:\\\\n        return 0\\\\n    max_area = 0\\\\n    def dfs(i, j):\\\\n        if i < 0 or i >= len(grid) or j < 0 or j >= len(grid[0]) or grid[i][j] == 0:\\\\n            return 0\\\\n        area = 1\\\\n        grid[i][j] = 0\\\\n        for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:\\\\n            area += dfs(i + dx, j + dy)\\\\n        return area\\\\n    for i in range(len(grid)):\\\\n        for j in range(len(grid[0])):\\\\n            if grid[i][j] == 1:\\\\n                max_area = max(max_area, dfs(i, j))\\\\n    return max_area\\\", \\\"tests\\\": [\\\"assert max_island_area([[0,0,1,0,0],[0,0,1,0,0],[0,0,1,0,0]]) == 4\\\", \\\"assert max_island_area([[1,1,0,0,0],[1,1,0,0,0],[0,0,0,1,1]]) == 9\\\", \\\"assert max_island_area([]) == 0\\\", \\\"assert max_island_area([[]]) == 0\\\"] }\""
}