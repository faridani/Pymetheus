"{'model': 'phi3:14b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Medium Python Coding Question: Sum of Pairs\\\\\", \\\\\"description\\\\\": \\\\\"Given a list of integers, find all unique pairs that sum up to a specific target value. The function should return these pairs as a list of tuples.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef find_pairs(numbers: List[int], target: int) -> List[Tuple[int, int]]:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Inputs\\\\\\\\n- `numbers` (List[int]): A list of integers.\\\\\\\\n- `target` (int): The target sum value.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns a list of unique pairs as tuples that add up to the target. Each pair is sorted in ascending order and all such pairs are also sorted based on their first element, then by the second element if the first elements are equal.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"from typing import List, Tuple\\\\\\\\nimport itertools\\\\\\\\n\\\\\\\\ndef find_pairs(numbers: List[int], target: int) -> List[Tuple[int, int]]:\\\\\\\\n    pairs = {}\\\\\\\\n    for a, b in itertools.combinations(sorted(set(numbers)), 2):\\\\\\\\n        if a + b == target:\\\\\\\\n            pair = tuple(sorted((a, b)))\\\\\\\\n            if pair not in pairs:\\\\\\\\n                pairs[pair] = True\\\\\\\\n    return sorted(pairs.keys())\\\\\\\\n\\\\\", \\\\\"tests\\\\\": [\\\\\"assert find_pairs([10, 20, 30, -40, -10], target=20) == [(-40, 60), (-10, 30)]\\\\\", \\\\\"assert find_pairs([-5, 7, -8, 9, -3, 6], target=2) == [(7, -5), (9, -3)]\\\\\", \\\\\"assert find_psi([4, 1, 8, 3, 2, 10], target=7) == [(4, 3)]\\\\\", \\\\\"assert find_pairs([-1, 2, 3, -4, 5, 6, 7], target=9) == [(-1, 10), (2, 7), (3, 6)]\\\\\"] }\"'}"