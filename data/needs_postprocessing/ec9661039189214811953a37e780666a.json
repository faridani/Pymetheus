{
    "model": "gemma2:27b-instruct-q5_K_S",
    "response": "\"{ \\\"title\\\": \\\"Hard - Lexicographically Smallest Rotation\\\", \\\"description\\\": \\\"Given a string s, find the lexicographically smallest rotation of that string.  A rotation of a string is obtained by moving characters from the beginning of the string to the end.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef smallest_rotation(s: str) -> str:\\\\n```\\\\n\\\\n#### Input\\\\n- `s` (str): A non-empty string consisting of lowercase English letters.\\\\n\\\\n#### Output\\\\n- Returns the lexicographically smallest rotation of the input string.\\\\n\\\", \\\"code\\\": \\\"def smallest_rotation(s: str) -> str:\\\\n    smallest = s\\\\n    for i in range(len(s)):\\\\n        rotation = s[i:] + s[:i]\\\\n        if rotation < smallest:\\\\n            smallest = rotation\\\\n    return smallest\\\", \\\"tests\\\": [\\\"assert smallest_rotation(\\\\\\\"abc\\\\\\\") == \\\\\\\"abc\\\\\\\"\\\", \\\"assert smallest_rotation(\\\\\\\"cba\\\\\\\") == \\\\\\\"abc\\\\\\\"\\\", \\\"assert smallest_rotation(\\\\\\\"bba\\\\\\\") == \\\\\\\"ab\\\\\\\"\\\", \\\"assert smallest_rotation(\\\\\\\"geeksforgeeks\\\\\\\") == \\\\\\\"eeksforgeegsk\\\\\\\"\\\", \\\"assert smallest_rotation(\\\\\\\"zzzzzz\\\\\\\") == \\\\\\\"zzzzzz\\\\\\\"\\\"] }\""
}