"{'model': 'gemma2:27b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Hard: Prime Number Spiral\\\\\", \\\\\"description\\\\\": \\\\\"You are given a positive integer `n`. Consider a spiral grid of numbers starting with 1 at the center, expanding outwards. For example, for n = 3, the spiral would look like this:\\\\\\\\n\\\\\\\\n```\\\\\\\\n   2  3  4 \\\\\\\\n   9  1  5 \\\\\\\\n   8  7  6\\\\\\\\n ```\\\\\\\\n\\\\\\\\nWrite a function `prime_spiral` that takes an integer `n` and returns the percentage of prime numbers within the spiral grid up to size n x n. Round the percentage to two decimal places.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef prime_spiral(n: int) -> float:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `n` (int): A positive integer representing the size of the spiral grid.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns a floating-point number representing the percentage of prime numbers in the spiral, rounded to two decimal places.\\\\\\\\n\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"import math\\\\\\\\ndef is_prime(num):\\\\\\\\n    if num <= 1:\\\\\\\\n        return False\\\\\\\\n    for i in range(2, int(math.sqrt(num)) + 1):\\\\\\\\n        if num % i == 0:\\\\\\\\n            return False\\\\\\\\n    return True\\\\\\\\n\\\\\\\\ndef prime_spiral(n: int) -> float:\\\\\\\\n    total_numbers = n * n\\\\\\\\n    prime_count = 0 \\\\\\\\n    num = 1\\\\\\\\n    x, y = 0, 0\\\\\\\\n    dx, dy = 0, 1\\\\\\\\n    for _ in range(total_numbers):\\\\\\\\n        if is_prime(num):\\\\\\\\n            prime_count += 1\\\\\\\\n        num += 1\\\\\\\\n        if x + dx >= n or x + dx < 0 or y + dy >= n or y + dy < 0:\\\\\\\\n            if dx == 0:\\\\\\\\n                dx, dy = dy, 0\\\\\\\\n            else:\\\\\\\\n                dx, dy = -dy, dx\\\\\\\\n        x += dx\\\\\\\\n        y += dy\\\\\\\\n    return round((prime_count / total_numbers) * 100, 2)\\\\\\\\n\\\\\", \\\\\"tests\\\\\": [\\\\\"assert prime_spiral(1) == 0.0\\\\\", \\\\\"assert round(prime_spiral(3), 2) == 44.44\\\\\"] }\"'}"