{
    "model": "llama3:latest",
    "response": "{\"title\": \"Elegant Binary Tree\", \"description\": \"A binary tree node contains an integer value and references to its left child and right child. Write a function `pretty_print` that takes the root of a binary tree as input, and prints out the tree in a pretty format, where each level is indented by two spaces.\\n\\n#### Function Signature\\n```python\\ndef pretty_print(node):\\n```\\n\\n#### Input\\n- `node`: The root node of the binary tree.\\n\\n#### Output\\n- Prints out the binary tree in a pretty format.\", \"code\": \"\", \"\\nclass TreeNode:\\n    def __init__(self, value=0, left=None, right=None):\\n        self.value = value\\n        self.left = left\\n        self.right = right\\n\\ndef pretty_print(node, level=0):\\n    if node is None:\\n        return\\n    \\n    indent = '  ' * level\\n    print(f\": \"indent}{node.value}\", \"\": \"root = TreeNode(1)\\nroot.left = TreeNode(2)\\nroot.right = TreeNode(3)\\nroot.left.left = TreeNode(4)\\nroot.left.right = TreeNode(5)\\n\\npretty_print(root)\", \", \": \"ests\", \"pretty_print(TreeNode(1))\": \"pretty_print(TreeNode(1, left=TreeNode(2), right=TreeNode(3)))\", \"pretty_print(TreeNode(1, left=TreeNode(2), right=TreeNode(3, left=TreeNode(4), right=TreeNode(5))))\": \"\"}"
}