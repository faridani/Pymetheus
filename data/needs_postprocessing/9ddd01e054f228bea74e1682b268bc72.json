{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Longest Increasing Subsequence\\\", \\\"description\\\": \\\"Write a function `longest_increasing_subsequence` that finds the length of the longest increasing subsequence in a given list of integers. A subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef longest_increasing_subsequence(lst: list[int]) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `lst` (list[int]): A list of integers.\\\\n\\\\n#### Output\\\\n- Returns the length of the longest increasing subsequence in the input list.\\\\n\\\", \\\"code\\\": \\\"def longest_increasing_subsequence(lst: list[int]) -> int:\\\\n    n = len(lst)\\\\n    dp = [1] * n\\\\n    for i in range(1, n):\\\\n        for j in range(i):\\\\n            if lst[i] > lst[j]:\\\\n                dp[i] = max(dp[i], dp[j] + 1)\\\\n    return max(dp)\\\\n\\\", \\\"tests\\\": [\\\"assert longest_increasing_subsequence([10, 9, 2, 5, 3, 7, 101, 18]) == 4\\\", \\\"assert longest_increasing_subsequence([0, 8, 4, 13, 7, 6, 12]) == 6\\\"] }\""
}