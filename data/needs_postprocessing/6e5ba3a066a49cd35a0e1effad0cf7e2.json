{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Hard: Find the Maximum Sum of an Increasing Subsequence\\\", \\\"description\\\": \\\"Given a list of integers, find the maximum sum of an increasing subsequence.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_increasing_subsequence_sum(nums: List[int]) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `nums` (List[int]): A list of integers.\\\\n\\\\n#### Output\\\\n- Returns the maximum sum of an increasing subsequence in the input list.\\\\n\\\", \\\"code\\\": \\\"from typing import List\\\\n\\\\ndef max_increasing_subsequence_sum(nums: List[int]) -> int:\\\\n    if not nums:\\\\n        return 0\\\\n    dp = [num for num in nums]\\\\n    max_sum = [1] * len(nums)\\\\n    for i in range(len(nums)):\\\\n        for j in range(i):\\\\n            if nums[i] > nums[j] and dp[i] < dp[j] + nums[i]:\\\\n                dp[i] = dp[j] + nums[i]\\\\n                max_sum[i] = max(max_sum[i], dp[i])\\\\n    return max(max_sum)\\\\n\\\", \\\"tests\\\": [\\\"assert max_increasing_subsequence_sum([1, 2, 3, 4, 5]) == 15\\\", \\\"assert max_increasing_subsequence_sum([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6\\\", \\\"assert max_increasing_subsequence_sum([]) == 0\\\", \\\"assert max_increasing_subsequence_sum([1]) == 1\\\"] }\""
}