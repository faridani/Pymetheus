"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Pythagorean Triplets Finder (Medium)\\\\\", \\\\\"description\\\\\": \\\\\"In number theory, a Pythagorean triplet is a set of three natural numbers, a < b < c, for which a^2 + b^2 = c^2. Write a function `find_triplets` that finds and returns all unique Pythagorean triplets up to a given limit.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef find_triplets(limit: int) -> list:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `limit` (int): An integer representing the upper bound for the triplet\\'s sides.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns a list of unique Pythagorean triplets as tuples, sorted in ascending order of their smallest side.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"def find_triplets(limit: int) -> list:\\\\\\\\n    # Initialize a set to store unique triplets\\\\\\\\n    results = set()\\\\\\\\n    \\\\\\\\n    # Iterate through all possible values for the smallest side of the triplet\\\\\\\\n    for a in range(1, limit + 1):\\\\\\\\n        # Calculate b and c using the Pythagorean formula\\\\\\\\n        b = (limit ** 2 - a ** 2) ** 0.5\\\\\\\\n        if b < 1 or int(b) != b:\\\\\\\\n            continue\\\\\\\\n        c = a + b\\\\\\\\n        \\\\\\\\n        # If c is within the range and the triplet is not already in the results, add it\\\\\\\\n        if c <= limit and (a, b, c) not in results:\\\\\\\\n            results.add((a, b, c))\\\\\\\\n    \\\\\\\\n    # Convert the set to a list and sort it\\\\\\\\n    return sorted(list(results))\\\\\", \\\\\"tests\\\\\": [\\\\\"assert find_triplets(1000) == [(3, 4, 5), (5, 12, 13), (6, 8, 10), (7, 24, 25), (7, 28, 29), (8, 15, 17), (9, 40, 41)]\\\\\", \\\\\"assert find_triplets(300) == [(3, 4, 5)]\\\\\"] }\"'}"