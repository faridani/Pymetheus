{
    "model": "llama3:latest",
    "response": "{\"title\": \"Maximum Sum of Subarrays\", \"description\": \"You are given an array of integers `arr`. Find the maximum sum of all possible subarrays. A subarray is a contiguous segment of the array. \\n\\n#### Function Signature\\n```python\\ndef max_sum_of_subarrays(arr: list[int)) -> int:\\n```\\n\\n#### Input\\n- `arr` (list[int]): An array of integers.\\n\\n#### Output\\n- Returns the maximum sum of all possible subarrays.\", \"code\": \"def max_sum_of_subarrays(arr: list[int)) -> int:\\n    n = len(arr)\\n    prefix_sum = [0] * (n + 1)\\n    for i in range(n):\\n        prefix_sum[i + 1] = prefix_sum[i] + arr[i]\\n\\n    max_sum = float('-inf')\\n    left, right = 0, n - 1\\n    while left <= right:\\n        if left == right:\\n            return arr[left]\\n        total = (right * arr[right]) - prefix_sum[right]\\n        if total > max_sum:\\n            max_sum = total\\n        left += 1\\n        right -= 1\\n    return max_sum\", \"tests\": [\"assert max_sum_of_subarrays([3,2,-5,4,-7,9,-15,0,8]) == 19\", \"assert max_sum_of_subarrays([-1, -2, -3, -4, -5]) == -1\", \"assert max_sum_of_subarrays([1]) == 1\"]}"
}