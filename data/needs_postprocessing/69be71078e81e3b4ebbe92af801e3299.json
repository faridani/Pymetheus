{
    "model": "llama3:latest",
    "response": "{\"title\": \"Easy: Maximum Sum Subarray\", \"description\": \"A subarray of an array `arr` is a contiguous part of the array. The maximum sum subarray problem asks for the largest sum of a subarray within `arr`. For example, given the array `[4, -3, 5, -2, -1, 3, 4]`, the maximum sum subarray is `[4, 5]` with a sum of `9`. Write a function `max_sum_subarray` that finds this maximum sum. \\n\\n#### Function Signature\\n```python\\ndef max_sum_subarray(arr: list[int)) -> int:\\n```\\n\\n#### Input\\n- `arr` (list[int]): A list of integers.\\n\\n#### Output\\n- Returns the maximum sum of a subarray within `arr`.\", \"code\": \"def max_sum_subarray(arr: list[int)) -> int:\\n    n = len(arr)\\n    max_sum = arr[0]\\n    current_sum = arr[0]\\n    for i in range(1, n):\\n        if current_sum < 0:\\n            current_sum = arr[i]\\n        else:\\n            current_sum += arr[i]\\n        max_sum = max(max_sum, current_sum)\\n    return max_sum\", \"tests\": [\"assert max_sum_subarray([4, -3, 5, -2, -1, 3, 4]) == 9\", \"assert max_sum_subarray([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6\"]}"
}