{
    "model": "llama3:latest",
    "response": "{\"title\": \"Maximum Sum of Non-Adjacent Elements (Medium)\", \"description\": \"Given an array of integers, find the maximum sum of non-adjacent elements. For example, if the input is [2, 7, 9, 3, 1], the output should be 12 because the maximum sum of non-adjacent elements is 2 + 9 = 11 (if we take 7 and 1) or 2 + 3 = 5 (if we don't take 7), then it's 9. Write a function `max_sum` that solves this problem.\\n\\n#### Function Signature\\n```python\\ndef max_sum(arr: list[int)) -> int:\\n```\\n\\n#### Input\\n- `arr` (list[int]): A list of integers.\\n\\n#### Output\\n- Returns the maximum sum of non-adjacent elements in the input array.\", \"code\": \"def max_sum(arr: list[int)) -> int:\\n    n = len(arr)\\n    incl = 0\\n    excl = 0\\n    for i in range(n):\\n        new_excl = max(incl, excl)\\n        incl = excl + arr[i]\\n        excl = new_excl\\n    return max(incl, excl)\", \"tests\": [\"assert max_sum([2, 7, 9, 3, 1]) == 12\", \"assert max_sum([1, 2, 3, 4]) == 6\"]}"
}