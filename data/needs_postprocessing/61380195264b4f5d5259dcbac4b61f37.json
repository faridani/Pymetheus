{
    "model": "command-r7b:latest",
    "response": "\"{ \\\"title\\\": \\\"Sum of Subarrays (Easy)\\\", \\\"description\\\": \\\"Given an array of integers, find the sum of all subarrays within it. A subarray is a contiguous subsequence.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef sum_of_subarrays(arr: list[int]) -> dict[tuple[int, int], int]:\\\\n    # Returns a dictionary where keys are tuples (start index, end index) and values are subarray sums\\\\n```\\\\n\\\\n#### Input\\\\n- `arr` (list[int]): A list of integers.\\\\n\\\\n#### Output\\\\n- Returns a dictionary where keys are tuples `(start_index, end_index)` representing the range of elements in the subarray, and values are the sum of those elements.\\\\n\\\", \\\"code\\\": \\\"def sum_of_subarrays(arr: list[int]) -> dict[tuple[int, int], int]:\\\\n    n = len(arr)\\\\n    result = {}\\\\n    for start in range(n):\\\\n        subarray_sum = 0\\\\n        for end in range(start, n):\\\\n            subarray_sum += arr[end]\\\\n            result[(start, end + 1)] = subarray_sum\\\\n    return result\\\", \\\"tests\\\": [\\\"assert sum_of_subarrays([1, 2, 3, 4]) == {(0, 1): 3, (0, 2): 6, (0, 3): 10, (0, 4): 15, (1, 2): 7, (1, 3): 11, (1, 4): 16, (2, 3): 8, (2, 4): 13, (3, 4): 9}\\\", \\\"assert sum_of_subarrays([-1, -2]) == {(0, 1): -3, (0, 2): -5, (1, 2): -7}\\\", \\\"assert sum_of_subarrays([1, -2, 3, -4, 5]) == {(0, 1): 1, (0, 2): -1, (0, 3): 2, (0, 4): -1, (0, 5): 6, (1, 2): -1, (1, 3): 1, (1, 4): -2, (1, 5): 5, (2, 3): 1, (2, 4): -1, (2, 5): 3, (3, 4): -2, (3, 5): 1, (4, 5): 5}\\\"] }\""
}