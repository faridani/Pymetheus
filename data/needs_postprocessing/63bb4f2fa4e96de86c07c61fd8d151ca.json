{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Coin Change Problem\\\", \\\"description\\\": \\\"You are given an infinite supply of coins with denominations 1, 2, and 5 cents. Write a function `min_coins` that calculates the minimum number of coins needed to make up a given amount of money in cents.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef min_coins(amount: int) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `amount` (int): The total amount of money in cents.\\\\n\\\\n#### Output\\\\n- Returns the minimum number of coins needed to make up the given amount.\\\\n\\\", \\\"code\\\": \\\"def min_coins(amount: int) -> int:\\\\n    if amount < 0:\\\\n        return -1\\\\n    coins = [1, 2, 5]\\\\n    dp = [float('inf')] * (amount + 1)\\\\n    dp[0] = 0\\\\n    for i in range(1, amount + 1):\\\\n        for coin in coins:\\\\n            if i >= coin:\\\\n                dp[i] = min(dp[i], dp[i - coin] + 1)\\\\n    return dp[amount] if dp[amount] != float('inf') else -1\\\\n\\\", \\\"tests\\\": [\\\"assert min_coins(11) == 3\\\", \\\"assert min_coins(12) == 6\\\", \\\"assert min_coins(-1) == -1\\\", \\\"assert min_coins(0) == 0\\\"] }\""
}