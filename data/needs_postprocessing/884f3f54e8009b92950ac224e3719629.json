"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"\\\\\\\\\\\\\"Count Vowels and Consonants\\\\\\\\\\\\\" - Medium\\\\\", \\\\\"description\\\\\": \\\\\"Given a string, write a function `count_vowels_consonants` that counts the number of vowels and consonants in the given string.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef count_vowels_consonants(s: str) -> tuple[int, int]:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `s` (str): A string that may contain letters, spaces and punctuation.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns a tuple with two integers. The first integer represents the count of vowels in the input string, and the second integer represents the count of consonants in the input string.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"import string\\\\\\\\ndef count_vowels_consonants(s: str) -> tuple[int, int]:\\\\\\\\n    # Initialize counters for vowels and consonants\\\\\\\\n    vowel_count = 0\\\\\\\\n    consonant_count = 0\\\\\\\\n    \\\\\\\\n    # Iterate through each character in the string\\\\\\\\n    for char in s:\\\\\\\\n        # Check if the character is a vowel or a consonant\\\\\\\\n        if char.lower() in string.ascii_lowercase[:5]:\\\\\\\\n            # If it\\'s a vowel, increment vowel counter\\\\\\\\n            vowel_count += 1\\\\\\\\n        elif char.lower() in string.ascii_lowercase[5:]\\\\\\\\n            # If it\\'s a consonant, increment consonant counter\\\\\\\\n            consonant_count += 1\\\\\\\\n    \\\\\\\\n    # Return the count of vowels and consonants as a tuple\\\\\\\\n    return vowel_count, consonant_count\\\\\", \\\\\"tests\\\\\": [\\\\\"assert count_vowels_consonants(\\\\\\\\\\\\\"aeiou\\\\\\\\\\\\\") == (5, 0)\\\\\", \\\\\"assert count_vowels_consonants(\\\\\\\\\\\\\"banana\\\\\\\\\\\\\") == (1, 4)\\\\\", \\\\\"assert count_vowels_consonants(\\\\\\\\\\\\\"Hello World!\\\\\\\\\\\\\") == (1, 9)\\\\\", \\\\\"assert count_vowels_consonants(\\\\\\\\\\\\\"12345\\\\\\\\\\\\\") == (0, 5)\\\\\"] }\"'}"