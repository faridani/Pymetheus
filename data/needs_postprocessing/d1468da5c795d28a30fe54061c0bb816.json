"{'model': 'gemma2:27b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Hard: Prime Permutations\\\\\", \\\\\"description\\\\\": \\\\\"A prime number is a whole number greater than 1 that has only two divisors: 1 and itself. Write a function `prime_permutations(n)` that takes an integer `n` as input and returns the count of all primes generated by permuting the digits of `n`. \\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef prime_permutations(n: int) -> int:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `n` (int): An integer. \\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns the count of all primes generated by permuting the digits of `n`.\\\\\", \\\\\"code\\\\\": \\\\\"def prime_permutations(n: int) -> int:\\\\\\\\n    from itertools import permutations\\\\\\\\n    def is_prime(num):\\\\\\\\n        if num <= 1: return False\\\\\\\\n        for i in range(2, int(num**0.5)+1):\\\\\\\\n            if num % i == 0: return False\\\\\\\\n        return True\\\\\\\\n\\\\\\\\n    count = 0\\\\\\\\n    perms = list(permutations(str(n)))\\\\\\\\n    for perm in perms:\\\\\\\\n        num = int(\\\\\\\\\\\\\"\\\\\\\\\\\\\".join(perm))\\\\\\\\n        if is_prime(num):\\\\\\\\n            count += 1\\\\\\\\n    return count \\\\\\\\n\\\\\", \\\\\"tests\\\\\": [\\\\\"assert prime_permutations(123) == 3\\\\\", \\\\\"assert prime_permutations(456789) == 0\\\\\"] }\"'}"