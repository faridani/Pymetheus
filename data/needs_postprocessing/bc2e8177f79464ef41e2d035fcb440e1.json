"{'model': 'mistral:latest', 'response': '{\"title\": \"\\'Mad Libs Number Guesser\\' (easy)\", \"description\": \"In the classic game Mad Libs, players fill in missing words in a story using words of a certain type. In this problem, write a function `guess_number` that generates a random 4-digit number and asks the user to guess it. The game will give hints based on the number of correct digits guessed.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef guess_number() -> None:\\\\n```\\\\n\\\\n#### Input\\\\nNone, as the function generates its own input.\\\\n\\\\n#### Output\\\\nThe function will print hints based on the number of correct digits guessed by the user.\", \"code\": \"import random\\\\n\\\\ndef guess_number() -> None:\\\\n    # Generate a 4-digit random number\\\\n    secret_number = int(str(random.randint(1000, 9999))[::-1])\\\\n    \\\\n    # Ask the user to guess the number\\\\n    while True:\\\\n        guess = input(\\'Guess a 4-digit number: \\').strip()\\\\n        if not guess.isdigit():\\\\n            print(\\'Please enter a 4-digit number.\\')\\\\n            continue\\\\n        if len(guess) != 4:\\\\n            print(\\'Please enter a 4-digit number.\\')\\\\n            continue\\\\n        # Check the number of correct digits guessed\\\\n        count = sum([digit == char for digit, char in zip(guess, secret_number)])\\\\n        \\\\n        if guess == str(secret_number):\\\\n            print(\\'Congratulations! You guessed the number.\\')\\\\n            break\\\\n        else:\\\\n            hint = f\\'You guessed {count} digits correctly.\\'\\\\n            print(hint)\", \"tests\": [\"assert guess_number() == None\", \"import io, sys; sys.stdout = io.StringIO(); guess_number(); assert sys.stdout.getvalue().strip() == \\'Guess a 4-digit number: Guessed digits correctly: 0\\\\nGuess a 4-digit number: \\'\"]}'}"