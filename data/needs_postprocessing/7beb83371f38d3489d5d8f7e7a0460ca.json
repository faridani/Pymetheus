{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Medium: Maximum Sum of Non-Adjacent Elements\\\", \\\"description\\\": \\\"Given a list of integers, find the maximum sum of non-adjacent elements. For example, given the list [2, 7, 9, 3, 1], return 12 because 2 + 9 is the maximum sum of non-adjacent elements.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_sum(s: list[int)) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `s` (list[int]): A list of integers.\\\\n\\\\n#### Output\\\\n- Returns the maximum sum of non-adjacent elements from the input list.\\\", \\\"code\\\": \\\"def max_sum(s: list[int)) -> int:\\\\n    if len(s) <= 2:\\\\n        return max(0, max(s))\\\\n    dp = [0] * (len(s) + 1)\\\\n    dp[1] = max(s[0], 0)\\\\n    for i in range(2, len(s) + 1):\\\\n        dp[i] = max(dp[i-1], s[i-1] + dp[i-2])\\\\n    return dp[-1]\\\\n\\\", \\\"tests\\\": [\\\"assert max_sum([2, 7, 9, 3, 1]) == 12\\\", \\\"assert max_sum([1, 2, 3, 4]) == 6\\\", \\\"assert max_sum([]) == 0\\\", \\\"assert max_sum([1]) == 1\\\"] }\""
}