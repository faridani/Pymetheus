"{'model': 'gemma2:27b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Medium -  Array Rotation\\\\\", \\\\\"description\\\\\": \\\\\"Given an array of integers and a number *k*, rotate the array to the right by *k* steps.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef rotate_array(nums: list[int], k: int) -> None:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `nums` (list[int]): A list of integers.\\\\\\\\n- `k` (int): The number of steps to rotate the array to the right.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Modifies the input list `nums` in-place. No return value is required.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"def rotate_array(nums: list[int], k: int) -> None:\\\\\\\\n    n = len(nums)\\\\\\\\n    k %= n  # Handle cases where k is larger than the array length\\\\\\\\n    nums[:] = nums[-k:] + nums[:-k]\\\\\\\\n\\\\\", \\\\\"tests\\\\\": [\\\\\"nums = [1, 2, 3, 4, 5]; rotate_array(nums, 2); assert nums == [4, 5, 1, 2, 3]\\\\\", \\\\\"nums = [1, 2]; rotate_array(nums, 5); assert nums == [2, 1]\\\\\", \\\\\"nums = [-1, -100, 3, 99]; rotate_array(nums, 2); assert nums == [3, 99, -1, -100]\\\\\"] }\"'}"