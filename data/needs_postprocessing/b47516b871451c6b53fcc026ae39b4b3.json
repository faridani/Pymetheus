{
    "model": "command-r7b:latest",
    "response": "\"{ \\\"title\\\": \\\"Medium: Reverse String Rotation\\\", \\\"description\\\": \\\"Write a function `reverse_string_rotation` that takes two strings as input, `text` and `rotation`. The goal is to rotate the characters of the `text` string to the right by the number of positions specified in the `rotation` string. Each character in the `rotation` string represents a number of positions to rotate the text.\\\\n\\\\n#### Function Signature\\\\ndef reverse_string_rotation(text: str, rotation: str) -> str:\\\\n\\\", \\\"code\\\": \\\"def reverse_string_rotation(text: str, rotation: str) -> str:\\\\n    # Calculate the total rotation amount\\\\n    total_rotation = 0\\\\n    for char in rotation:\\\\n        if char.isdigit():\\\\n            total_rotation += int(char)\\\\n    # Rotate the text to the right by the calculated amount\\\\n    return text[-total_rotation:] + text[:-total_rotation]\\\\n\\\", \\\"tests\\\": [\\\"assert reverse_string_rotation('abcdefg', '321') == 'gfedcba'\\\", \\\"assert reverse_string_rotation('hello', '12') == 'llohe'\\\", \\\"assert reverse_string_rotation('world', '987654321') == 'dlorw'\\\", \\\"assert reverse_string_rotation('python', '10') == 'nopyht'\\\"] }\""
}