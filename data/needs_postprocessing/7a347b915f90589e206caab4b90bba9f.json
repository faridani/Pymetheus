{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Minimum Deletions to Make Array Beautiful\\\", \\\"description\\\": \\\"A beautiful array is a sequence of integers where the absolute difference between any two adjacent elements does not exceed 1. Given an array of n non-negative integers, write a function `min_deletions` that returns the minimum number of deletions required to make the array beautiful.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef min_deletions(arr: list[int)) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `arr` (list[int]): A list of n non-negative integers.\\\\n\\\\n#### Output\\\\n- Returns the minimum number of deletions required to make the array beautiful.\\\\n\\\", \\\"code\\\": \\\"from collections import deque\\\\n\\\\ndef min_deletions(arr: list[int)) -> int:\\\\n    n = len(arr)\\\\n    queue = deque([(0, 0)])\\\\n    dp = [float('inf')] * (n + 1)\\\\n    dp[0] = 0\\\\n\\\\n    while queue:\\\\n        i, deletions = queue.popleft()\\\\n        for j in range(i + 1, n):\\\\n            diff = abs(arr[j] - arr[i])\\\\n            if diff > 1:\\\\n                dp[j] = min(dp[j], deletions + 1)\\\\n                queue.append((j, deletions + 1))\\\\n            else:\\\\n                queue.append((j, deletions))\\\\n    return dp[-1]\\\\n\\\", \\\"tests\\\": [\\\"assert min_deletions([3, 5, 2]) == 3\\\", \\\"assert min_deletions([10, 6, 4, 12]) == 0\\\", \\\"assert min_deletions([1, 2, 3, 4]) == 0\\\"] }\""
}