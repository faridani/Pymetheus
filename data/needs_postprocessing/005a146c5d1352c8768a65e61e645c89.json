"{'model': 'qwen2:7b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Prime Number Generator\\\\\", \\\\\"description\\\\\": \\\\\"A prime number generator function that takes an integer `n` and returns a list of all prime numbers less than or equal to `n`. A prime number is a natural number greater than 1 that has no positive divisors other than 1 and itself. Write a function `generate_primes(n: int) -> List[int]`.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef generate_primes(n: int) -> list:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `n` (int): An integer greater than or equal to 2.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns a list of all prime numbers less than or equal to `n`.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"def is_prime(num: int) -> bool:\\\\\\\\n    if num <= 1:\\\\\\\\n        return False\\\\\\\\n    for i in range(2, int(num**0.5) + 1):\\\\\\\\n        if num % i == 0:\\\\\\\\n            return False\\\\\\\\n    return True\\\\\\\\ndef generate_primes(n: int) -> list:\\\\\\\\n    primes = []\\\\\\\\n    for num in range(2, n+1):\\\\\\\\n        if is_prime(num):\\\\\\\\n            primes.append(num)\\\\\\\\n    return primes\\\\\", \\\\\"tests\\\\\": [\\\\\"assert set(generate_primes(5)) == set([2, 3]), \\\\\\\\\\\\\"Check prime numbers up to 5\\\\\\\\\\\\\"\\\\\", \\\\\"assert set(generate_primes(10)) == set([2, 3, 5, 7]), \\\\\\\\\\\\\"Check prime numbers up to 10\\\\\\\\\\\\\"\\\\\", \\\\\"assert set(generate_primes(20)) == set([2, 3, 5, 7, 11, 13, 17, 19]), \\\\\\\\\\\\\"Check prime numbers up to 20\\\\\\\\\\\\\"\\\\\"] }\"'}"