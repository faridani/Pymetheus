{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Counting Duplicates\\\", \\\"description\\\": \\\"Write a function `count_duplicates` that takes a list of integers as input and returns the count of duplicate pairs. A pair `(a, b)` is considered a duplicate if there exists another pair `(c, d)` in the list such that `a == c` and `b == d`. If no pair is found to be identical, return 0.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef count_duplicates(nums: list[int]) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `nums` (list[int]): A list of integers.\\\\n\\\\n#### Output\\\\n- Returns the count of duplicate pairs in the input list.\\\\n\\\", \\\"code\\\": \\\"def count_duplicates(nums: list[int]) -> int:\\\\n    count = 0\\\\n    for i in range(len(nums) - 1):\\\\n        for j in range(i + 1, len(nums)):\\\\n            if (nums[i], nums[j]) in [(nums[k], nums[m]) for k in range(len(nums)) for m in range(k + 1, len(nums))]:\\\\n                count += 1\\\\n    return count\\\\n\\\", \\\"tests\\\": [\\\"assert count_duplicates([1, 2, 3, 4, 5]) == 0\\\", \\\"assert count_duplicates([1, 2, 2, 3, 4]) == 1\\\", \\\"assert count_duplicates([1, 1, 2, 2, 3, 3]) == 3\\\", \\\"assert count_duplicates([1, 2, 3, 4, 5, 6]) == 0\\\"] }\""
}