"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Anagram Detector (Hard)\\\\\", \\\\\"description\\\\\": \\\\\"Given two strings, determine if they are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of another word or phrase, typically using all the original letters exactly once.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef are_anagrams(s1: str, s2: str) -> bool:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `s1`, `s2` (str): Two strings that may contain letters (case insensitive). The length of the strings will be equal.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns `True` if the two input strings are anagrams, `False` otherwise.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"def is_anagram(s1: str, s2: str) -> bool:\\\\\\\\n    # Check if strings have the same length\\\\\\\\n    if len(s1) != len(s2):\\\\\\\\n        return False\\\\\\\\n    # Convert to lowercase and remove duplicates\\\\\\\\ns1 = sorted(list(set(s1.lower())))\\\\\\\\ns2 = sorted(list(set(s2.lower())))\\\\\\\\n    # Check if the sorted strings are equal\\\\\\\\n    return s1 == s2\\\\\", \\\\\"tests\\\\\": [\\\\\"assert is_anagram(\\'listen\\', \\'silent\\') == True\\\\\", \\\\\"assert is_anagram(\\'hello\\', \\'world\\') == False\\\\\", \\\\\"assert is_anagram(\\'Act\\', \\'Cat\\') == True\\\\\", \\\\\"assert is_anagram(\\'A man, a plan, a canal: Panama\\', \\'Panama canal: a plan, a man!\\') == True\\\\\"] }\"'}"