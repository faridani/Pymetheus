"{'model': 'mistral:latest', 'response': '{\"title\": \"Capitalize First Letter of Each Word\", \"description\": \"Write a function `capitalize_first` that takes a string as input and returns the same string with each word capitalized.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef capitalize_first(s: str) -> str:\\\\n```\\\\n\\\\n#### Input\\\\n- `s` (str): A string containing words separated by spaces, commas, or periods.\\\\n\\\\n#### Output\\\\n- Returns a modified version of the input string where each word is capitalized, preserving spaces and punctuation.\\\\n\\\\n#### Constraints and Hints\\\\n- The function should handle words that have multiple words separated by a hyphen (-) or an underscore (_).\\\\n- Preserve case for letters following apostrophes like in contractions (it\\'s -> It\\'s, don\\'t -> Don\\'t).\", \"code\": \"def capitalize_first(s: str) -> str:\\\\n    # Split the string into words based on spaces, commas, periods and punctuation\\\\n    words = s.split()\\\\n    # Capitalize each word using map function\\\\n    words = list(map(lambda word: word.capitalize(), words))\\\\n    # Rejoin the words with original spacing and punctuation\\\\n    return \\' \\'.join(words)\", \"tests\": [\"assert capitalize_first(\\'hello world\\') == \\'Hello World\\'\", \"assert capitalize_first(\\'hi there, how are you?\\') == \\'Hi There, How Are You?\\',\", \"assert capitalize_first(\", \"A man, a plan, a canal: Panama\\\\\") == \\\\\"\", \"A Man, A Plan, A Canal: Panama\\'\", \"assert capitalize_first(\\\\\"it\\'s my secret\\\\\") == \\\\\"It\\'s My Secret\\\\\"\"]}'}"