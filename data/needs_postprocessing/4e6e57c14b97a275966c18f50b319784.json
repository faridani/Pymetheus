{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Max Sum of Subarray\\\", \\\"description\\\": \\\"Given an array of integers, find the maximum sum of a subarray within it. A subarray is a contiguous part of the original array.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_sum_subarray(arr: list[int)) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `arr` (list[int]): An array of integers.\\\\n\\\\n#### Output\\\\n- Returns the maximum sum of a subarray within the input array.\\\", \\\"code\\\": \\\"\\\\nimport itertools\\\\n\\\\ndef max_sum_subarray(arr: list[int)) -> int:\\\\n    # Initialize maximum sum\\\\n    max_sum = float('-inf')\\\\n\\\\n    # Iterate over all possible subarrays\\\\n    for window_size in range(1, len(arr) + 1):\\\\n        for start_index in range(len(arr) - window_size + 1):\\\\n            subarray = arr[start_index:start_index + window_size]\\\\n            current_sum = sum(subarray)\\\\n            max_sum = max(max_sum, current_sum)\\\\n\\\\n    return max_sum\\\\n\\\", \\\"tests\\\": [\\\"assert max_sum_subarray([1, 2, 3]) == 6\\\", \\\"assert max_sum_subarray([-2, -3, 4, -1, -2, 1, 5, -3]) == 7\\\", \\\"assert max_sum_subarray([0, 0, 0]) == 0\\\"] }\""
}