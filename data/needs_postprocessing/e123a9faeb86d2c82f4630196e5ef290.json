{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Max Area of Island\\\", \\\"description\\\": \\\"Given a binary grid where each cell can be either land (0) or water (1), write a function `max_island_area` that returns the maximum area of an island in the grid.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_island_area(grid: list[list[int]]) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `grid` (list[list[int]]): A 2D binary grid where each cell is either land (0) or water (1).\\\\n\\\\n#### Output\\\\n- Returns the maximum area of an island in the grid.\\\\n\\\", \\\"code\\\": \\\"\\\\ndef max_island_area(grid: list[list[int]]) -> int:\\\\n    if not grid:\\\\n        return 0\\\\n\\\\n    def dfs(i, j):\\\\n        if i < 0 or i >= len(grid) or j < 0 or j >= len(grid[0]) or grid[i][j] == 1:\\\\n            return 0\\\\n        grid[i][j] = 1\\\\n        return 1 + dfs(i - 1, j) + dfs(i + 1, j) + dfs(i, j - 1) + dfs(i, j + 1)\\\\n\\\\n    max_area = 0\\\\n    for i in range(len(grid)):\\\\n        for j in range(len(grid[0])):\\\\n            if grid[i][j] == 0:\\\\n                area = dfs(i, j)\\\\n                max_area = max(max_area, area)\\\\n\\\\n    return max_area\\\", \\\"tests\\\": [\\\"assert max_island_area([[1, 0], [0, 1]]) == 2\\\", \\\"assert max_island_area([[1, 1], [1, 1]]) == 4\\\", \\\"assert max_island_area([[1, 1, 1], [1, 0, 1], [1, 1, 1]]) == 5\\\", \\\"assert max_island_area([[0, 0, 0], [0, 1, 0], [0, 0, 0]]) == 0\\\"] }\""
}