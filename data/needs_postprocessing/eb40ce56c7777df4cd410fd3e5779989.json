"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"\\\\\\\\\\\\\"Anagram Detector (Hard)\\\\\\\\\\\\\"\\\\\", \\\\\"description\\\\\": \\\\\"Write a function `find_anagrams` that takes a list of strings and returns a dictionary where the keys are the original words and the values are lists of all anagrams of each word found in the list.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef find_anagrams(words: List[str]) -> Dict[str, List[str]]:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `words` (List[str]): A non-empty list containing strings of lowercase English alphabet characters only.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns a dictionary where the keys are the original words and the values are lists of all anagrams of each word found in the list. If a word does not have any anagrams, it should be included in the dictionary with an empty list as its value.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"import collections\\\\\\\\n\\\\\\\\ndef find_anagrams(words: List[str]) -> Dict[str, List[str]]:\\\\\\\\n    # Sort and count each character in each word\\\\\\\\n    word_freq = {word: collections.Counter(sorted(char for char in word)) for word in words}\\\\\\\\n    \\\\\\\\n    # Find all pairs of words with the same frequency distribution\\\\\\\\n    anagrams = {k: [w for w in words if word_freq[w] == word_freq[k] and k != w] for k in word_freq}\\\\\\\\n\\\\\", \\\\\"tests\\\\\": [\\\\\"assert find_anagrams([\\\\\\\\\\\\\"listen\\\\\\\\\\\\\", \\\\\\\\\\\\\"silent\\\\\\\\\\\\\", \\\\\\\\\\\\\"enlist\\\\\\\\\\\\\", \\\\\\\\\\\\\"hillside\\\\\\\\\\\\\", \\\\\\\\\\\\\"lizard\\\\\\\\\\\\\"]) == {\\\\\\\\\\\\\"listen\\\\\\\\\\\\\": [\\\\\\\\\\\\\"listen\\\\\\\\\\\\\"], \\\\\\\\\\\\\"silent\\\\\\\\\\\\\": [\\\\\\\\\\\\\"silent\\\\\\\\\\\\\"], \\\\\\\\\\\\\"enlist\\\\\\\\\\\\\": [\\\\\\\\\\\\\"enlist\\\\\\\\\\\\\"], \\\\\\\\\\\\\"hillside\\\\\\\\\\\\\": [], \\\\\\\\\\\\\"lizard\\\\\\\\\\\\\": [\\\\\\\\\\\\\"elizalnirz\\\\\\\\\\\\\"]}\\\\\", \\\\\"assert find_anagrams([\\\\\\\\\\\\\"cat\\\\\\\\\\\\\", \\\\\\\\\\\\\"act\\\\\\\\\\\\\", \\\\\\\\\\\\\"tac\\\\\\\\\\\\\", \\\\\\\\\\\\\"dog\\\\\\\\\\\\\", \\\\\\\\\\\\\"god\\\\\\\\\\\\\"]) == {\\\\\\\\\\\\\"cat\\\\\\\\\\\\\": [\\\\\\\\\\\\\"cat\\\\\\\\\\\\\"], \\\\\\\\\\\\\"act\\\\\\\\\\\\\": [\\\\\\\\\\\\\"act\\\\\\\\\\\\\", \\\\\\\\\\\\\"tac\\\\\\\\\\\\\"], \\\\\\\\\\\\\"tac\\\\\\\\\\\\\": [\\\\\\\\\\\\\"tac\\\\\\\\\\\\\"], \\\\\\\\\\\\\"dog\\\\\\\\\\\\\": [], \\\\\\\\\\\\\"god\\\\\\\\\\\\\": [\\\\\\\\\\\\\"act\\\\\\\\\\\\\", \\\\\\\\\\\\\"dog\\\\\\\\\\\\\"]}\\\\\"] }\"'}"