"{'model': 'qwen2:7b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Easy: Prime Factorization\\\\\", \\\\\"description\\\\\": \\\\\"Write a Python function that takes an integer greater than 1 as input and returns its prime factors, sorted in ascending order. The output should be a list of integers representing the prime factors.\\\\\", \\\\\"function_signature\\\\\": \\\\\"def prime_factors(n: int) -> List[int]:\\\\\", \\\\\"input_format\\\\\": \\\\\"- `n` (int): An integer greater than 1.\\\\\", \\\\\"output_format\\\\\": \\\\\"- Returns a **sorted** list (`List[int]`) containing all unique prime factors of `n`, listed in ascending order.\\\\\", \\\\\"constraints\\\\\": \\\\\"- The input integer, `n`, will be greater than 1 and less than or equal to \\\\\\\\(2 \\\\\\\\times 10^{9}\\\\\\\\).\\\\\", \\\\\"examples\\\\\": [\\\\\"assert prime_factors(8) == [2, 2, 2]\\\\\", \\\\\"assert prime_factors(25) == [5, 5]\\\\\", \\\\\"assert prime_factors(7) == [7]\\\\\", \\\\\"assert prime_factors(60) == [2, 2, 3, 5]\\\\\"] }\"'}"