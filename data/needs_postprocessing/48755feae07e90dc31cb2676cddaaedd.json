{
    "model": "gemma2:27b",
    "response": "\"{ \\\"title\\\": \\\"Hard:  Matrix Spiral Traversal\\\", \\\"description\\\": \\\"Given a 2D matrix, return all elements of the matrix in spiral order.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef spiral_traversal(matrix):\\\\n```\\\\n\\\\n#### Input\\\\n- `matrix` (list of lists): A 2D matrix represented as a list of lists. Each inner list represents a row in the matrix.\\\\n\\\\n#### Output\\\\n- Returns a list containing all elements of the matrix in spiral order.\\\", \\\"code\\\": \\\"def spiral_traversal(matrix):\\\\n    m = len(matrix)\\\\n    n = len(matrix[0]) if m > 0 else 0\\\\n    top, bottom = 0, m - 1\\\\n    left, right = 0, n - 1\\\\n    result = []\\\\n\\\\n    while top <= bottom and left <= right:\\\\n        # Traverse right\\\\n        for i in range(left, right + 1):\\\\n            result.append(matrix[top][i])\\\\n        top += 1\\\\n\\\\n        # Traverse down\\\\n        for i in range(top, bottom + 1):\\\\n            result.append(matrix[i][right])\\\\n        right -= 1\\\\n\\\\n        if top <= bottom and left <= right:\\\\n            # Traverse left\\\\n            for i in range(right, left - 1, -1):\\\\n                result.append(matrix[bottom][i])\\\\n            bottom -= 1\\\\n\\\\n            # Traverse up\\\\n            for i in range(bottom, top - 1, -1):\\\\n                result.append(matrix[i][left])\\\\n            left += 1\\\\n    return result\\\", \\\"tests\\\": [\\\"'assert spiral_traversal([[1,2,3],[4,5,6],[7,8,9]]) == [1, 2, 3, 6, 9, 8, 7, 4, 5]' , 'assert spiral_traversal([[1,2,3,4], [5,6,7,8], [9,10,11,12]]) == [1, 2, 3, 4, 8, 12, 11, 10, 9, 5, 6, 7]'\\\"] }\""
}