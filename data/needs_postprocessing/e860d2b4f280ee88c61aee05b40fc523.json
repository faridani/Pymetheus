"{'model': 'mistral:latest', 'response': '{\"title\": \"\\'Check If It\\'s a Pangram or Not (Medium)\\'\", \"description\": \"A pangram is a sentence that contains every letter of the alphabet at least once. Write a function `is_pangram` that checks if a given string is a pangram.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef is_pangram(s: str) -> bool:\\\\n```\\\\n\\\\n#### Input\\\\n- `s` (str): A string containing only letters (no spaces, numbers or punctuation).\\\\n\\\\n#### Output\\\\n- Returns `True` if the input string is a pangram, `False` otherwise.\", \"code\": \"def is_pangram(s: str) -> bool:\\\\n    # Create a set to store unique characters from the alphabet\\\\n    alphabet = set(\\'abcdefghijklmnopqrstuvwxyz\\')\\\\n    # Remove duplicates and convert to lowercase before checking\\\\ns = s.lower().replace(\\' \\', \\'\\').replace(\\'\\\\\\\\s+\\', \\'\\')\\\\n    # If the length of the string is not equal to the alphabet length, it\\'s not a pangram\\\\ns_chars = set(s)\\\\n    if len(s) != len(alphabet):\\\\n        return False\\\\n    \\\\n    # Check if all characters in the string are present in the alphabet\\\\n    for char in alphabet:\\\\n        if char not in s_chars:\\\\n            return False\\\\n    \\\\n    # If we made it here, the string is a pangram\\\\n    return True\", \"tests\": [\"assert is_pangram(\\\\\"The quick brown fox jumps over the lazy dog\\\\\") == True\", \"assert is_pangram(\\\\\"Try hardest strings for a new phrase to test.\\\\\") == True\", \"assert is_pangram(\\\\\"Alphabet soup is fun but not easy.\\\\\") == False\"]}'}"