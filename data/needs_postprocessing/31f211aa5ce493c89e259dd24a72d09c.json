{
    "model": "llama3:latest",
    "response": "{\"title\": \"Maximum Sum of Subarray\", \"description\": \"A subarray of an array is a contiguous sequence of elements. For example, the subarrays of [1, 2, 3] are [1], [2], [3], and [1, 2, 3]. Given an integer array `nums`, find the maximum sum of a subarray.\\n\\n#### Function Signature\\n```python\\ndef max_sum_subarray(nums: list[int)) -> int:\\n```\\n\\n#### Input\\n- `nums` (list[int]): A list of integers.\\n\\n#### Output\\n- Returns the maximum sum of a subarray of the input array.\", \"code\": \"def max_sum_subarray(nums: list[int)) -> int:\\n    if not nums:\\n        return 0\\n    max_ending_here = max_so_far = nums[0]\\n    for num in nums[1:]:\\n        max_ending_here = max(num, max_ending_here + num)\\n        max_so_far = max(max_so_far, max_ending_here)\\n    return max_so_far\", \"tests\": [\"assert max_sum_subarray([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6\", \"assert max_sum_subarray([1, 2, 3, 10, 8, 7, 6]) == 30\", \"assert max_sum_subarray([-1, -2, -3, 0, 1]) == 2\", \"assert max_sum_subarray([]) == 0\"]}"
}