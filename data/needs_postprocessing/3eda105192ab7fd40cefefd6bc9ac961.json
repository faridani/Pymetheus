"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"\\'Anagram Splitter (Hard)\\'\\\\\", \\\\\"description\\\\\": \\\\\"Given a list of words, write a function `split_anagrams` that groups them by the anagram. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef split_anagrams(words: List[str]) -> Dict[str, List[str]]:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `words` (List[str]): A list of lowercase strings containing only letters.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns a dictionary where each key is an anagram and the value is a list of words that form that anagram.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"def split_anagrams(words: List[str]) -> Dict[str, List[str]]:\\\\\\\\n    # Create a dictionary to store the groups\\\\\\\\n    anagrams = {} \\\\\\\\n    # Sort each word and use it as a key in the dictionary\\\\\\\\n    for word in words:\\\\\\\\n        sorted_word = \\'\\'.join(sorted(word))\\\\\\\\n        if sorted_word not in anagrams:\\\\\\\\n            anagrams[sorted_word] = []\\\\\\\\n        anagrams[sorted_word].append(word)\\\\\\\\n    return anagrams\\\\\", \\\\\"tests\\\\\": [\\\\\"assert split_anagrams([\\'listen\\', \\'silent\\', \\'enlist\\']) == {\\'enlistsilente\\', [\\'listen\\', \\'silent\\']}\\\\\", \\\\\"assert split_anagrams([\\'aardvark\\', \\'book\\', \\'car\\', \\'dark\\', \\'kayak\\']) == {\\'arckd\\', [\\'aardvark\\', \\'dark\\'], [\\'book\\', \\'kayak\\']}\\\\\"] }\"'}"