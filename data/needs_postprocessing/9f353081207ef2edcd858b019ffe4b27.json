{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Easy: Sum of Subarrays\\\", \\\"description\\\": \\\"Given an array of integers, write a function that calculates the sum of all subarrays. A subarray is any contiguous sequence of elements within the original array.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef sum_of_subarrays(arr: list[int)) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `arr` (list[int]): A list of integers.\\\\n\\\\n#### Output\\\\n- Returns the sum of all subarrays in the input array.\\\\n\\\", \\\"code\\\": \\\"def sum_of_subarrays(arr: list[int)) -> int:\\\\n    n = len(arr)\\\\n    prefix_sum = [0] * (n + 1)\\\\n    for i in range(n):\\\\n        prefix_sum[i + 1] = prefix_sum[i] + arr[i]\\\\n    total_sum = 0\\\\n    for left in range(n):\\\\n        for right in range(left, n):\\\\n            total_sum += prefix_sum[right + 1] - prefix_sum[left]\\\\n    return total_sum\\\\n\\\", \\\"tests\\\": [\\\"assert sum_of_subarrays([1, 2, 3]) == 18\\\", \\\"assert sum_of_subarrays([-1, 0, 1]) == 2\\\", \\\"assert sum_of_subarrays([5, 5, 5]) == 30\\\"] }\""
}