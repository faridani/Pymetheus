"{'model': 'gemma2:27b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Medium - Count Islands\\\\\", \\\\\"description\\\\\": \\\\\"You are given a 2D grid representing a map. Each cell in the grid contains either \\'1\\' (representing land) or \\'0\\' (representing water). A group of connected \\'1\\'s forms an island. Write a function `count_islands` that takes the grid as input and returns the number of islands.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef count_islands(grid: list[list[str]]) -> int:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `grid` (list[list[str]]): A 2D grid where each cell is either \\'1\\' (land) or \\'0\\' (water).\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns the number of islands in the grid.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"def count_islands(grid: list[list[str]]) -> int:\\\\\\\\n    if not grid:\\\\\\\\n        return 0\\\\\\\\n\\\\\\\\n    rows, cols = len(grid), len(grid[0])\\\\\\\\n    num_islands = 0\\\\\\\\n\\\\\\\\n    def dfs(row, col):\\\\\\\\n        if row < 0 or row >= rows or col < 0 or col >= cols or grid[row][col] == \\'0\\':\\\\\\\\n            return\\\\\\\\n        grid[row][col] = \\'0\\'  # Mark the current cell as visited\\\\\\\\n        dfs(row + 1, col)\\\\\\\\n        dfs(row - 1, col)\\\\\\\\n        dfs(row, col + 1)\\\\\\\\n        dfs(row, col - 1)\\\\\\\\n\\\\\\\\n    for i in range(rows):\\\\\\\\n        for j in range(cols):\\\\\\\\n            if grid[i][j] == \\'1\\':\\\\\\\\n                num_islands += 1\\\\\\\\n                dfs(i, j)\\\\\\\\n\\\\\\\\n    return num_islands\\\\\", \\\\\"tests\\\\\": [\\\\\"assert count_islands([[\\'1\\',\\'1\\',\\'0\\',\\'0\\',\\'0\\'],[\\'1\\',\\'1\\',\\'0\\',\\'0\\',\\'0\\'],[\\'0\\',\\'0\\',\\'1\\',\\'0\\',\\'0\\'],[\\'0\\',\\'0\\',\\'0\\',\\'1\\',\\'1\\']]) == 3\\\\\", \\\\\"assert count_islands([[\\'1\\',\\'1\\',\\'1\\'],[\\'0\\',\\'1\\',\\'0\\'],[\\'1\\',\\'1\\',\\'1\\']]) == 1\\\\\", \\\\\"assert count_islands([[\\'1\\',\\'0\\',\\'1\\',\\'1\\',\\'0\\'],[\\'1\\',\\'0\\',\\'1\\',\\'0\\',\\'1\\'],[\\'1\\',\\'1\\',\\'1\\',\\'0\\',\\'1\\']]) == 2\\\\\"] }\"'}"