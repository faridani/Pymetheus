{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Easy: Maximum Sum of Divisible Subarrays\\\", \\\"description\\\": \\\"Given an array of integers, find the maximum sum of a subarray where all elements are divisible by 3. A subarray is a contiguous part of the array.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_sum_divisible_by_three(arr: list[int)) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `arr` (list[int]): A list of integers.\\\\n\\\\n#### Output\\\\n- Returns the maximum sum of a subarray where all elements are divisible by 3.\\\", \\\"code\\\": \\\"def max_sum_divisible_by_three(arr: list[int)) -> int:\\\\n    max_sum = 0\\\\n    current_sum = 0\\\\n    for num in arr:\\\\n        if num % 3 == 0:\\\\n            current_sum += num\\\\n        else:\\\\n            max_sum = max(max_sum, current_sum)\\\\n            current_sum = 0\\\\n    return max(max_sum, current_sum)\\\", \\\"tests\\\": [\\\"assert max_sum_divisible_by_three([1, 2, 3, 4, 5]) == 9\\\", \\\"assert max_sum_divisible_by_three([6, 9, 12, 15, 18]) == 54\\\", \\\"assert max_sum_divisible_by_three([-3, -6, -9, -12]) == 0\\\", \\\"assert max_sum_divisible_by_three([]) == 0\\\"] }\""
}