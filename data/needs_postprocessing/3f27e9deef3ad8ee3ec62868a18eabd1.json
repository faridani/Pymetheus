"{'model': 'gemma2:27b-instruct-q5_K_S', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Hard: Balanced Parentheses\\\\\", \\\\\"description\\\\\": \\\\\"Given a string containing only parentheses characters \\'(\\' and \\')\\', determine if the input string is balanced. A string is considered balanced if every opening parenthesis has a corresponding closing parenthesis and they are properly nested.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef is_balanced(s: str) -> bool:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `s` (str): A string containing only \\'(\\' and \\')\\' characters.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns `True` if the input string is balanced, `False` otherwise.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"def is_balanced(s: str) -> bool:\\\\\\\\n    stack = []\\\\\\\\n    parentheses = {\\'(\\': \\')\\'}\\\\\\\\n    for char in s:\\\\\\\\n        if char in parentheses.keys():\\\\\\\\n            stack.append(char)\\\\\\\\n        elif char in parentheses.values():\\\\\\\\n            if not stack or parentheses[stack.pop()] != char:\\\\\\\\n                return False\\\\\\\\n    return len(stack) == 0\\\\\\\\n\\\\\", \\\\\"tests\\\\\": [\\\\\"assert is_balanced(\\\\\\\\\\\\\"()\\\\\\\\\\\\\") == True\\\\\", \\\\\"assert is_balanced(\\\\\\\\\\\\\"(())\\\\\\\\\\\\\") == True\\\\\", \\\\\"assert is_balanced(\\\\\\\\\\\\\"(()())\\\\\\\\\\\\\") == True\\\\\", \\\\\"assert is_balanced(\\\\\\\\\\\\\")(\\\\\\\\\\\\\") == False\\\\\", \\\\\"assert is_balanced(\\\\\\\\\\\\\"(((\\\\\\\\\\\\\") == False\\\\\", \\\\\"assert is_balanced(\\\\\\\\\\\\\")(()(\\\\\\\\\\\\\") == False\\\\\"] }\"'}"