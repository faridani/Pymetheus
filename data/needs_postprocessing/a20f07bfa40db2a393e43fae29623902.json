"{'model': 'mistral-nemo:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Balanced Parentheses Checker (Hard)\\\\\", \\\\\"description\\\\\": \\\\\"A balanced parentheses sequence consists of open parentheses \\'(\\' and close parentheses \\')\\'. Write a function `is_balanced` that checks if a given string consisting of parentheses is balanced.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef is_balanced(s: str) -> bool:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `s` (str): A string containing only parentheses \\'(\\' and \\')\\'.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns `True` if the input string is balanced, `False` otherwise.\\\\\\\\n\\\\\\\\n#### Constraints\\\\\\\\n- The length of the input string will be between 1 and 100 characters.\\\\\\\\n\\\\\\\\n#### Hints\\\\\\\\n- You can use a stack to keep track of open parentheses.\\\\\", \\\\\"code\\\\\": \\\\\"def is_balanced(s: str) -> bool:\\\\\\\\n    stack = []\\\\\\\\n    for char in s:\\\\\\\\n        if char == \\'(\\': \\\\\\\\n            stack.append(char)\\\\\\\\n        elif char == \\')\\':\\\\\\\\n            if not stack or stack[-1] != \\'(\\':\\\\\\\\n                return False\\\\\\\\n            else:\\\\\\\\n                stack.pop()\\\\\\\\n    return not stack\\\\\", \\\\\"tests\\\\\": [\\\\\"assert is_balanced(\\'()\\') == True\\\\\", \\\\\"assert is_balanced(\\'())\\') == False\\\\\", \\\\\"assert is_balanced(\\'((()))\\') == True\\\\\", \\\\\"assert is_balanced(\\'())(\\') == False\\\\\"] }\"'}"