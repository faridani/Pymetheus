{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Hard: Efficiently Counting Islands\\\", \\\"description\\\": \\\"Given a 2D grid of characters, where '1' represents land and '0' represents water, write a function `count_islands` that counts the number of islands in the grid. An island is a group of adjacent land cells connected horizontally or vertically.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef count_islands(grid: list[list[int]]) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `grid` (list[list[int]]): A 2D grid of characters, where '1' represents land and '0' represents water.\\\\n\\\\n#### Output\\\\n- Returns the number of islands in the grid.\\\\n\\\", \\\"code\\\": \\\"from typing import List\\\\n\\\\ndef count_islands(grid: List[List[int]]) -> int:\\\\n    def dfs(i: int, j: int) -> None:\\\\n        if i < 0 or j < 0 or i >= len(grid) or j >= len(grid[0]) or grid[i][j] == 0:\\\\n            return\\\\n        grid[i][j] = 0\\\\n        dfs(i - 1, j)\\\\n        dfs(i + 1, j)\\\\n        dfs(i, j - 1)\\\\n        dfs(i, j + 1)\\\\n    count = 0\\\\n    for i in range(len(grid)):\\\\n        for j in range(len(grid[0])):\\\\n            if grid[i][j] == 1:\\\\n                dfs(i, j)\\\\n                count += 1\\\\n    return count\\\", \\\"tests\\\": [\\\"assert count_islands([[0, 0, 0, 0], [0, 1, 0, 0], [0, 1, 1, 0]]) == 2\\\", \\\"assert count_islands([[1, 1, 1, 1], [1, 0, 0, 1], [1, 0, 1, 1], [1, 1, 1, 1]]) == 3\\\", \\\"assert count_islands([[0, 0, 0], [0, 1, 0], [0, 1, 1]]) == 2\\\"] }\""
}