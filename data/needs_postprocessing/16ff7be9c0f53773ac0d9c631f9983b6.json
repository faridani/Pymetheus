{
    "model": "llama3:latest",
    "response": "{\"title\": \"Hard: Minimum Swaps to Sort Array\", \"description\": \"#### Problem\\nGiven an array of integers, write a function that returns the minimum number of swaps required to sort the array. A swap is defined as replacing two elements at different positions in the array with each other.\\n\\n#### Function Signature\\n```python\\ndef min_swaps(arr: list[int)) -> int:\\n```\\n\\n#### Input\\n- `arr` (list[int]): An unsorted array of integers.\\n\\n#### Output\\n- Returns the minimum number of swaps required to sort the input array.\", \"code\": \"import heapq\\n\\ndef min_swaps(arr: list[int)) -> int:\\n    # Create a priority queue for sorting\\n    pq = [x for x in arr]\\n    pq.sort()\\n    visited = [False] * len(pq)\\n    swaps = 0\\n    for i, num in enumerate(pq):\\n        if num != arr[i]:\\n            j = heapq.index(pq, num)\\n            pq[i], pq[j] = pq[j], pq[i]\\n            visited[i], visited[j] = visited[j], visited[i]\\n            swaps += 1\\n    return swaps\", \"tests\": [\"assert min_swaps([3,2,5,4]) == 3\", \"assert min_swaps([5,4,3,2]) == 0\", \"assert min_swaps([2,3,5,4]) == 3\"]}"
}