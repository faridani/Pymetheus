{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Hard: Maximal Segment Sum\\\", \\\"description\\\": \\\"#### Problem Description\\\\nA maximal segment sum of an array A is the maximum possible value of a sum of some subarray of A. For example, consider the array [1, 3, -1, 2, -5, 3, 6]. The maximal segment sum in this case would be 7 (from the segment [1, 3, -1, 2]), and the maximum sum is 10 (from the segment [1, 3, -1, 2, -5]). Write a function `maximal_segment_sum` that takes an array of integers as input and returns the maximal segment sum.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef maximal_segment_sum(arr: list[int)) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `arr` (list[int)): An array of integers.\\\\n\\\\n#### Output\\\\n- Returns the maximum possible value of a sum of some subarray of the input array.\\\\n\\\", \\\"code\\\": \\\"def maximal_segment_sum(arr: list[int)) -> int:\\\\n    n = len(arr)\\\\n    prefix_sum = [0] * (n + 1)\\\\n    for i in range(n):\\\\n        prefix_sum[i + 1] = prefix_sum[i] + arr[i]\\\\n    max_sum = float('-inf')\\\\n    for left in range(n):\\\\n        for right in range(left, n):\\\\n            max_sum = max(max_sum, prefix_sum[right + 1] - prefix_sum[left])\\\\n    return max_sum\\\\n\\\", \\\"tests\\\": [\\\"assert maximal_segment_sum([-2, 3, -4]) == 6\\\", \\\"assert maximal_segment_sum([1, -4, 2, 5, -3]) == 10\\\", \\\"assert maximal_segment_sum([-10, 20, -30, 40, -50, 60]) == 110\\\", \\\"assert maximal_segment_sum([]) == 0\\\"] }\""
}