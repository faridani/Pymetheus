"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Anagram Finder (Hard)\\\\\", \\\\\"description\\\\\": \\\\\"Write a function `find_anagrams(words: List[str]) -> Dict[str, List[str]]` that finds all anagram pairs within a given list of words. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef find_anagrams(words: List[str]) -> Dict[str, List[str]]:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `words` (List[str]): A list of strings containing lowercase letters only.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns a dictionary where keys are anagrams and values are lists of words that form the anagram pairs.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"from collections import Counter\\\\\\\\n\\\\\\\\ndef find_anagrams(words: List[str]) -> Dict[str, List[str]]:\\\\\\\\n    # Count the occurrence of each character in all words\\\\\\\\n    word_counts = {word: Counter(word) for word in words}\\\\\\\\n    \\\\\\\\n    # Find pairs of words that have the same count of characters\\\\\\\\n    anagrams = {\\\\\\\\n        \\'\\'.join(sorted(word)): [unsorted_word for unsorted_word in words if sorted(word) == sorted(unsorted_word) and word != unsorted_word] for word, counts in word_counts.items()\\\\\\\\n    }\\\\\\\\n    \\\\\\\\n    # Remove empty lists from the result\\\\\\\\n    return {key: value for key, value in anagrams.items() if value}\\\\\\\\n\\\\\", \\\\\"tests\\\\\": [\\\\\"assert find_anagrams([\\'listen\\', \\'silent\\', \\'enlist\\']) == {\\'enlist\\': [\\'listen\\', \\'silent\\'], \\'listen\\': [\\'enlist\\', \\'silent\\']}\\\\\", \\\\\"assert find_anagrams([\\'cat\\', \\'act\\', \\'tac\\']) == {\\'act\\': [\\'cat\\', \\'tac\\'], \\'cat\\': [\\'act\\', \\'tac\\'], \\'tac\\': [\\'cat\\', \\'act\\']}\\\\\", \\\\\"assert find_anagrams([\\'rat\\', \\'car\\', \\'art\\']) == {\\'art\\': [\\'rat\\'], \\'rat\\': [\\'art\\']}\\\\\"] }\"'}"