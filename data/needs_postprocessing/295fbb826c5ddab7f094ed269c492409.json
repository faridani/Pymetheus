{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Counting Islands\\\", \\\"description\\\": \\\"An island is a group of connected land pixels that are not surrounded by water. You can think of islands as contiguous areas of 1s (land) separated by 0s (water). Write a function `count_islands` that takes a binary matrix `grid` as input and returns the number of islands in the grid.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef count_islands(grid: list[list[int]]) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `grid` (list[list[int]]): A 2D binary matrix where 1 represents land and 0 represents water.\\\\n\\\\n#### Output\\\\n- Returns the number of islands in the grid.\\\\n\\\", \\\"code\\\": \\\"\\\\nimport copy\\\\n\\\\ndef count_islands(grid: list[list[int]]) -> int:\\\\n    if not grid or not grid[0]:\\\\n        return 0\\\\n\\\\n    def dfs(i, j):\\\\n        if i < 0 or i >= len(grid) or j < 0 or j >= len(grid[0]) or grid[i][j] != 1:\\\\n            return\\\\n        grid[i][j] = 0\\\\n        dfs(i - 1, j)\\\\n        dfs(i + 1, j)\\\\n        dfs(i, j - 1)\\\\n        dfs(i, j + 1)\\\\n\\\\n    count = 0\\\\n    for i in range(len(grid)):\\\\n        for j in range(len(grid[0])):\\\\n            if grid[i][j] == 1:\\\\n                dfs(i, j)\\\\n                count += 1\\\\n    return count\\\\n\\\\n\\\", \\\"tests\\\": [\\\"assert count_islands([[0,0,0,0,0],[1,0,1,1,0],[0,0,1,0,0],[0,0,0,1,1]]) == 1\\\", \\\"assert count_islands([[1,1,0,0,0],[1,1,0,0,0],[0,0,1,0,0],[0,0,1,1,1]]) == 1\\\", \\\"assert count_islands([[0,0,0,0,0],[0,1,0,0,0],[0,0,1,1,1],[0,0,0,0,0]]) == 3\\\"] }\""
}