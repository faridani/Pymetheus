{
    "model": "llama3:latest",
    "response": "{\"title\": \"The Lost City (Hard)\", \"description\": \"You are an archaeologist on a mission to find the lost city of Zenith. The city is hidden deep within a dense jungle, and you have a map that will lead you there if you can decode it. The map consists of 10 lines of cryptic messages, each line having exactly 5 characters. You need to write a function `decode_map` that takes the map as input and returns the coordinates (x, y) where the lost city is hidden.\\n\\n#### Function Signature\\n```python\\ndef decode_map(map: str) -> tuple[int, int]:\\n```\\n\\n#### Input\\n- `map` (str): A string containing 10 lines of cryptic messages, each line having exactly 5 characters.\\n\\n#### Output\\n- Returns a tuple `(x, y)` representing the coordinates where the lost city is hidden.\", \"code\": \"\", \"\\nimport re\\n\\ndef decode_map(map: str) -> tuple[int, int]:\\n    lines = map.split('\\n')\\n    x = 0\\n    y = 0\\n    for line in lines:\\n        match = re.match(r'(\\\\d+)\\\\s+(\\\\w+)', line)\\n        if match:\\n            direction = match.group(2).lower()\\n            distance = int(match.group(1))\\n            if direction == 'n':\\n                y += distance\\n            elif direction == 's':\\n                y -= distance\\n            elif direction == 'e':\\n                x += distance\\n            elif direction == 'w':\\n                x -= distance\\n    return (x, y)\": \"\", \"tests\": [\"assert decode_map('0 N\\n1 S\\n2 E\\n3 W\\n4 N\\n5 S\\n6 E\\n7 W\\n8 N\\n9 S') == (0, 8)\", \"assert decode_map('10 E\\n9 W\\n8 N\\n7 S\\n6 E\\n5 W\\n4 N\\n3 S\\n2 E\\n1 W') == (1, 11)\"]}"
}