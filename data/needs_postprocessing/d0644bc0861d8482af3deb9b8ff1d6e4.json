"{'model': 'gemma2:27b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Hard: Maximum Subarray Sum with Rotations\\\\\", \\\\\"description\\\\\": \\\\\"Given an array of integers, find the maximum sum of a contiguous subarray after performing at most one rotation on the array. A rotation involves moving the last element to the beginning of the array.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef max_rotated_subarray_sum(arr: list[int]) -> int:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `arr` (list[int]): An array of integers.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns the maximum sum of a contiguous subarray after at most one rotation.\\\\\", \\\\\"code\\\\\": \\\\\"def max_rotated_subarray_sum(arr: list[int]) -> int:\\\\\\\\n    n = len(arr)\\\\\\\\n    max_so_far = arr[0]\\\\\\\\n    current_max = arr[0]\\\\\\\\n    for i in range(1, n):\\\\\\\\n        current_max = max(arr[i], current_max + arr[i])\\\\\\\\n        max_so_far = max(max_so_far, current_max)\\\\\\\\n    rotated_max = arr[-1]  \\\\\\\\n    current_sum = arr[-1]\\\\\\\\n    for i in range(n - 2, -1, -1):\\\\\\\\n        current_sum += arr[i]\\\\\\\\n        rotated_max = max(rotated_max, current_sum)\\\\\\\\n    return max(max_so_far, rotated_max)\\\\\", \\\\\"tests\\\\\": [\\\\\"\\'assert max_rotated_subarray_sum([1, 2, -3, 4, 5]) == 12\\'\\\\\", \\\\\"\\'assert max_rotated_subarray_sum([-1, -2, 0, 1, 2]) == 3\\'\\\\\", \\\\\"\\'assert max_rotated_subarray_sum([1, -2, 3, -4, 5]) == 6\\'\\\\\"] }\"'}"