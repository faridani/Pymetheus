"{'model': 'gemma2:27b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Hard: Anagram Grouping\\\\\", \\\\\"description\\\\\": \\\\\"Given a list of strings, group the anagrams together.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef group_anagrams(strs: list[str]) -> list[list[str]]:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `strs` (list[str]): A list of strings.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns a list of lists, where each inner list contains anagrams.\\\\\", \\\\\"code\\\\\": \\\\\"def group_anagrams(strs: list[str]) -> list[list[str]]:\\\\\\\\n    \\\\\\\\\\\\\"\\\\\\\\\\\\\"\\\\\\\\\\\\\"\\\\\\\\n    Given a list of strings, group the anagrams together.\\\\\\\\n    \\\\\\\\\\\\\"\\\\\\\\\\\\\"\\\\\\\\\\\\\"\\\\\\\\n    anagram_groups = {}\\\\\\\\n    for word in strs:\\\\\\\\n        sorted_word = \\'\\'.join(sorted(word))\\\\\\\\n        if sorted_word in anagram_groups:\\\\\\\\n            anagram_groups[sorted_word].append(word)\\\\\\\\n        else:\\\\\\\\n            anagram_groups[sorted_word] = [word]\\\\\\\\n    return list(anagram_groups.values())\\\\\\\\n\\\\\", \\\\\"tests\\\\\": [\\\\\"assert group_anagrams([\\'eat\\', \\'tea\\', \\'tan\\', \\'ate\\', \\'nat\\', \\'bat\\']) == [[\\'eat\\', \\'tea\\', \\'ate\\'], [\\'tan\\', \\'nat\\'], [\\'bat\\']] \\\\\", \\\\\"assert group_anagrams([\\'\\']) == [[\\'\\']]\\\\\", \\\\\"assert group_anagrams([\\'a\\']) == [[\\'a\\']]\\\\\"] }\"'}"