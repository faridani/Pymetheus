{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Maximum Sum of Non-Adjacent Elements\\\", \\\"description\\\": \\\"Given a list of integers where each element represents the maximum number of points that can be scored by a team without any adjacent elements being considered, write a function to find the maximum sum of non-adjacent elements. The input list will always have at least one element.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_sum_non_adjacent(nums: list[int)) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `nums` (list[int)): A list of integers representing the maximum number of points that can be scored by a team without any adjacent elements being considered.\\\\n\\\\n#### Output\\\\n- Returns the maximum sum of non-adjacent elements in the input list.\\\\n\\\", \\\"code\\\": \\\"def max_sum_non_adjacent(nums: list[int)) -> int:\\\\n    n = len(nums)\\\\n    dp = [0] * (n + 1)\\\\n    dp[0] = nums[0]\\\\n    for i in range(1, n):\\\\n        dp[i] = max(dp[i - 1], nums[i] + (dp[i - 2] if i >= 2 else 0))\\\\n    return dp[n - 1]\\\\n\\\", \\\"tests\\\": [\\\"assert max_sum_non_adjacent([2, 7, 9, 3, 1]) == 12\\\", \\\"assert max_sum_non_adjacent([2, 1, 4, 3]) == 6\\\", \\\"assert max_sum_non_adjacent([10, 5, 8, 11, 15, 13]) == 30\\\"] }\""
}