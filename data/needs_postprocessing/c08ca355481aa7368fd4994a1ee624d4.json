{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Minimum Swaps to Sort Array\\\", \\\"description\\\": \\\"Given an array of distinct integers, write a function that calculates the minimum number of swaps required to sort the array in non-decreasing order.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef min_swaps(arr: list[int)) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `arr` (list[int]): A list of distinct integers.\\\\n\\\\n#### Output\\\\n- Returns the minimum number of swaps required to sort the array in non-decreasing order.\\\\n\\\", \\\"code\\\": \\\"def min_swaps(arr: list[int)) -> int:\\\\n    n = len(arr)\\\\n    swaps = 0\\\\n    for i in range(n):\\\\n        while arr[i] != i + 1:\\\\n            temp = arr[arr.index(i + 1)]\\\\n            arr[arr.index(i + 1)] = arr[i]\\\\n            arr[i] = temp\\\\n            swaps += 1\\\\n    return swaps\\\\n\\\", \\\"tests\\\": [\\\"assert min_swaps([1, 3, 5, 4]) == 3\\\", \\\"assert min_swaps([3, 2, 1, 4, 5, 6]) == 5\\\", \\\"assert min_swaps([1, 2, 3]) == 0\\\", \\\"assert min_swaps([5, 4, 3, 2, 1]) == 5\\\"] }\""
}