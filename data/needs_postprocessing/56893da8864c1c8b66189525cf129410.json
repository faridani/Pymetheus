{
    "model": "llama3:latest",
    "response": "{\"title\": \"Easy: Valid Parentheses\", \"description\": \"Write a function `is_valid_parentheses` that takes a string of parentheses as input and returns whether the parentheses are valid or not. A string of parentheses is considered valid if every open parenthesis has a corresponding close parenthesis, and vice versa.\\n\\n#### Function Signature\\n```python\\ndef is_valid_parentheses(s: str) -> bool:\\n```\\n\\n#### Input\\n- `s` (str): A string containing only parentheses characters: '(' and ')'.\\n\\n#### Output\\n- Returns `True` if the input string contains valid parentheses, `False` otherwise.\", \"code\": \"def is_valid_parentheses(s: str) -> bool:\\n    stack = []\\n    for char in s:\\n        if char == '(': \\n            stack.append(char)\\n        elif char == ')': \\n            if not stack:\\n                return False\\n            stack.pop()\\n    return not stack\", \"tests\": [\"assert is_valid_parentheses(\", \"(1+2)3\", \") == True\", \"assert is_valid_parentheses(\\\"(\\\") == False\", \"assert is_valid_parentheses(\\\")(()))((\\\")) == True\", \"assert is_valid_parentheses(\\\")(\\\") == False\"]}"
}