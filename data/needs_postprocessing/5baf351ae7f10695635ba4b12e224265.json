{
    "model": "llama3:latest",
    "response": "{\"title\": \"Maximum Rectangle Under Histogram\", \"description\": \"Given an array of integers `heights` representing the height of a histogram bar at each index, find the maximum area under the histogram that can be achieved by placing a rectangle on top of the bars. The rectangle's width is equal to the number of contiguous bars and its height is equal to the minimum height of the bars within the range.\\n\\n#### Function Signature\\n```python\\ndef max_rectangle_area(heights: list[int)) -> int:\\n```\\n\\n#### Input\\n- `heights` (list[int]): A list of integers representing the height of a histogram bar at each index.\\n\\n#### Output\\n- Returns the maximum area under the histogram that can be achieved by placing a rectangle on top of the bars.\", \"code\": \"\\ndef max_rectangle_area(heights: list[int)) -> int:\\n    n = len(heights)\\n    stack = []\\n    max_area = 0\\n\\n    for i in range(n + 1):\\n        while stack and (i == n or heights[stack[-1]] >= heights[i]):\\n            h = heights[stack.pop()]\\n            w = i if not stack else i - stack[-1] - 1\\n            max_area = max(max_area, h * w)\\n        stack.append(i)\\n\\n    return max_area\", \"tests\": [\"assert max_rectangle_area([2, 1, 5, 6, 2, 3]) == 10\", \"assert max_rectangle_area([1, 8, 6, 2, 5, 4, 8, 7, 1]) == 36\", \"assert max_rectangle_area([1]) == 1\"]}"
}