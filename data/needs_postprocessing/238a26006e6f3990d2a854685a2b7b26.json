"{'model': 'qwen2:7b', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Square Sum Sorter\\\\\", \\\\\"description\\\\\": \\\\\"Write a function `square_sum_sorter` that takes an array of integers as input and returns the sorted array based on their square sum. The sorting order should be ascending (smallest to largest) if multiple elements have the same square sum, sort them in descending order.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef square_sum_sorter(arr: list) -> list:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `arr` is a list of integers. Each integer will be within the range [-10^3, 10^3]. The length of the array will not exceed 10^4.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns a sorted list of integers based on their square sum in ascending order and in descending order for equal square sums.\\\\\", \\\\\"code\\\\\": \\\\\"from typing import List\\\\\\\\ndef square_sum_sorter(arr: List[int]) -> List[int]:    # Calculate the square sum of each element    square_sums = [x**2 for x in arr]    # Sort the array based on the square sum and then by descending order if equal    sorted_arr = sorted(arr, key=lambda x: (square_sum_sorter.square_sum(x), -abs(x)), reverse=False)    return sorted_arr\\\\\\\\ndef square_sum_sorter.square_sum(num: int) -> int:    return num**2\\\\\", \\\\\"tests\\\\\": [\\\\\"assert square_sum_sorter([3, 1, -4, 5]) == [-4, 1, 3, 5]\\\\\", \\\\\"assert square_sum_sorter([-7, -3, 0, 4, 8]) == [0, -3, -7, 4, 8]\\\\\", \\\\\"assert square_sum_sorter([2, 2, -2]) == [-2, 2, 2]\\\\\"] }\"'}"