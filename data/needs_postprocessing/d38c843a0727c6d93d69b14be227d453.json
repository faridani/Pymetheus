{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Hard: Valid Sudoku\\\", \\\"description\\\": \\\"Write a function `is_valid_sudoku` that checks if a given 9x9 2D list represents a valid Sudoku board.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef is_valid_sudoku(board: list[list[int]]) -> bool:\\\\n```\\\\n\\\\n#### Input\\\\n- `board` (list[list[int]]): A 9x9 2D list representing a Sudoku board, where each element is an integer from 0 to 9.\\\\n- Each row and column must contain the numbers 1-9 without repetition.\\\\n- Each 3x3 sub-grid within the board must also contain the numbers 1-9 without repetition.\\\\n\\\\n#### Output\\\\n- Returns `True` if the input Sudoku board is valid, `False` otherwise.\\\\n\\\", \\\"code\\\": \\\"\\\\nimport copy\\\\n\\\\ndef is_valid_sudoku(board: list[list[int]]) -> bool:\\\\n    for i in range(9):\\\\n        row = [x for x in board[i] if x != 0]\\\\n        col = [board[j][i] for j in range(9) if board[j][i] != 0]\\\\n        box_row = i // 3 * 3\\\\n        box_col = i % 3 * 3\\\\n        box = [board[box_row + r // 3][box_col + c // 3] for r in range(3) for c in range(3)]\\\\n        if len(set(row)) != len(row) or len(set(col)) != len(col) or len(set(box)) != len(box):\\\\n            return False\\\\n    return True\\\\n\\\", \\\"tests\\\": [\\\"assert is_valid_sudoku([[5,3,4,6,7,8,9,1,2],[6,7,8,9,1,2,3,4,5],[2,1,9,8,4,3,5,6,7],[8,5,9,1,2,3,4,6,7],[4,2,6,5,3,7,8,9,1],[7,1,3,9,2,4,5,6,8],[9,6,1,7,5,3,2,4,8],[3,4,2,8,5,1,6,7,9],[1,9,7,4,2,3,6,8,5]] == True\\\", \\\"assert is_valid_sudoku([[5,3,4,6,7,8,9,1,2],[6,7,8,9,1,2,3,4,5],[2,1,9,8,4,3,5,6,7],[8,5,9,1,2,3,4,6,7],[4,2,6,5,3,7,8,9,1],[7,1,3,9,2,4,5,6,8],[9,6,1,7,5,3,2,4,8],[3,4,2,8,5,1,6,7,9],[1,9,7,4,2,3,6,8,5]] == True\\\", \\\"assert is_valid_sudoku([[5,3,4,6,7,8,9,1,2],[6,7,8,9,1,2,3,4,5],[2,1,9,8,4,3,5,6,7],[8,5,9,1,2,3,4,6,7],[4,2,6,5,3,7,8,9,1],[7,1,3,9,2,4,5,6,8],[9,6,1,7,5,3,2,4,8],[3,4,2,8,5,1,6,7,9],[1,9,7,4,2,3,6,8,5]] == True\\\"] }\""
}