{
    "model": "llama3:latest",
    "response": "{\"title\": \"Easy: Maximum Sum of Subarray\", \"description\": \"Given a list of integers, write a function that returns the maximum sum of any subarray. A subarray is a contiguous sequence of elements within the original array.\\n\\n#### Function Signature\\n```python\\ndef max_sum_subarray(arr: list[int)) -> int:\\n```\\n\\n#### Input\\n- `arr` (list[int)): A list of integers.\\n\\n#### Output\\n- Returns the maximum sum of any subarray in the input list.\", \"code\": \"\\nimport itertools\\n\\ndef max_sum_subarray(arr: list[int)) -> int:\\n    n = len(arr)\\n    if n == 0:\\n        return 0\\n    if n == 1:\\n        return arr[0]\\n\\n    max_sum = float('-inf')\\n    for i in range(n):\\n        current_sum = sum(arr[i:])\\n        max_sum = max(max_sum, current_sum)\\n\\n    return max_sum\", \"tests\": [\"assert max_sum_subarray([-2,1,-3,4,-1,2,1,-5,4]) == 6\", \"assert max_sum_subarray([1, -3, 2, 3, -2]) == 7\", \"assert max_sum_subarray([]) == 0\", \"assert max_sum_subarray([-1]) == -1\"]}"
}