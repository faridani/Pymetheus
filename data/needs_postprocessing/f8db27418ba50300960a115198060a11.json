{
    "model": "llama3:latest",
    "response": "{\"title\": \"Maximum Sum of Non-Adjacent Elements\", \"description\": \"Given an integer array `nums`, find the maximum sum of non-adjacent elements in it. For example, if `nums = [2,7,9,3,1]`, then the maximum sum is 12 (from elements at indices 0 and 3).\\n\\n#### Function Signature\\n```python\\ndef max_sum(nums: list[int)) -> int:\\n```\\n\\n#### Input\\n- `nums` (list[int]): A non-empty list of integers.\\n\\n#### Output\\n- Returns the maximum sum of non-adjacent elements in the input list.\", \"code\": \"def max_sum(nums: list[int)) -> int:\\n    if len(nums) == 1:\\n        return nums[0]\\n    elif len(nums) == 2:\\n        return max(nums)\\n    else:\\n        dp = [0] * len(nums)\\n        dp[0], dp[1] = nums[0], max(nums[0], nums[1])\\n        for i in range(2, len(nums)):\\n            dp[i] = max(dp[i-1], dp[i-2] + nums[i])\\n        return dp[-1]\", \"tests\": [\"assert max_sum([2,7,9,3,1]) == 12\", \"assert max_sum([10,1,5,4]) == 15\", \"assert max_sum([-1,-2,4,3]) == 6\"]}"
}