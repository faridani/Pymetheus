{
    "model": "llama3:latest",
    "response": "{\"title\": \"Maximum Sum of Non-Adjacent Elements\", \"description\": \"Given a list of integers, find the maximum sum of non-adjacent elements. For example, if the input list is [2, 7, 9, 3, 1], the function should return 12 because the maximum sum of non-adjacent elements is achieved by selecting the elements at indices 0, 2 and 4.\\n\\n#### Function Signature\\n```python\\ndef max_sum_non_adjacent(nums: list[int)) -> int:\\n```\\n\\n#### Input\\n- `nums` (list[int]): A list of integers that may contain negative numbers.\\n\\n#### Output\\n- Returns the maximum sum of non-adjacent elements in the input list.\", \"code\": \"def max_sum_non_adjacent(nums: list[int)) -> int:\\n    n = len(nums)\\n    if n <= 1:\\n        return nums[0] if n == 1 else 0\\n    dp = [0] * (n + 1)\\n    dp[1] = nums[0]\\n    for i in range(2, n + 1):\\n        dp[i] = max(dp[i - 1], nums[i - 1] + dp[i - 2])\\n    return dp[-1]\", \"tests\": [\"assert max_sum_non_adjacent([2, 7, 9, 3, 1]) == 12\", \"assert max_sum_non_adjacent([1, 4, 10, 3, 1]) == 6\", \"assert max_sum_non_adjacent([-2, 0, -5, 10, -20]) == 8\"]}"
}