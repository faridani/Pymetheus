{
    "model": "gemma2:27b",
    "response": "\"{ \\\"title\\\": \\\"Medium - Array Rotation\\\", \\\"description\\\": \\\"Given an array of integers `arr` and a positive integer `k`, rotate the array to the right by `k` steps. In-place modification is allowed.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef rotate_array(arr: list[int], k: int) -> None:\\\\n```\\\\n\\\\n#### Input\\\\n- `arr` (list[int]): A list of integers.\\\\n- `k` (int): The number of steps to rotate the array to the right.\\\\n\\\\n#### Output\\\\n- Modifies the input array in-place. No return value required.\\\", \\\"code\\\": \\\"def rotate_array(arr: list[int], k: int) -> None:\\\\n    n = len(arr)\\\\n    k %= n  # Handle cases where k is larger than the array length\\\\n    arr[:] = arr[-k:] + arr[:-k]\\\\n\\\", \\\"tests\\\": [\\\"arr = [1, 2, 3, 4, 5]; rotate_array(arr, 2); assert arr == [4, 5, 1, 2, 3]\\\", \\\"arr = [-1, -100, 3, 99]; rotate_array(arr, 2); assert arr == [3, 99, -1, -100]\\\", \\\"arr = [1]; rotate_array(arr, 5); assert arr == [1]\\\"] }\""
}