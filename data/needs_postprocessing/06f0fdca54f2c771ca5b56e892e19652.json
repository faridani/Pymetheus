"{'model': 'mistral:latest', 'response': '{\"title\": \"\\'Anagram Detector (Hard)\\'\", \"description\": \"An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Write a function `is_anagram` that checks if two given strings are anagrams of each other.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef is_anagram(s1: str, s2: str) -> bool:\\\\n```\\\\n\\\\n#### Input\\\\n- `s1` (str): A string that may contain letters, numbers, spaces and punctuation.\\\\n- `s2` (str): Another string that may contain letters, numbers, spaces and punctuation.\\\\n\\\\n#### Output\\\\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\", \"code\": \"import collections\\\\ndef is_anagram(s1: str, s2: str) -> bool:\\\\n    # Remove non-alphabetic characters and convert to lowercase\\\\n    s1 = \\'\\'.join(char for char in s1 if char.isalpha()).lower()\\\\ns2 = \\'\\'.join(char for char in s2 if char.isalpha()).lower()\\\\n    # Count the frequency of each letter in both strings\\\\n    counts1 = collections.Counter(s1)\\\\nncounts2 = collections.Counter(s2)\\\\n\\\\n    # Check if both counts are equal\\\\n    return counts1 == ncounts2\", \"tests\": [\"assert is_anagram(\\'Listen\\', \\'Silent\\') == True\", \"assert is_anagram(\\'Hello\\', \\'World\\') == False\", \"assert is_anagram(\\'Madam\\', \\'Dam\\') == True\"]}'}"