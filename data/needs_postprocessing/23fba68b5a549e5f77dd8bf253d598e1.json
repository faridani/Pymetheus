"{'model': 'gemma2:27b-instruct-q5_K_S', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Hard -  Longest Substring Without Repeating Characters\\\\\", \\\\\"description\\\\\": \\\\\"Given a string `s`, find the length of the **longest substring** without repeating characters.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef length_of_longest_substring(s: str) -> int:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `s` (str): The input string containing only lowercase English letters.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns the length of the longest substring without repeating characters.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"def length_of_longest_substring(s: str) -> int:\\\\\\\\n    char_set = set()\\\\\\\\n    left = 0\\\\\\\\n    max_length = 0\\\\\\\\n    for right in range(len(s)):\\\\\\\\n        while s[right] in char_set:\\\\\\\\n            char_set.remove(s[left])\\\\\\\\n            left += 1\\\\\\\\n        char_set.add(s[right])\\\\\\\\n        max_length = max(max_length, right - left + 1)\\\\\\\\n    return max_length\\\\\", \\\\\"tests\\\\\": [\\\\\"assert length_of_longest_substring(\\'abcabcbb\\') == 3\\\\\", \\\\\"assert length_of_longest_substring(\\'bbbbb\\') == 1\\\\\", \\\\\"assert length_of_longest_substring(\\'pwwkew\\') == 3\\\\\", \\\\\"assert length_of_longest_substring(\\'\\') == 0\\\\\"] }\"'}"