{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Longest Common Subsequence\\\", \\\"description\\\": \\\"Given two strings `s1` and `s2`, write a function `longest_common_subsequence` that returns the length of their longest common subsequence.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef longest_common_subsequence(s1: str, s2: str) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `s1` (str): The first string.\\\\n- `s2` (str): The second string.\\\\n\\\\n#### Output\\\\n- Returns the length of the longest common subsequence of the two input strings.\\\\n\\\", \\\"code\\\": \\\"def longest_common_subsequence(s1: str, s2: str) -> int:\\\\n    m = len(s1)\\\\n    n = len(s2)\\\\n    dp = [[0] * (n + 1) for _ in range(m + 1)]\\\\n\\\\n    for i in range(m + 1):\\\\n        for j in range(n + 1):\\\\n            if i == 0 or j == 0:\\\\n                dp[i][j] = 0\\\\n            elif s1[i - 1] == s2[j - 1]:\\\\n                dp[i][j] = dp[i - 1][j - 1] + 1\\\\n            else:\\\\n                dp[i][j] = max(dp[i - 1][j], dp[i][j - 1])\\\\n    return dp[m][n]\\\\n\\\", \\\"tests\\\": [\\\"assert longest_common_subsequence('ABCBDAB', 'BDCABA') == 4\\\", \\\"assert longest_common_subsequence('A', 'B') == 0\\\", \\\"assert longest_common_subsequence('A', 'A') == 1\\\", \\\"assert longest_common_subsequence('', '') == 0\\\"] }\""
}