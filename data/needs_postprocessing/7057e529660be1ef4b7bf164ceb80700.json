"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"Even Fibonacci Numbers\\\\\", \\\\\"description\\\\\": \\\\\"Write a function `even_fibonacci` that finds all even Fibonacci numbers up to and including n. The first two numbers in the Fibonacci sequence are 0 and 1. Only consider numbers less than or equal to `n`.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef even_fibonacci(n: int) -> list:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `n` (int): An integer greater than or equal to 0.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns a list containing all even Fibonacci numbers up to and including n, in order.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"def even_fibonacci(n: int) -> list:\\\\\\\\n    # Initialize the sequence with the first two even Fibonacci numbers (0 and 2)\\\\\\\\n    fibs = [0, 2]\\\\\\\\n    \\\\\\\\n    # Loop through up to the square root of n\\\\\\\\n    for i in range(int(n ** 0.5) + 1):\\\\\\\\n        # Calculate next Fibonacci number\\\\\\\\n        last_fib = fibs[-1]\\\\\\\\n        next_fib = last_fib + fibs[-2]\\\\\\\\n        \\\\\\\\n        # If the new number is even, add it to the list if it\\'s less than or equal to n\\\\\\\\n        if next_fib % 2 == 0 and next_fib <= n:\\\\\\\\n            fibs.append(next_fib)\\\\\\\\n    \\\\\\\\n    return fibs\\\\\", \\\\\"tests\\\\\": [\\\\\"assert even_fibonacci(10) == [0, 2, 8]\\\\\", \\\\\"assert even_fibonacci(15) == [0, 2, 8, 10, 14]\\\\\", \\\\\"assert even_fibonacci(20) == [0, 2, 8, 10, 14, 16, 20]\\\\\"] }\"'}"