{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Counting Prime Numbers\\\", \\\"description\\\": \\\"A prime number is a natural number greater than 1 that has no positive divisors other than 1 and itself. Write a function `count_primes` that takes an integer `n` as input and returns the count of prime numbers up to `n`.\\\\n\\\\n#### Function Signature\\\\n```\\\\ndef count_primes(n: int) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `n` (int): An integer representing the upper limit for counting prime numbers.\\\\n\\\\n#### Output\\\\n- Returns the count of prime numbers up to `n`.\\\\n\\\\n\\\", \\\"code\\\": \\\"\\\\ndef count_primes(n: int) -> int:\\\\n    if n < 2:\\\\n        return 0\\\\n\\\\n    primes = [True] * (n + 1)\\\\n    primes[0] = primes[1] = False\\\\n\\\\n    for i in range(2, int(n ** 0.5) + 1):\\\\n        if primes[i]:\\\\n            for j in range(i * i, n + 1, i):\\\\n                primes[j] = False\\\\n\\\\n    return sum(primes)\\\\n\\\", \\\"tests\\\": [\\\"assert count_primes(10) == 4\\\", \\\"assert count_primes(20) == 8\\\", \\\"assert count_primes(50) == 15\\\"] }\""
}