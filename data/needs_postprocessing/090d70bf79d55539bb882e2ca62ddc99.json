"{'model': 'mistral:latest', 'response': '\"{ \\\\\"title\\\\\": \\\\\"\\'Anagram Detector (Hard)\\'\\\\\", \\\\\"description\\\\\": \\\\\"An anagram is a word or phrase formed by rearranging the letters of another word or phrase, typically using all the original letters exactly once. Write a function `is_anagram` that checks if two given strings are anagrams.\\\\\\\\n\\\\\\\\n#### Function Signature\\\\\\\\n```python\\\\\\\\ndef is_anagram(str1: str, str2: str) -> bool:\\\\\\\\n```\\\\\\\\n\\\\\\\\n#### Input\\\\\\\\n- `str1`, `str2` (str): Two strings that may contain letters, numbers, spaces and punctuation.\\\\\\\\n\\\\\\\\n#### Output\\\\\\\\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\\\\\\\\n\\\\\", \\\\\"code\\\\\": \\\\\"import string\\\\\\\\ndef is_anagram(str1: str, str2: str) -> bool:\\\\\\\\n    # Remove non-alphabetic characters from both strings\\\\\\\\n    str1 = \\'\\'.join(char for char in str1 if char in string.ascii_letters + string.digits)\\\\\\\\n    str2 = \\'\\'.join(char for char in str2 if char in string.ascii_letters + string.digits)\\\\\\\\n    # Sort both strings\\\\\\\\n    str1_sorted = sorted(str1)\\\\\\\\n    str2_sorted = sorted(str2)\\\\\\\\n    # Compare the sorted strings\\\\\\\\n    return str1_sorted == str2_sorted\\\\\", \\\\\"tests\\\\\": [\\\\\"assert is_anagram(\\'listen\\', \\'silent\\') == True\\\\\", \\\\\"assert is_anagram(\\'hello\\', \\'world\\') == False\\\\\", \\\\\"assert is_anagram(\\'Education\\', \\'Discussion\\') == True\\\\\", \\\\\"assert is_anagram(\\'A man, a plan, a canal: Panama\\', \\'Am I a maniac? A maniac! A maniac!\\') == True\\\\\"] }\"'}"