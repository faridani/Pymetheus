{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Maximum Sum Increasing Subsequence\\\", \\\"description\\\": \\\"A sequence of numbers is called an increasing subsequence if each element is greater than its predecessor. Write a function `max_sum_increasing_subsequence` that takes a list of integers as input and returns the maximum sum of any increasing subsequence within the given list.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef max_sum_increasing_subsequence(nums: list[int]) -> int:\\\\n```\\\\n\\\\n#### Input\\\\n- `nums` (list[int]): A list of integers.\\\\n\\\\n#### Output\\\\n- Returns the maximum sum of any increasing subsequence within the given list.\\\\n\\\", \\\"code\\\": \\\"def max_sum_increasing_subsequence(nums: list[int]) -> int:\\\\n    if not nums:\\\\n        return 0\\\\n    dp = [num for num in nums]\\\\n    for i in range(1, len(nums)):\\\\n        for j in range(i):\\\\n            if nums[i] > nums[j]:\\\\n                dp[i] = max(dp[i], dp[j] + nums[i])\\\\n    return max(dp)\\\\n\\\", \\\"tests\\\": [\\\"assert max_sum_increasing_subsequence([10, 20, 30, 40, 50]) == 150\\\", \\\"assert max_sum_increasing_subsequence([-1, -2, -3, 0, 9]) == 9\\\", \\\"assert max_sum_increasing_subsequence([]) == 0\\\", \\\"assert max_sum_increasing_subsequence([5]) == 5\\\"] }\""
}