"{'model': 'gemma2:27b', 'response': '{\"title\": \"Hard: Lexicographically Smallest Substring Rotation\", \"description\": \"Given a string `s`, find the lexicographically smallest rotation of that string. A rotation of a string is obtained by moving characters from the beginning to the end. For example, \\\\\"abc\\\\\" rotated by one position gives \\\\\"bca\\\\\".\\\\n\\\\n#### Function Signature\\\\n\\\\n```python\\\\ndef lexicographically_smallest_rotation(s: str) -> str:\\\\n```\\\\n\\\\n#### Input\\\\n- `s` (str): A string containing only lowercase letters.\\\\n\\\\n#### Output\\\\n- Returns the lexicographically smallest rotation of the input string `s`.\", \"code\": \"def lexicographically_smallest_rotation(s: str) -> str:\\\\n    smallest_rotation = s\\\\n    for i in range(len(s)):\\\\n        rotation = s[i:] + s[:i]\\\\n        if rotation < smallest_rotation:\\\\n            smallest_rotation = rotation\\\\n    return smallest_rotation\", \"tests\": [\"assert lexicographically_smallest_rotation(\\\\\\\\\\\\\"abc\\\\\\\\\\\\\") == \\\\\\\\\\\\\"abc\\\\\\\\\\\\\"\\', \", \"assert lexicographically_smallest_rotation(\\\\\"bca\\\\\") == \\\\\"abc\\\\\"\\\\\\\\\\'\\', \\'assert lexicographically_smallest_rotation(\\\\\"cba\\\\\") == \\\\\"abc\\\\\"\\'\"]}'}"