{
    "model": "llama3:latest",
    "response": "\"{ \\\"title\\\": \\\"Fibonacci Series Generator\\\", \\\"description\\\": \\\"Write a function `fibonacci_series` that generates the Fibonacci series up to a given number. The Fibonacci sequence is a series of numbers where a number is found by adding up the two numbers before it. Starting with 0 and 1, the sequence goes: 0, 1, 1, 2, 3, 5, 8, 13, ... Write your function so that it takes an integer `n` as input and returns a list of Fibonacci numbers up to `n`. If `n` is less than or equal to 0, the function should return an empty list.\\\\n\\\\n#### Function Signature\\\\n```python\\\\ndef fibonacci_series(n: int) -> list:\\\\n```\\\\n\\\\n#### Input\\\\n- `n` (int): A non-negative integer that specifies the length of the Fibonacci series.\\\\n\\\\n#### Output\\\\n- Returns a list of Fibonacci numbers up to `n`, or an empty list if `n` is less than or equal to 0.\\\\n\\\", \\\"code\\\": \\\"def fibonacci_series(n: int) -> list:\\\\n    if n <= 0:\\\\n        return []\\\\n    fib_sequence = [0, 1]\\\\n    while True:\\\\n        next_fib = fib_sequence[-1] + fib_sequence[-2]\\\\n        if next_fib > n:\\\\n            break\\\\n        fib_sequence.append(next_fib)\\\\n    return fib_sequence\\\", \\\"tests\\\": [\\\"assert fibonacci_series(10) == [0, 1, 1, 2, 3, 5, 8]\\\", \\\"assert fibonacci_series(20) == [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]\\\", \\\"assert fibonacci_series(0) == []\\\", \\\"assert fibonacci_series(-10) == []\\\"] }\""
}