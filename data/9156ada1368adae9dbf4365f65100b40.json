{
    "title": "'Is it a Rot13 Encoded String?' (Easy)",
    "description": "A function `is_rot13` checks if a given string has been encoded using the ROT13 encryption. ROT13 is a simple letter substitution cipher that replaces a letter with the 13th letter after it in the alphabet.\n\n#### Function Signature\n```python\ndef is_rot13(s: str) -> bool:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces and punctuation.\n\n#### Output\n- Returns `True` if the input string is a ROT13 encoded text, `False` otherwise.\n",
    "code": "def is_rot13(s: str) -> bool:\n    # Define the translation table for ROT13\n    rot13 = str.maketrans('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', 'NOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz')\n    # Replace each character in the string with its ROT13 equivalent or original self if it is not a letter.\n    s = s.translate(rot13)\n    # Check if all non-space characters are alphabetic and if the resulting string reads the same forwards and backwards\n    return len(s) > 0 and all(char.isalpha() for char in s) and s == s[::-1]",
    "tests": [
        "assert is_rot13('SERR PBQR PNZC') == True",
        "assert is_rot13('This is a test') == False",
        "assert is_rot13('Gur Dhvpx Oebja Sbhe N fnzcbhtr') == True",
        "assert is_rot13('Alberto') == False"
    ],
    "difficulty": "easy",
    "model": "mistral:latest"
}