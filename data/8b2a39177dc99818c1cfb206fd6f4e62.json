{
    "title": "Easy: Reverse and Add Function",
    "description": "Write a function `reverse_and_add` that takes an integer `n` as input, reverses its digits, adds the reversed number to the original number, and repeats this process until the result is either a single digit or it repeats in a cycle. Return the final result.\n\n#### Function Signature\n```python\ndef reverse_and_add(n: int) -> int:\n```\n\n#### Input\n- `n` (int): A positive integer.\n\n#### Output\n- Returns an integer which is either a single digit or part of a cycle in repeated operations.",
    "code": "def reverse_and_add(n: int) -> int:\n    def reverse_number(x):\n        return int(str(x)[::-1])\n    \n    result = n + reverse_number(n)\n    seen_numbers = set()\n    while result not in seen_numbers and len(str(result)) != 1:\n        seen_numbers.add(result)\n        reversed_result = reverse_number(result)\n        result += reversed_result\n    return result\n",
    "tests": [
        "assert reverse_and_add(443) == 688",
        "assert reverse_and_add(221) == 103",
        "assert reverse_and_add(99) == 18",
        "assert reverse_and_add(75) == 126"
    ],
    "difficulty": "easy",
    "model": "qwen2:7b",
    "style": "ACM-ICPC"
}