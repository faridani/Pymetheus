{
    "title": "'Anagram Detector (Hard)'",
    "description": "An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Write a function `is_anagram` that checks if two given strings are anagrams of each other.\n\n#### Function Signature\n```python\ndef is_anagram(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1` (str): A string containing lowercase alphabetical characters and spaces.\n- `str2` (str): A string containing lowercase alphabetical characters and spaces.\n\n#### Output\n- Returns `True` if the input strings are anagrams of each other, `False` otherwise.",
    "code": "import collections\n\ndef is_anagram(str1: str, str2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    str1 = ''.join([char for char in str1 if char.isalpha()]).lower()\n    str2 = ''.join([char for char in str2 if char.isalpha()]).lower()\n    \n    # Check if the frequency of characters is the same in both strings\n    return collections.Counter(str1) == collections.Counter(str2)",
    "tests": [
        "assert is_anagram(\"listen\", \"silent\") == True",
        "assert is_anagram(\"hello world\", \"world hello\") == True",
        "assert is_anagram(\"apple\", \"appel\") == False",
        "assert is_anagram(\"RACECAR\", \"CRASHBASH\") == True"
    ],
    "difficulty": "super hard",
    "model": "mistral:latest",
    "style": "ICPC"
}