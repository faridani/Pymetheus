{
    "title": "Anagram Checker (Hard)",
    "description": "Given two strings, write a function to check if the strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef are_anagrams(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1` (str): A string of lowercase alphabets.\n- `str2` (str): Another string of lowercase alphabets.\n\n#### Output\n- Returns `True` if the input strings are anagrams, `False` otherwise.\n",
    "code": "def are_anagrams(str1: str, str2: str) -> bool:\n    # Sort both strings and compare\n    return sorted(str1) == sorted(str2)",
    "tests": [
        "assert are_anagrams(\"listen\", \"silent\") == True",
        "assert are_anagrams(\"hello\", \"world\") == False",
        "assert are_anagrams(\"acttor\", \"rotter\") == True",
        "assert are_anagrams(\"apple\", \"appeal\") == False"
    ],
    "difficulty": "super hard",
    "model": "mistral:latest",
    "style": "CodeChef"
}