{
    "title": "Anagram Detector (Hard)",
    "description": "Write a function `is_anagram` that checks if two given strings are anagrams of each other. An anagram is a word or phrase that is formed by rearranging the letters of another word or phrase, usually with all the original letters in the same alphabet and only one unique spelling.\n\n#### Function Signature\n```python\ndef is_anagram(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1`, `s2` (str): Two strings that may contain letters from the English alphabet.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def is_anagram(s1: str, s2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    s1 = ''.join(sorted(s1.replace(' ', '').lower()))\n    s2 = ''.join(sorted(s2.replace(' ', '').lower()))\n    \n    # Check if the two sorted strings are equal\n    return s1 == s2",
    "tests": [
        "\"assert is_anagram(\\\"listen\\\", \\\"silent\\\") == True\",\n        ",
        "assert is_anagram(\"python\", \"pizza\") == False",
        "\"assert is_anagram(\\\"morse code\\\", \\\"done\\\") == True\",\n        ",
        "assert is_anagram(\"hello\", \"world\") == False"
    ],
    "difficulty": "super hard",
    "model": "mistral:latest",
    "style": "Codeforces"
}