{
    "title": "'Recursive Fibonacci Number Finder (Easy)'",
    "description": "Write a recursive Python function `fibonacci` that takes an integer as input and returns the corresponding Fibonacci number. The first two Fibonacci numbers are 0 and 1.\n\n#### Function Signature\n```python\ndef fibonacci(n: int) -> int:\n```\n\n#### Input\n- `n` (int): A positive integer.\n\n#### Output\n- Returns the nth Fibonacci number as an integer.",
    "code": "def fibonacci(n: int) -> int:\n    if n <= 1:\n        return n\n    else:\n        return(fibonacci(n - 1) + fibonacci(n - 2))",
    "tests": [
        "assert fibonacci(0) == 0",
        "assert fibonacci(1) == 1",
        "assert fibonacci(2) == 1",
        "assert fibonacci(3) == 2",
        "assert fibonacci(4) == 3",
        "assert fibonacci(5) == 5",
        "assert fibonacci(6) == 8",
        "assert fibonacci(7) == 13",
        "assert fibonacci(8) == 21",
        "assert fibonacci(9) == 34"
    ],
    "difficulty": "easy",
    "model": "mistral:latest",
    "style": "Internationals Olympiad"
}