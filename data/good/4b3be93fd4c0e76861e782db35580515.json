{
    "title": "'Anagram Checker (Hard)'",
    "description": "Given two strings, check if they are anagrams of each other.\n\n#### Function Signature\n```python\ndef are_anagrams(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1`, `str2` (str): Two strings containing lowercase letters and spaces.\n\n#### Output\n- Returns `True` if the input strings are anagrams of each other, `False` otherwise.",
    "code": "from collections import Counter\ndef are_anagrams(str1: str, str2: str) -> bool:\n    # Count occurrences of letters in each string\n    counter1 = Counter(str1.lower())\n    counter2 = Counter(str2.lower())\n    \n    # Check if both strings have the same number of unique characters\n    if len(counter1) != len(counter2):\n        return False\n    \n    # Check if the counts match for each character in both strings\n    for char, count in counter1.items():\n        if counter2[char] != count:\n            return False\n    \n    # If no mismatches were found, the strings are anagrams\n    return True",
    "tests": [
        "assert are_anagrams(\"listen\", \"silent\") == True",
        "assert are_anagrams(\"racecar\", \"carcarrace\") == True",
        "assert are_anagrams(\"hello\", \"world\") == False",
        "assert are_anagrams(\"A man, a plan, a canal, Panama\", \"No 'x' in Nixon\") == False"
    ],
    "difficulty": "insanely difficult",
    "model": "mistral:latest",
    "style": "Competitive Programming"
}