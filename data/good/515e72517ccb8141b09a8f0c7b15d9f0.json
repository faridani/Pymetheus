{
    "title": "'Anagram Detector (Hard)'",
    "description": "Given two strings, check if they are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of another, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef are_anagrams(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1` (str): A string containing lowercase English alphabets and spaces.\n- `s2` (str): Another string containing lowercase English alphabets and spaces.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    # Remove spaces and convert to set for easier comparison\n    s1 = set(s1.replace(' ', '').lower())\n    s2 = set(s2.replace(' ', '').lower())\n    # Check if both sets have the same number of elements\n    return len(s1) == len(s2) and s1 <= s2",
    "tests": [
        "assert are_anagrams('listen', 'silent') == True",
        "assert are_anagrams('python', 'typhon') == False",
        "assert are_anagrams('   madam   ', 'madam') == True",
        "assert are_anagrams('hello world', 'world hello') == True"
    ],
    "difficulty": "super hard",
    "model": "mistral:latest",
    "style": "SPOJ"
}