{
    "title": "Anagram Detection (Hard)",
    "description": "An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\nWrite a function `is_anagram` that checks if two given strings are anagrams of each other.\n\n#### Function Signature\n```python\ndef is_anagram(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1` (str): A string that may contain letters and spaces only.\n- `s2` (str): Another string that may contain letters and spaces only.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\n",
    "code": "def is_anagram(s1: str, s2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    s1 = ''.join(sorted(s1.lower().replace(' ', '')))\n    s2 = ''.join(sorted(s2.lower().replace(' ', '')))\n    \n    # Check if both strings have the same length and are equal when sorted in alphabetical order\n    return len(s1) == len(s2) and s1 == s2",
    "tests": [
        "assert is_anagram(\"listen\", \"silent\") == True",
        "assert is_anagram(\"hello\", \"olleh\") == True",
        "assert is_anagram(\"world\", \"drowl\") == True",
        "assert is_anagram(\"racecar\", \"carrace\") == True",
        "assert is_anagram(\"apple\", \"pleap\") == False"
    ],
    "difficulty": "insanely difficult",
    "model": "mistral:latest"
}