{
    "title": "'Palindromic Substrings Count (Hard)'",
    "description": "Write a function `count_palindromes` that finds the number of non-overlapping palindromic substrings within a given string.\n\n#### Function Signature\n```python\ndef count_palindromes(s: str) -> int:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns the number of unique non-overlapping palindromic substrings within the input string.",
    "code": "import re\ndef count_palindromes(s: str) -> int:\n    # Find all possible palindromes regardless of case and spaces\n    s = re.findall('((?:[a-zA-Z ]+)?(?:\\b|(?=[^a-zA-Z])))(?=\\1[^a-zA-Z ])', s)\n    # Remove duplicates and count unique palindromes\n    return len(set(s))",
    "tests": [
        "assert count_palindromes(\"racecar\") == 2",
        "assert count_palindromes(\"babad\") == 4",
        "assert count_palindromes(\"civic\") == 1",
        "assert count_palindromes(\"Hello World!\") == 3"
    ],
    "difficulty": "super hard",
    "model": "mistral:latest",
    "style": "HackerRank"
}