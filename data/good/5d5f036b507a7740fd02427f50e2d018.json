{
    "title": "'Text Centric Palindrome Checker (Easy)'",
    "description": "Given a string, determine if it reads the same forwards and backwards. This time, we will consider spaces and punctuations as part of the palindrome check. Write a function `is_palindrome` that checks if a given string is a palindrome.\n\n#### Function Signature\n```python\ndef is_palindrome(s: str) -> bool:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, punctuation marks, or a combination thereof.\n\n#### Output\n- Returns `True` if the input string is a palindrome, `False` otherwise.",
    "code": "import re\ndef is_palindrome(s: str) -> bool:\n    # Remove non-alphanumeric characters and make it one continuous string\n    s = re.sub('[^a-z0-9\\s]+', '', s).lower().strip()\n    # If the length of the string is even, it can never be a palindrome\n    if len(s) % 2 != 0:\n        return False\n    # Check if the string reads the same forwards and backwards from the middle index\n    return s == s[len(s)//2:][::-1] + s[:len(s)//2]",
    "tests": [
        "assert is_palindrome(\"A man, a plan, a canal, Panama\") == True",
        "assert is_palindrome(\"racecar\") == True",
        "assert is_palindrome(\"hello world\") == False",
        "assert is_palindrome(\"No 'x' in Nixon\") == True"
    ],
    "difficulty": "easy",
    "model": "mistral:latest",
    "style": "SPOJ"
}