{
    "title": "'Anagram Detector (Hard Level)'",
    "description": "Write a function `anagram_detector` that checks if two strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef anagram_detector(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1`, `str2` (str): Two strings that may contain letters (no numbers, spaces or punctuation). The strings may be of different lengths.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\n",
    "code": "def anagram_detector(str1: str, str2: str) -> bool:\n    # Remove non-alphabetic characters and convert to lowercase\n    str1 = ''.join(sorted(c.lower() for c in str1 if c.isalpha())).replace(' ', '')\n    str2 = ''.join(sorted(c.lower() for c in str2 if c.isalpha())).replace(' ', '')\n    # If the sorted and cleaned strings are equal, they are anagrams\n    return str1 == str2",
    "tests": [
        "assert anagram_detector(\"listen\", \"silent\") == True",
        "assert anagram_detector(\"eat\", \"tea\") == True",
        "assert anagram_detector(\"hello\", \"world\") == False",
        "assert anagram_detector(\"A man, a plan, a canal: Panama\", \"Amid the canopy of palms a men came from\") == True"
    ],
    "difficulty": "insanely difficult",
    "model": "mistral:latest"
}