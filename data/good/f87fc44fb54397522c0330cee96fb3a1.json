{
    "title": "'Anagram Detector (Hard)'",
    "description": "Given two strings, write a function `anagram_checker` that determines whether the two strings are anagrams of each other.\n\n#### Function Signature\n```python\ndef anagram_checker(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1`, `str2` (str): Two strings that may contain letters (uppercase or lowercase), numbers and spaces.\n\n#### Output\n- Returns `True` if the two input strings are anagrams, `False` otherwise.\n\n#### Hint\nAnagrams are words or phrases that have the same exact letter frequency. For example, 'listen' and 'silent' are anagrams because they share the same letters in the same quantity.\n\n#### Constraints\n- The input strings may contain spaces but ignore them for comparison.",
    "code": "def anagram_checker(str1: str, str2: str) -> bool:\n    # Convert both strings to lowercase and remove spaces\n    str1 = ''.join([char.lower() for char in str1 if char.isalpha()]).replace(' ', '')\n    str2 = ''.join([char.lower() for char in str2 if char.isalpha()]).replace(' ', '')\n    # Sort the resulting strings and compare them\n    return sorted(str1) == sorted(str2)",
    "tests": [
        "assert anagram_checker('Listen', 'Silent') == True",
        "assert anagram_checker('Racecar', 'Craecar') == True",
        "assert anagram_checker('Hello world', 'world Hello') == True",
        "assert anagram_checker('Apple', 'Aple') == False"
    ],
    "difficulty": "insanely difficult",
    "model": "mistral:latest",
    "style": "ACM-ICPC"
}