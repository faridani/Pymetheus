{
    "title": "Anagram Detector (Hard)",
    "description": "Write a function `are_anagrams(str1, str2)` that checks if two given strings are anagrams of each other. Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef are_anagrams(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1`, `str2` (str): Two strings that may contain only letters from the English alphabet in lowercase.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\n",
    "code": "def are_anagrams(str1: str, str2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    str1 = ''.join(sorted(str1.replace(' ', '').lower()))\n    str2 = ''.join(sorted(str2.replace(' ', '').lower()))\n    # Check if both strings have the same length and are equal after sorting their characters\n    return len(str1) == len(str2) and str1 == str2",
    "tests": [
        "assert are_anagrams(\"listen\", \"silent\") == True",
        "assert are_anagrams(\"hello\", \"world\") == False",
        "assert are_anagrams(\"acttor\", \"rottac\") == True",
        "assert are_anagrams(\"movie\", \"evilmo\") == False"
    ],
    "difficulty": "insanely difficult",
    "model": "mistral:latest"
}