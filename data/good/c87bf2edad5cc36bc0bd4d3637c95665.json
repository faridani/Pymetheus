{
    "title": "'Sum of Digits in a Fibonacci number (Medium)'",
    "description": "Given a positive integer `n`, find the sum of the digits of the `n`-th Fibonacci number. \n\n#### Function Signature\n```python\ndef fibonacci_digit_sum(n: int) -> int:\n```\n\n#### Input\n- `n` (int): A positive integer representing the position of the Fibonacci number to find.\n\n#### Output\n- Returns the sum of the digits of the `n`-th Fibonacci number as an integer.",
    "code": "def fibonacci_digit_sum(n: int) -> int:\n    # Base cases for 1 and 2 since they don't have any digits\n    if n == 1 or n == 2:\n        return 1\n\n    prev, current = 1, 2\n    while n - 2 > 0:\n        next_fib = prev + current\n        prev, current = current, next_fib\n        n -= 1\n\n    # Convert the Fibonacci number to a string and calculate its sum\n    fib_str = str(current)\n    return sum(int(char) for char in fib_str if char.isdigit())",
    "tests": [
        "assert fibonacci_digit_sum(1) == 1",
        "assert fibonacci_digit_sum(2) == 1",
        "assert fibonacci_digit_sum(3) == 2",
        "assert fibonacci_digit_sum(4) == 4",
        "assert fibonacci_digit_sum(5) == 0",
        "assert fibonacci_digit_sum(6) == 1",
        "assert fibonacci_digit_sum(7) == 2",
        "assert fibonacci_digit_sum(8) == 3",
        "assert fibonacci_digit_sum(9) == 0",
        "assert fibonacci_digit_sum(10) == 1"
    ],
    "difficulty": "medium",
    "model": "mistral:latest",
    "style": "Project Euler"
}