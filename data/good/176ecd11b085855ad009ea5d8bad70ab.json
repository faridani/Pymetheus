{
    "title": "'Anagram Detector (Hard)'",
    "description": "An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Write a function `are_anagrams` that checks if two given strings are anagrams of each other.\n\n#### Function Signature\n```python\ndef are_anagrams(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1`, `s2` (str): Two strings that may contain only lowercase letters.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    # Ensure both strings have the same length\n    if len(s1) != len(s2):\n        return False\n    \n    # Count occurrences of each letter in each string\n    count_s1 = [0] * 26\n    count_s2 = [0] * 26\n    for char in s1:\n        count_s1[ord(char) - ord('a')] += 1\n    for char in s2:\n        count_s2[ord(char) - ord('a')] += 1\n    \n    # Check if both counts are equal\n    for i in range(len(count_s1)):\n        if count_s1[i] != count_s2[i]:\n            return False\n    \n    return True",
    "tests": [
        "assert are_anagrams(\"listen\", \"silent\") == True",
        "assert are_anagrams(\"hello\", \"world\") == False",
        "assert are_anagrams(\"actortroop\", \"participate\") == True"
    ],
    "difficulty": "super hard",
    "model": "mistral:latest",
    "style": "Internationals Olympiad"
}