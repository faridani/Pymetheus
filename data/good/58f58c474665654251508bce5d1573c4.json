{
    "title": "Medium: Sum of Divisors",
    "description": "Given a positive integer n, calculate the sum of all divisors (excluding 1 and n itself) of n. For example, for input 12, the output should be 16 because the divisors of 12 are 1, 2, 3, 4, 6, and 12 and their sum is 1 + 2 + 3 + 4 + 6 + 12 = 16. \n\n#### Function Signature\n```python\ndef sum_of_divisors(n: int) -> int:\n```\n\n#### Input\n- `n` (int): A positive integer.\n\n#### Output\n- Returns the sum of all divisors (excluding 1 and n itself) of `n`.",
    "code": "def sum_of_divisors(n: int) -> int:\n    def get_divisors(num: int) -> list[int]:\n        divisors = []\n        for i in range(2, num // 2 + 1):\n            if num % i == 0:\n                divisors.append(i)\n        return divisors\n    return sum(get_divisors(n)) - n - 1,",
    "tests": [
        "assert sum_of_divisors(12) == 16",
        "assert sum_of_divisors(15) == 9",
        "assert sum_of_divisors(24) == 28",
        "assert sum_of_divisors(37) == 38"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "Codewars"
}