{
    "title": "Largest Prime Factor Finder",
    "description": "Write a function `largest_prime_factor(n: int) -> int` that calculates the largest prime factor of a given integer `n`. This problem tests your understanding of prime numbers and their properties. The function should return an integer which is the largest prime factor of the input number.",
    "\n```python\ndef largest_prime_factor(n: int) -> int:\n    ": "\n    Finds the largest prime factor of an integer.\n    \n    Parameters:\n    n (int): An integer greater than 1\n    \n    Returns:\n    int: The largest prime factor of n\n    ",
    "\n    i = 2\n    while i * i <= n:\n        if n % i == 0:\n            n //= i\n        else:\n            i += 1\n    return n\n\n#### Function Signature\n```python\ndef largest_prime_factor(n: int) -> int:\n```": "Input\":\n- `n` (int): A positive integer greater than 1.\n\nOutput:\nReturns an integer which is the largest prime factor of `n`.\n\nConstraints:\n- The function should work for any valid input integer `n`.\n- Examples will demonstrate typical cases and edge cases.\n\"",
    "code": "import math\n\ndef largest_prime_factor(n: int) -> int:\n    while n % 2 == 0:\n        n = n // 2\n    last_factor = 3\n    while n >= last_factor ** 2:\n        if n % last_factor == 0:\n            n /= last_factor\n        else:\n            last_factor += 2\n    return max(n, last_factor)",
    "tests": [
        "assert largest_prime_factor(13195) == 29",
        "assert largest_prime_factor(600851475143) == 6857",
        "assert largest_prime_factor(2) == 2",
        "assert largest_prime_factor(3) == 3",
        "assert largest_prime_factor(13) == 13"
    ],
    "difficulty": "super hard",
    "model": "qwen2:7b",
    "style": "Codeforces"
}