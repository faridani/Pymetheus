{
    "title": "'Anagram Detector (Hard)'",
    "description": "An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef is_anagram(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1`, `s2` (str): Two strings that may contain letters (no numbers, spaces or punctuation). The strings may have different lengths.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def is_anagram(s1: str, s2: str) -> bool:\n    # Ensure both strings have the same length before checking for anagram\n    if len(s1) != len(s2):\n        return False\n    \n    # Count each character in both strings and compare counts\n    char_count = {} \n    for char in s1 + s2:\n        if char not in char_count:\n            char_count[char] = 0\n        char_count[char] += 1\n    \n    # Check if all counts are the same\n    for count in char_count.values():\n        if count != len(s1) // 2:\n            return False\n    \n    return True",
    "tests": [
        "assert is_anagram(\"listen\", \"silent\") == True",
        "assert is_anagram(\"hello\", \"world\") == False",
        "assert is_anagram(\"acttcaatgcatctta\", \"ggttacctgatgccaaggt\") == True"
    ],
    "difficulty": "super hard",
    "model": "mistral:latest",
    "style": "TopCoder"
}