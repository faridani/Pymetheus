{
    "title": "Palindrome Checker (Hard)",
    "description": "A palindrome is a word, phrase, number, or other sequence of characters that reads the same forward and backward, ignoring spaces, punctuation, and capitalization. Write a function `is_palindrome` that checks if a given string is a palindrome.\n\n#### Function Signature\n```python\ndef is_palindrome(s: str) -> bool:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns `True` if the input string is a palindrome, `False` otherwise.\n\n#### Hints\n- You may need to handle special cases or edge scenarios, such as empty strings or strings with only one character.",
    "code": "import string\n\ndef is_palindrome(s: str) -> bool:\n    # Convert to lowercase and remove punctuation\n    s = ''.join(char for char in s if char.isalnum()).lower()\n    # Check if the string reads the same forwards and backwards\n    return s == s[::-1]",
    "tests": [
        "assert is_palindrome(\"A man, a plan, a canal: Panama\") == True",
        "assert is_palindrome(\"racecar\") == True",
        "assert is_palindrome(\"hello\") == False",
        "assert is_palindrome(\"No 'x' in Nixon\") == True",
        "assert is_palindrome(\"\") == True",
        "assert is_palindrome(\"a\") == True",
        "assert is_palindrome(\"abba\") == True",
        "assert is_palindrome(\"1234321\") == True",
        "assert is_palindrome(\"Was it a car or a cat I saw?\") == False"
    ],
    "difficulty": "hard",
    "model": "aya:35b",
    "style": "CodeChef"
}