{
    "title": "'Is it an Anagram Checker? (Easy)'",
    "description": "An anagram is a word or phrase that consists of the same letters as another, but arranged differently. Write a function `is_anagram` that checks if two given strings are anagrams of each other.\n\n#### Function Signature\n```python\ndef is_anagram(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1` (str): A string that may contain letters, numbers, and spaces. It can be empty.\n- `str2` (str): Another string that may contain letters, numbers, and spaces. It can be empty.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def is_anagram(str1: str, str2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    s1 = ''.join(sorted(str1.lower().replace(' ', '')))\n    s2 = ''.join(sorted(str2.lower().replace(' ', '')))\n    # Check if the sorted strings are equal\n    return len(s1) == len(s2) and s1 == s2",
    "tests": [
        "assert is_anagram(\"listen\", \"silent\") == True",
        "assert is_anagram(\"apple\", \"lemon\") == False",
        "assert is_anagram(\"\", \"\") == True",
        "assert is_anagram(\"A man, a plan, a canal, Panama\", \"amanaplanacanalpanama\") == True"
    ],
    "difficulty": "easy",
    "model": "mistral:latest",
    "style": "AtCoder"
}