{
    "title": "'Anagram Detector (Hard)'",
    "description": "Given two strings, determine if they are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of another word or phrase, usually with all the original letters in the same alphabet and only one unique letter per word.\n\n#### Function Signature\n```python\ndef are_anagrams(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1`, `s2` (str): Two strings that may contain letters and spaces.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    s1 = ''.join(sorted(s1.lower().replace(' ', '')))\n    s2 = ''.join(sorted(s2.lower().replace(' ', '')))\n    \n    # Check if the sorted strings are the same, ignoring order\n    return len(s1) == len(s2) and set(s1) <= set(s2)",
    "tests": [
        "assert are_anagrams(\"listen\", \"silent\") == True",
        "assert are_anagrams(\"hello\", \"world\") == False",
        "assert are_anagrams(\"Two words\", \"Towards\") == True",
        "assert are_anagrams(\"Python\", \"Thonpy\") == False"
    ],
    "difficulty": "super hard",
    "model": "mistral:latest",
    "style": "Facebook Hacker Cup"
}