{
    "title": "'Anagram Detection (Hard)'",
    "description": "Determine if two strings are anagrams of each other, meaning they contain the same characters in a possibly different order.\n\n#### Function Signature\n```python\ndef are_anagrams(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1`, `s2` (str): Two strings of any length that may contain letters and spaces.\n\n#### Output\n- Returns `True` if the two input strings are anagrams, `False` otherwise.",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    # Remove spaces from both strings and convert to lowercase\n    s1 = ''.join(sorted(s1.lower().replace(' ', '')))\n    s2 = ''.join(sorted(s2.lower().replace(' ', '')))\n    # Check if the sorted and cleaned strings are equal\n    return s1 == s2",
    "tests": [
        "assert are_anagrams(\"listen\", \"silent\") == True",
        "assert are_anagrams(\"hello\", \"world\") == False",
        "assert are_anagrams(\"a man, a plan, a canal: Panama\", \"racecar, camaraderie, many people, dad\") == True"
    ],
    "difficulty": "super hard",
    "model": "mistral:latest",
    "style": "Google Code Jam"
}