{
    "title": "Reversed Substrings Checker (Hard)",
    "description": "Write a function `reversed_substrings` that checks if every non-empty substring of a given string is also a substring when the string is reversed.\n\n#### Function Signature\n```python\ndef reversed_substrings(s: str) -> bool:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns `True` if every non-empty substring of the input string is also a substring when the string is reversed, `False` otherwise.\n",
    "code": "def reversed_substrings(s: str) -> bool:\n    # Find all substrings of the input string\n    for i in range(len(s)):\n        for j in range(i+1, len(s)+1):\n            substring = s[i:j]\n            # Check if the substring is also a substring of the reversed string\n            if not (substring in s[::-1] or substring[::-1] in s):\n                return False\n    return True",
    "tests": [
        "assert reversed_substrings('abba') == True",
        "assert reversed_substrings('abc') == False",
        "assert reversed_substrings('aabbabaab') == True",
        "assert reversed_substrings('racecar') == True"
    ],
    "difficulty": "hard",
    "model": "mistral:latest"
}