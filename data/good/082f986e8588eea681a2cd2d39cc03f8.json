{
    "title": "'Anagram Detector (Hard)'",
    "description": "Given two strings, determine if they are anagrams of each other. Anagrams are words or phrases that contain the same letters, but in a different order.\n\n#### Function Signature\n```python\ndef are_anagrams(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1` (str): A non-empty string with alphabets only.\n- `str2` (str): Another non-empty string with alphabets only.\n\n#### Output\n- Returns `True` if both strings are anagrams of each other, `False` otherwise.",
    "code": "def are_anagrams(str1: str, str2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    str1 = ''.join([char for char in str1.lower() if char not in [\"\", \" \"]])\n    str2 = ''.join([char for char in str2.lower() if char not in [\"\", \" \"]])\n    # Sort the strings and check if they are equal\n    return sorted(str1) == sorted(str2)",
    "tests": [
        "assert are_anagrams(\"listen\", \"silent\") == True",
        "assert are_anagrams(\"hello\", \"world\") == False",
        "assert are_anagrams(\"act\", \"cat\") == True",
        "assert are_anagrams(\"apple\", \"appel\") == True"
    ],
    "difficulty": "insanely difficult",
    "model": "mistral:latest",
    "style": "Internationals Olympiad"
}