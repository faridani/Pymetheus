{
    "title": "'Anagram Solver (Medium)'",
    "description": "Given two strings, determine if they are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of another (usually with all the original letters in the same alphabet) that shares the same number and kind of letters as the original.\n\n#### Function Signature\n```python\ndef are_anagrams(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1` (str): A non-empty string.\n- `str2` (str): A non-empty string.\n\n#### Output\n- Returns `True` if the two input strings are anagrams, `False` otherwise.",
    "code": "def are_anagrams(str1: str, str2: str) -> bool:\n    # Convert both strings to lowercase and remove non-alphabetic characters\n    str1 = ''.join([char for char in str1 if char.isalpha()]).lower()\n    str2 = ''.join([char for char in str2 if char.isalpha()]).lower()\n    # Check if the sorted lists of characters are the same\n    return sorted(str1) == sorted(str2)",
    "tests": [
        "assert are_anagrams(\"listen\", \"silent\") == True",
        "assert are_anagrams(\"cats\", \"act\") == True",
        "assert are_anagrams(\"hello\", \"world\") == False",
        "assert are_anagrams(\"Eleven plus Two\", \"Twelve plus One\") == True"
    ],
    "difficulty": "hard",
    "model": "mistral:latest",
    "style": "Google Code Jam"
}