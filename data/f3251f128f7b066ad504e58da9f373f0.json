{
    "title": "Find the Longest Common Subsequence",
    "description": "A subsequence of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. Find the length of the longest common subsequence between two strings.\n\n#### Function Signature\n```python\ndef longest_common_subsequence(s1: str, s2: str) -> int:\n```\n\n#### Input\n- `s1` (str): First string.\n- `s2` (str): Second string.\n\n#### Output\n- Returns the length of the longest common subsequence between `s1` and `s2`.\n",
    "code": "def longest_common_subsequence(s1: str, s2: str) -> int:\n    m = len(s1)\n    n = len(s2)\n    dp = [[0 for _ in range(n + 1)] for _ in range(m + 1)]\n\n    for i in range(1, m + 1):\n        for j in range(1, n + 1):\n            if s1[i - 1] == s2[j - 1]:\n                dp[i][j] = dp[i - 1][j - 1] + 1\n            else:\n                dp[i][j] = max(dp[i - 1][j], dp[i][j - 1])\n\n    return dp[m][n]\n",
    "tests": [
        "assert longest_common_subsequence('ABCDGH', 'AEDFHR') == 3",
        "assert longest_common_subsequence('AGGTAB', 'GXTXAYB') == 4",
        "assert longest_common_subsequence('abcde', 'acefg') == 3"
    ],
    "difficulty": "insanely difficult",
    "model": "codebooga:latest",
    "style": "Daily Coding Problem"
}