{
    "title": "Hard - Anagram Detection",
    "description": "Write a function `anagram_checker` that determines if two given strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef anagram_checker(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1` (str): A string that may contain letters, numbers, and spaces.\n- `str2` (str): Another string that may contain letters, numbers, and spaces.\n\n#### Output\n- Returns `True` if the two strings are anagrams of each other, `False` otherwise.\n",
    "code": "def anagram_checker(str1: str, str2: str) -> bool:\n    # Remove any non-alphabetic characters and convert to lowercase\n    s1 = ''.join(sorted(char for char in str1.lower() if char.isalpha()))\n    s2 = ''.join(sorted(char for char in str2.lower() if char.isalpha()))\n    # Check if the sorted strings are equal\n    return len(s1) == len(s2) and s1 == s2",
    "tests": [
        "assert anagram_checker('Listen', 'Silent') == True",
        "assert anagram_checker('Madam', 'Dam') == True",
        "assert anagram_checker('Hello', 'World') == False",
        "assert anagram_checker('Welcome to New York', 'Scram New York welcome') == True"
    ]
}