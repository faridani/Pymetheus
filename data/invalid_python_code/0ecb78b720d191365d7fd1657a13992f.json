{
    "title": "Max Sum of a Subarray",
    "description": "Given an array of integers, find the maximum sum of a subarray that can be obtained by selecting any number of elements from the given array. A subarray is a sequence of consecutive elements in the original array.\n\n#### Function Signature\n```python\ndef max_subarray_sum(arr: list[int)) -> int:\n```\n\n#### Input\n- `arr` (list[int]): An array of integers.\n\n#### Output\n- Returns the maximum sum of a subarray that can be obtained by selecting any number of elements from the given array.",
    "code": "def max_sub_array_sum(arr: list[int)) -> int:\n    if not arr:\n        return 0\n    max_ending_here = max_so_far = arr[0]\n    for i in range(1, len(arr)):\n        max_ending_here = max(arr[i], max_ending_here + arr[i])\n        max_so_far = max(max_so_far, max_ending_here)\n    return max_so_far\n",
    "tests": [
        "assert max_subarray_sum([1, -3, 2, 0, -1, 5, -3]) == 6",
        "assert max_subarray_sum([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6",
        "assert max_subarray_sum([1, 2, 3]) == 9"
    ]
}