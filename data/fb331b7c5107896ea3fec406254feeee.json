{
    "title": "Maximum Sum of Non-Overlapping Subarrays",
    "description": "Given an integer array `nums`, find the maximum sum of non-overlapping subarrays.\n\n#### Function Signature\n```python\ndef max_sum_of_non_overlapping_subarrays(nums: list[int]) -> int:\n```\n\n#### Input\n* `nums` (list[int]): A list of integers.\n\n#### Output\n* Returns the maximum sum of non-overlapping subarrays.\n",
    "code": "\ndef max_sum_of_non_overlapping_subarrays(nums: list[int]) -> int:\n    n = len(nums)\n    prefix_sum = [0] * (n + 1)\n    for i in range(n):\n        prefix_sum[i + 1] = prefix_sum[i] + nums[i]\n    \n    dp = [[0, 0] for _ in range(n)]\n    max_sum = float('-inf')\n    for i in range(n):\n        for j in range(i):\n            if prefix_sum[i + 1] - prefix_sum[j] > max_sum:\n                max_sum = prefix_sum[i + 1] - prefix_sum[j]\n                dp[i][0] = j\n                dp[i][1] = i\n    return max_sum\n\n",
    "tests": [
        "assert max_sum_of_non_overlapping_subarrays([-2, 3, -2]) == 8",
        "assert max_sum_of_non_overlapping_subarrays([1, -2, 3, 10, -4, 7, 2, -5]) == 30"
    ],
    "difficulty": "super hard",
    "model": "llama3:latest",
    "style": "Interview Query"
}