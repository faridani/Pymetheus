{
    "title": "Hard: Calculating the Collatz Conjecture Length",
    "description": "The Collatz conjecture is a mathematical conjecture concerning sequences defined as follows:\nStart with any positive integer n. Then each term is obtained from the previous term as follows:\n- If the current term is even, the next term is one half of it.\n- If the current term is odd, the next term is 3 times the current term plus 1.\nThe conjecture is that no matter what value of n, the sequence will always reach 1.\n\nWrite a function `collatz_length` that calculates the length of the Collatz sequence for a given positive integer `n`. The function should raise a ValueError if `n` is not a positive integer.\n\n#### Function Signature\n```python\ndef collatz_length(n: int) -> int:\n```\n\n#### Input\n- `n` (int): A positive integer for which to calculate the length of its Collatz sequence.\n\n#### Output\n- Returns an integer representing the length of the Collatz sequence for the input number.\n",
    "code": "def collatz_length(n: int) -> int:\n    if n <= 0 or not isinstance(n, int):\n        raise ValueError('Input must be a positive integer')\n    length = 1\n    while n != 1:\n        n = n / 2 if n % 2 == 0 else 3 * n + 1\n        length += 1\n    return length\n",
    "tests": [
        "assert collatz_length(1) == 1",
        "assert collatz_length(6) == 8",
        "assert collatz_length(13) == 9",
        "assert collatz_length(0) == ValueError('Input must be a positive integer')"
    ],
    "difficulty": "insanely difficult",
    "model": "codestral:latest",
    "style": "Exercism"
}