{
    "title": "Alphabet Palindrome (Easy)",
    "description": "An alphabet palindrome is a word or phrase that only contains the 26 lowercase English letters in the same frequency, and reads the same forward and backward. Write a function `is_alphabet_palindrome` that checks if a given string is an alphabet palindrome.\n#### Function Signature\n```python\ndef is_alphabet_palindrome(s: str) -> bool:\n``` \n#### Input\n- `s` (str): A string that only contains lowercase English letters and spaces.\n#### Output\n- Returns `True` if the input string is an alphabet palindrome, `False` otherwise.",
    "code": "import collections\ndef is_alphabet_palindrome(s: str) -> bool:\n    # Remove spaces and count letter frequencies\n    s = s.lower().replace(\" \", \"\")\n    freq = collections.Counter(s)\n    # Check if the frequency of each letter is even and the length is even or if it's odd with only one letter\n    return len(s) % 2 == 0 or (len(s) % 2 != 0 and len(freq) == 1 and freq[list(freq.keys())[0]] == 1)\n",
    "tests": [
        "assert is_alphabet_palindrome(\"A man, a plan, a canal, Panama\") == False",
        "assert is_alphabet_palindrome(\"racecar\") == True",
        "assert is_alphabet_palindrome(\"level\") == True",
        "assert is_alphabet_palindrome(\"hello\") == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}