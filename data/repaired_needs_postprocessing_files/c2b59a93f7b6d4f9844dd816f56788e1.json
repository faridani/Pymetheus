{
    "title": "Anagram Detection (Hard)",
    "description": "Write a function `anagram_checker` that checks if two given strings are anagrams of each other.\n\n#### Function Signature\n```python\ndef anagram_checker(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1`, `str2` (str): Two strings that may contain letters (case insensitive) and spaces.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\n",
    "code": "import collections\ndef anagram_checker(str1: str, str2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    str1 = ''.join(c for c in str1.lower() if c.isalpha()).strip()\n    str2 = ''.join(c for c in str2.lower() if c.isalpha()).strip()\n    \n    # If the two strings have different lengths, they are not anagrams.\n    if len(str1) != len(str2):\n        return False\n    \n    # Count the frequency of each letter in both strings\n    freq_count = collections.Counter(str1)\n    for char in str2:\n        if char not in freq_count or freq_count[char] == 0:\n            return False\n        freq_count[char] -= 1\n    \n    # If all letters have been accounted for and the counts match, the strings are anagrams.\n    return True",
    "tests": [
        "assert anagram_checker(\"listen\", \"silent\") == True",
        "assert anagram_checker(\"actually\", \"tactics\") == True",
        "assert anagram_checker(\"hello\", \"world\") == False",
        "assert anagram_checker(\"python\", \"typhon\") == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}