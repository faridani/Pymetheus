{
    "title": "Anagram Detector (Hard)",
    "description": "Given two strings, write a function `are_anagrams` that checks if they are anagrams of each other. Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef are_anagrams(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1`, `s2` (str): Two strings that may contain only lowercase letters.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    # Ensure both strings are lowercase and have the same length\n    s1 = sorted(list(s1.lower()))\n    s2 = sorted(list(s2.lower()))\n    return len(s1) == len(s2) and s1 == s2",
    "tests": [
        "assert are_anagrams('listen', 'silent') == True",
        "assert are_anagrams('hello', 'world') == False",
        "assert are_anagrams('cat', 'act') == True",
        "assert are_anagrams('cool', 'loot') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}