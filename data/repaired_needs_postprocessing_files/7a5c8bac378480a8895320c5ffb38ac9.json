{
    "title": "Anagram Checker (Hard)",
    "description": "An anagram is a word or phrase formed by rearranging the letters of another word or phrase, typically using all the original letters exactly once.\n#### Function Signature\n```python\ndef is_anagram(s1: str, s2: str) -> bool:\n```\n#### Input\n- `s1`, `s2` (str): Two strings containing only lowercase letters.\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def is_anagram(s1: str, s2: str) -> bool:\n    # Ensure both strings have the same length\n    if len(s1) != len(s2):\n        return False\n    \n    # Create two dictionaries to count the frequency of each letter in the input strings\n    dict1 = {}\n    dict2 = {}\n    for char in s1:\n        if char in dict1:\n            dict1[char] += 1\n        else:\n            dict1[char] = 1\n    for char in s2:\n        if char in dict2:\n            dict2[char] += 1\n        else:\n            dict2[char] = 1\n    \n    # Check if both dictionaries are equal\n    return dict1 == dict2",
    "tests": [
        "assert is_anagram('listen', 'silent') == True",
        "assert is_anagram('hello', 'world') == False",
        "assert is_anagram('stars', 'rats') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}