{
    "title": "Medium: Maximal Subarray Sum",
    "description": "You are given an array of integers. Your task is to find the maximum sum of a contiguous subarray within the input array.\n\n#### Function Signature\n```python\ndef max_subarray_sum(arr: List[int]) -> int:\n```\n\n#### Input\n- `arr` (List[int]): A list of integers that can contain both positive and negative values. The length of the array is at most 10^5.\n\n#### Output\n- Returns an integer representing the maximum sum of a contiguous subarray within the input array.",
    "code": "from typing import List\ndef max_subarray_sum(arr: List[int]) -> int:\n    current_max = global_max = arr[0]\n    for i in range(1, len(arr)):\n        current_max = max(arr[i], current_max + arr[i])\n        global_max = max(global_max, current_max)\n    return global_max",
    "tests": [
        "assert max_subarray_sum([34, -50, 42, 14, -5, 86]) == 137",
        "assert max_subarray_sum([-2, -3, 4, -1, -2, 1, 5, -3]) == 7",
        "assert max_subarray_sum([-7, -3, -2, -1]) == -1",
        "assert max_subarray_sum([0, -1, 2, -3, 4, -5, 6]) == 6"
    ],
    "model": "qwen2:7b-repaired by Llama 3"
}