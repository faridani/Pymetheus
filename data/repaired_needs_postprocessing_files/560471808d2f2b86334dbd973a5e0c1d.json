{
    "title": "'Prime Digit Count' - Hard",
    "description": "Write a function `prime_digit_count` that takes an integer `n` and returns the count of prime digits contained in the expansion of `n`.\\n\\n#### Function Signature```python\\ndef prime_digit_count(n: int) -> int:\\````\\n\\n#### Input\\- `n` (int): A positive integer.\\````\\n\\n#### Output\\- Returns an integer representing the count of prime digits contained in the expansion of `n`.\\````\\ndef is_prime(num: int) -> bool:    if num <= 1 or num % 2 == 0: return False    for i in range(3, int(num**0.5) + 1, 2):        if num % i == 0:            return False    return True\\````\\ndef prime_digit_count(n: int) -> int:    count = 0    digits = str(n)    for digit in digits:        if is_prime(int(digit)) and digit != '0': count += 1    return count",
    "code": "def is_prime(num: int) -> bool:\n    if num <= 1 or num % 2 == 0: return False\n    for i in range(3, int(num**0.5) + 1, 2):\n        if num % i == 0:\n            return False\n    return True\n\ndef prime_digit_count(n: int) -> int:\n    count = 0\n    digits = str(n)\n    for digit in digits:\n        if is_prime(int(digit)) and digit != '0': count += 1\n    return count",
    "tests": [
        "assert prime_digit_count(371) == 3",
        "assert prime_digit_count(3) == 1",
        "assert prime_digit_count(9271) == 3",
        "assert prime_digit_count(1024) == 1"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}