{
    "title": "Number of Unique Digits - A Medium Python Problem",
    "description": "Write a function `count_unique_digits` that takes a non-negative integer as input and returns the number of unique digits present in the input number.\n\n#### Function Signature\n```python\ndef count_unique_digits(n: int) -> int:\n```\n\n#### Input\n- `n` (int): A non-negative integer.\n\n#### Output\n- Returns the number of unique digits present in the input integer.\n",
    "code": "def count_unique_digits(n: int) -> int:\n    n = abs(n)\n    n = str(n)\n    unique_digits = set()\n    for char in n:\n        if char in unique_digits:\n            continue\n        unique_digits.add(char)\n    return len(unique_digits)",
    "tests": [
        "assert count_unique_digits(123456789) == 9",
        "assert count_unique_digits(1123456789) == 7",
        "assert count_unique_digits(0) == 1",
        "assert count_unique_digits(1011) == 3"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}