{
    "title": "Anagram Finder (Hard)",
    "description": "Given two strings, write a function `anagram` that checks if the two strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of another, usually with all the original letters in the same alphabet and only one unique representation of each letter.\n\n#### Function Signature\n```python\ndef anagram(string1: str, string2: str) -> bool:\n``` \n\n#### Input\n- `string1` (str): A string that may contain letters in any case and possibly spaces.\n- `string2` (str): Another string that may contain letters in any case and possibly spaces.\n\n#### Output\n- Returns `True` if the input strings are anagrams, `False` otherwise.",
    "code": "import collections\ndef anagram(string1: str, string2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    string1 = ''.join(string1.split()).lower()\n    string2 = ''.join(string2.split()).lower()\n    \n    # Count the frequency of each letter in both strings\n    freq1 = collections.Counter(string1)\n    freq2 = collections.Counter(string2)\n    \n    # Check if the frequencies are equal for all letters\n    return freq1 == freq2",
    "tests": [
        "assert anagram('Listen', 'Silent') == True",
        "assert anagram('hello', 'world') == False",
        "assert anagram('A man, a plan, a canal, Panama', 'amanaplanacanalpanam') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}