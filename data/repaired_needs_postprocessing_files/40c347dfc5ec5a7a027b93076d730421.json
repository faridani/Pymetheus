{
    "title": "Easy: Minimum Number of Operations to Make String Palindromic",
    "description": "Given a string, you need to make it palindromic by adding minimum number of characters. You can add either 'A' or 'B'. Write a function `min_operations` that calculates the minimum number of operations required.\n\n#### Function Signature\n```python\ndef min_operations(s: str) -> int:\n``` \n\n#### Input\n- `s` (str): A string that may contain letters, numbers, and spaces.\n\n#### Output\n- Returns an integer representing the minimum number of operations required to make the input string palindromic.",
    "code": "def min_operations(s: str) -> int:\n    n = len(s)\n    left, right = 0, n - 1\n    operations = 0\n    while left < right:\n        if s[left] != s[right]:\n            if s[left + 1:right] == s[left:right].reverse():\n                left += 1\n            else:\n                right -= 1\n            operations += 1\n        else:\n            left += 1\n            right -= 1\n    return operations",
    "tests": [
        "assert min_operations('abcba') == 0",
        "assert min_operations('abcdcba') == 2",
        "assert min_operations('abccba') == 3",
        "assert min_operations('a') == 0"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}