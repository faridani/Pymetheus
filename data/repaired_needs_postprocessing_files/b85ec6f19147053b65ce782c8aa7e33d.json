{
    "title": "Easy: Closest Pair of Points",
    "description": "Given a list of 2D points, find the pair of points that are closest to each other.\n#### Function Signature\n```python\ndef closest_pair(points: [(int, int)]) -> ((int, int), (int, int)):\n``` #### Input\n- `points` (list of tuples): A list of 2D points, where each point is a tuple of two integers. #### Output\n- Returns a tuple of two points that are closest to each other. If there are multiple pairs with the same minimum distance, return one of them.\n",
    "code": "import math\ndef closest_pair(points: [(int, int)]) -> ((int, int), (int, int)):\n    min_distance = float('inf')\n    closest_points = None\n    for i in range(len(points)):\n        for j in range(i + 1, len(points)):\n            distance = math.sqrt((points[i][0] - points[j][0]) ** 2 + (points[i][1] - points[j][1]) ** 2)\n            if distance < min_distance:\n                min_distance = distance\n                closest_points = (points[i], points[j])\n    return closest_points\n",
    "tests": [
        "assert closest_pair([(1, 1), (3, 3), (5, 5)]) == ((1, 1), (3, 3))",
        "assert closest_pair([(0, 0), (1, 1), (-1, -1), (2, 2)]) == ((-1, -1), (0, 0))"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}