{
    "title": "'Palindromic Substrings Finder (Easy)'",
    "description": "Given a string, write a function `find_palindromes` that finds and returns all palindromic substrings of the input string.\n\n#### Function Signature\n```python\ndef find_palindromes(s: str) -> List[str]:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces and punctuation.\n\n#### Output\n- Returns a list of palindromic substrings in the input string.",
    "code": "import re\ndef find_palindromes(s: str) -> List[str]:\n    # Find all substrings that are the same forwards and backwards (ignoring case)\n    substrings = [m.group() for m in re.finditer('(\\b(?=\\b[^a-z0-9]*\\b)[a-z0-9]{1,}\\b\\1\\b)', s, flags=re.IGNORECASE)]\n    # Remove duplicates (since the order doesn't matter)\n    return list(set(substrings))",
    "tests": [
        "assert find_palindromes('racecar') == ['racecar', 'cc']",
        "assert find_palindromes('A man, a plan, a canal, Panama') == ['amanaplanacanalpanama', 'aman']"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}