{
    "title": "Hard: Matrix Rotation",
    "description": "Given a square matrix of integers, write a function `rotate_matrix` that rotates the matrix 90 degrees clockwise. The function should return the rotated matrix.",
    "code": "def rotate_matrix(matrix: list[list[int]]):\n    n = len(matrix)\n    for i in range(n // 2):\n        for j in range(i, n - i - 1):\n            temp = matrix[i][j]\n            matrix[i][j] = matrix[n - 1 - j][i]\n            matrix[n - 1 - j][i] = matrix[n - 1 - i][n - 1 - j]\n            matrix[n - 1 - i][n - 1 - j] = matrix[j][n - 1 - i]\n            matrix[j][n - 1 - i] = temp\n    return matrix",
    "tests": [
        "assert rotate_matrix([[1, 2], [3, 4]]) == [[3, 1], [4, 2]]",
        "assert rotate_matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]]) == [[7, 4, 1], [8, 5, 2], [9, 6, 3]]",
        "assert rotate_matrix([[1, 2, 3, 4],[5, 6, 7, 8],[9, 10, 11, 12],[13, 14, 15, 16]]) == [[13, 9, 5, 1],[14, 10, 6, 2],[15, 11, 7, 3],[16, 12, 8, 4]]"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}