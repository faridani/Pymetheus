{
    "title": "Anagram Detector (Hard)",
    "description": "An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Write a function `are_anagrams` that checks if two given strings are anagrams. This function signature and input/output details will be helpful when you implement it in your favorite programming language.\n\n#### Function Signature\n```python\ndef are_anagrams(s1: str, s2: str) -> bool:\n``` \n\n#### Input\n- `s1` (str): A string that may contain letters and spaces.\n- `s2` (str): Another string that may contain letters and spaces.\n\n#### Output\n- Returns `True` if the input strings are anagrams, `False` otherwise.",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    # Remove non-alphabetic characters and convert to lowercase\n    s1 = ''.join(char for char in s1.lower() if char.isalpha())\n    s2 = ''.join(char for char in s2.lower() if char.isalpha())\n    # Check if the sorted characters of both strings are the same\n    return sorted(s1) == sorted(s2)",
    "tests": [
        "assert are_anagrams(\"listen\", \"silent\") == True",
        "assert are_anagrams(\"racecar\", \"carrace\") == True",
        "assert are_anagrams(\"hello\", \"world\") == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}