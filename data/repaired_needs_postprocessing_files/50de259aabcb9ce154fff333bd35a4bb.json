{
    "title": "Medium: Maximum Sum of an Increasing Subsequence",
    "description": "Given a list of integers, write a function `max_increasing_subsequence_sum` that returns the maximum sum of all increasing subsequences in the input list.\n\n#### Function Signature\n```python\ndef max_increasing_subsequence_sum(nums: list[int]) -> int:\n``` \n\n#### Input\n- `nums` (list[int]): A list of integers.\n\n#### Output\n- Returns the maximum sum of all increasing subsequences in the input list.",
    "code": "def max_increasing_subsequence_sum(nums: list[int]) -> int:\n    if not nums:\n        return 0\n    dp = [num for num in nums]\n    for i in range(1, len(nums)):\n        for j in range(i):\n            if nums[i] > nums[j]:\n                dp[i] = max(dp[i], dp[j] + nums[i])\n    return max(dp)",
    "tests": [
        "assert max_increasing_subsequence_sum([1, 2, 3, 4, 5]) == 15",
        "assert max_increasing_subsequence_sum([5, 4, 3, 2, 1]) == 5",
        "assert max_increasing_subsequence_sum([-1, -2, -3, -4, -5]) == -1",
        "assert max_increasing_subsequence_sum([10, 20, 30, 40, 50]) == 150"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}