{
    "title": "Hard - Minimum Deletions for Unique Substring",
    "description": "Given a string `s`, find the minimum number of deletions required to make all substrings unique.\n\n#### Function Signature\n```python\ndef min_deletions(s: str) -> int:\n```\n\n#### Input\n- `s` (str): A string consisting of lowercase English letters.\n\n#### Output\n- Returns the minimum number of deletions required to make all substrings unique.\n\n#### Constraints\n- 1 <= len(s) <= 10^5",
    "code": "def min_deletions(s: str) -> int:\n    n = len(s)\n    substrings = set()\n    deletions = 0\n    for i in range(n):\n        for j in range(i, n):\n            substring = s[i:j + 1]\n            if substring in substrings:\n                deletions += 1\n            else:\n                substrings.add(substring)\n    return deletions",
    "tests": [
        "assert min_deletions('abcabc') == 3",
        "assert min_deletions('aba') == 0",
        "assert min_deletions('aaaaa') == 4",
        "assert min_deletions('geeksforgeeks') == 8"
    ],
    "model": "gemma2:27b-instruct-q5_K_S-repaired by Llama 3"
}