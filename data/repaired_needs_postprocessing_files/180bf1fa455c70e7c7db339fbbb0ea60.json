{
    "title": "Hard - Digit Sum Primes",
    "description": "A prime number is a natural number greater than 1 that has no positive divisors other than 1 and itself.  A digit sum prime is a prime number whose digits add up to a prime number.\nWrite a function `digit_sum_primes` that takes an integer `n` as input and returns the number of digit sum primes less than or equal to `n`. \n#### Function Signature\n```python\ndef digit_sum_primes(n: int) -> int:\n``` \n#### Input\n- `n` (int): A positive integer.\n#### Output\n- Returns the number of digit sum primes less than or equal to `n`.",
    "code": "def is_prime(num):\n    if num <= 1:\n        return False\n    for i in range(2, int(num**0.5) + 1):\n        if num % i == 0:\n            return False\n    return True\n\ndef digit_sum(num):\n    total = 0\n    while num > 0:\n        total += num % 10\n        num //= 10\n    return total\n\ndef digit_sum_primes(n: int) -> int:\n    count = 0\n    for i in range(2, n + 1):\n        if is_prime(i) and is_prime(digit_sum(i)):\n            count += 1\n    return count\n",
    "tests": [
        "assert digit_sum_primes(100) == 17",
        "assert digit_sum_primes(50) == 8",
        "assert digit_sum_primes(1000) == 43"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}