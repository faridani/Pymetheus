{
    "title": "Hard: Circular Linked List Summation",
    "description": "You are given a circular linked list where each node contains an integer value. Write a function `sum_circular_list` that calculates the sum of all values in the circular linked list.\n\n#### Function Signature\n```python\ndef sum_circular_list(head: ListNode) -> int:\n```\nwhere `ListNode` is defined as:\n```python\nclass ListNode:\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = next\n```\n#### Input\n- `head` (`ListNode`): The head of the circular linked list.\n#### Output\n- Returns an integer representing the sum of all values in the circular linked list.",
    "code": "class ListNode:\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = next\n\ndef sum_circular_list(head: ListNode) -> int:\n    if not head:\n        return 0\n    current = head\n    total_sum = 0\n    while True:\n        total_sum += current.val\n        current = current.next\n        if current == head:\n            break\n    return total_sum",
    "tests": [
        "node1 = ListNode(1)\nnode2 = ListNode(2)\nnode3 = ListNode(3)\nnode1.next = node2\nnode2.next = node3\nnode3.next = node1\ntotal = sum_circular_list(node1)\nassert total == 6",
        "node1 = ListNode(5)\ntotal = sum_circular_list(node1)\nassert total == 5"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}