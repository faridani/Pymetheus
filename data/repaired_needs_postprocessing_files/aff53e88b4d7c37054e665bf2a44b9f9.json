{
    "title": "'Reversed Words Checker (Medium)'",
    "description": "Write a function `is_reversed_words` that checks if the words in a given sentence are reversed when read backwards. In this problem, a word is a sequence of alphabetic characters, including spaces.\n\n#### Function Signature\n```python\ndef is_reversed_words(s: str) -> bool:\n```\n\n#### Input\n- `s` (str): A sentence that may contain words separated by spaces and possibly punctuation.\n\n#### Output\n- Returns `True` if the words in the input sentence are reversed when read backwards, `False` otherwise.\n",
    "code": "import re\ndef is_reversed_words(s: str) -> bool:\n    # Remove punctuation and convert to lowercase\n    s = re.sub('[^a-zA-Z ]', '', s).lower()\n    # Split the string into words by spaces\n    words = s.split()\n    # Check if each word is a palindrome\n    for word in words:\n        if not is_palindrome(word):\n            return False\n    \n    # If all words are palindromes, the sentence must be reversed\n    return True\n",
    "tests": [
        "assert is_reversed_words(\"A man, a plan, a canal, Panama\") == True",
        "assert is_reversed_words(\"racecar level levelcar racecar\") == True",
        "assert is_reversed_words(\"hello world goodbye\") == False",
        "assert is_reversed_words(\"No 'x' in Nixon\") == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}