{
    "title": "Anagram Detector (Hard)",
    "description": "Write a function `anagram_detector` that checks if two given strings are anagrams of each other.\n\n#### Function Signature\n```python\ndef anagram_detector(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1`, `s2` (str): Two strings that may contain letters, numbers, and spaces.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\n\n#### Constraints and Hints\n- Ignore spaces, punctuation, and case when comparing the strings. For example, 'Words And words' and 'and Words' are considered the same.",
    "code": "import collections\ndef anagram_detector(s1: str, s2: str) -> bool:\n    # Remove non-alphanumeric characters and convert to lowercase\n    s1 = ''.join(char for char in s1 if char in string.ascii_letters + string.digits).lower()\n    s2 = ''.join(char for char in s2 if char in string.ascii_letters + string.digits).lower()\n    # Count the frequency of each character in both strings\n    counts1 = collections.Counter(s1)\n    counts2 = collections.Counter(s2)\n    \n    # Compare the frequencies of characters to check if they are anagrams\n    return counts1 == counts2",
    "tests": [
        "assert anagram_detector('listen', 'silent') == True",
        "assert anagram_detector('hello', 'olleh') == True",
        "assert anagram_detector('world', 'drdwol') == True",
        "assert anagram_detector('python', 'typhon') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}