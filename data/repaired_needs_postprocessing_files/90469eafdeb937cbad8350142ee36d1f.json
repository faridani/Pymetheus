{
    "title": "Hard: Minimum Deletions to Make Palindromic Subsequences",
    "description": "Given a string `s`, find the minimum number of deletions required to obtain a string that contains only palindromic subsequences.\n\n#### Function Signature\n```python\ndef min_deletions(s: str) -> int:\n```\n\n#### Input\n- `s` (str): A string consisting of lowercase letters.\n\n#### Output\n- Returns the minimum number of deletions required.\n",
    "code": "def min_deletions(s: str) -> int:\n    n = len(s)\n    dp = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp[i][i] = 1\n\n    for cl in range(2, n + 1):\n        for i in range(n - cl + 1):\n            j = i + cl - 1\n            if s[i] == s[j] and cl == 2:\n                dp[i][j] = 2\n            elif s[i] == s[j]:\n                dp[i][j] = dp[i + 1][j - 1] + 2\n            else:\n                dp[i][j] = max(dp[i][j - 1], dp[i + 1][j])\n\n    return n - dp[0][n - 1]\n",
    "tests": [
        "assert min_deletions(\"aaba\") == 0",
        "assert min_deletions(\"geeksforgeeks\") == 8",
        "assert min_deletions(\"abccba\") == 0",
        "assert min_deletions(\"madam\") == 0"
    ],
    "model": "gemma2:27b-instruct-q5_K_S-repaired by Llama 3"
}