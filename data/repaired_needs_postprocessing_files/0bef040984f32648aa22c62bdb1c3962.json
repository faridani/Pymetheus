{
    "title": "Unique Characters Checker (Hard)",
    "description": "A string is considered to have all unique characters if no character appears more than once. Ignore case sensitivity and non-alphabetical characters.\n\n#### Function Signature\n```python\ndef has_unique_chars(s: str) -> bool:\n``` \n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns `True` if all the alphabetic characters in the input string are unique when case is ignored; otherwise returns `False`.",
    "code": "def has_unique_chars(s: str) -> bool:\n    # Normalize to lowercase and keep only alphabetical chars\n    s = ''.join(char.lower() for char in s if char.isalpha())\n    \n    seen_chars = set()  # Keep track of characters seen so far\n    \n    for char in s:\n        # If the character is already in `seen_chars`, it's not unique.\n        if char in seen_chars:\n            return False\n        else:\n            seen_chars.add(char)\n    \n    return True",
    "tests": [
        "assert has_unique_chars('Programming') == False",
        "assert has_unique_chars('Subdermatoglyphic') == True",
        "assert has_unique_chars('\"A man, a plan, a canal: Panama!\"') == True",
        "assert has_unique_chars('Hello World') == False",
        "assert has_unique_chars('abcdefghijklmnopqrstuvwxyz') == True"
    ],
    "model": "phi3:14b-repaired by Llama 3"
}