{
    "title": "Hard: Minimum Swaps to Sort an Array",
    "description": "Given an array of integers, find the minimum number of swaps required to sort the array in ascending order. \n\n#### Function Signature\n```python\ndef min_swaps(arr):\n``` \n\n#### Input\n- `arr` (list): A list of integers.\n\n#### Output\n- Returns an integer representing the minimum number of swaps required to sort the array.\n",
    "code": "def min_swaps(arr):\n    n = len(arr)\n    cycle_len = [0] * n\n    visited = [False] * n\n    count = 0\n\n    for i in range(n):\n        if not visited[i]:\n            j = i\n            cycle_length = 0\n            while not visited[j]:\n                visited[j] = True\n                j = arr.index(min(arr[j:]))\n                cycle_length += 1\n            count += cycle_length - 1\n    return count",
    "tests": [
        "'assert min_swaps([7, 1, 3, 2, 4, 5, 6]) == 5'",
        "'assert min_swaps([1, 2, 3, 4, 5]) == 0'",
        "'assert min_swaps([4, 3, 1, 2]) == 3'"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}