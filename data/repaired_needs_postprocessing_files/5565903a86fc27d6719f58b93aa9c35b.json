{
    "title": "Easy: First Unique Character",
    "description": "Given a string, find the first non-repeating character in it and return its index. If there is no such character, return -1.\n\n#### Function Signature:\n```\ndef first_unique_char(s: str) -> int:\n``` \n\n#### Input:\n- `s` (str): A string consisting of lowercase English letters.\n\n#### Output:\n- Returns the index of the first non-repeating character, or -1 if no such character exists.",
    "code": "def first_unique_char(s: str) -> int:\n    count = {}\n    for c in s:\n        if c in count:\n            count[c] += 1\n        else:\n            count[c] = 1\n    for i, c in enumerate(s):\n        if count[c] == 1:\n            return i\n    return -1",
    "tests": [
        "assert first_unique_char(\"leetcode\") == 0",
        "assert first_unique_char(\"loveleetcode\") == 2",
        "assert first_unique_char(\"aabbcc\") == -1"
    ],
    "model": "codegeex4:9b-repaired by Llama 3"
}