{
    "title": "'Palindromes with Reversed Vowels (Easy)',",
    "description": "A palindrome is a word or phrase that reads the same backward as forward. In this challenge, we will create a function to check if a given string is a palindrome after reversing all its vowels.\n\n#### Function Signature\n```python\ndef is_palindrome_with_vowel_reverse(s: str) -> bool:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, and spaces.\n\n#### Output\n- Returns `True` if the input string is a palindrome after reversing its vowels, `False` otherwise.",
    "code": "def is_palindrome_with_vowel_reverse(s: str) -> bool:\n    # Define vowels and remove non-alphabetic characters\n    vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    s = ''.join(char for char in s if char.isalpha())\n    \n    # Reverse the vowels and create a new string\n    vowel_reversed = ''.join(s[i] if s[i] not in vowels else vowels[vowels.index(s[i])] for i in range(len(s)-1, -1, -1))\n    \n    # Check if the string reads the same forwards and backwards after reversing its vowels\n    return s == vowel_reversed",
    "tests": [
        "assert is_palindrome_with_vowel_reverse('racecar') == True",
        "assert is_palindrome_with_vowel_reverse('level') == False",
        "assert is_palindrome_with_vowel_replace('A man, a plan, a canal, Panama') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}