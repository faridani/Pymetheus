{
    "title": "Anagram Finder (Hard)",
    "description": "Given two strings, determine if they are anagrams of each other. Anagrams are words or phrases that contain the same letters but not necessarily in the same order.\n\n#### Function Signature\n```python\ndef are_anagrams(s1: str, s2: str) -> bool:\n```n\n\n#### Input\n- `s1`, `s2` (str): Two strings that may contain the same letters but in different orders.\n\n#### Output\n- Returns `True` if the two input strings are anagrams, `False` otherwise.",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    s1 = ''.join(char for char in s1.lower().replace(' ', '') if char in string.ascii_letters)\n    s2 = ''.join(char for char in s2.lower().replace(' ', '') if char in string.ascii_letters)\n    # Sort the characters in each string\n    s1_sorted = sorted(s1)\n    s2_sorted = sorted(s2)\n    \n    # Compare the sorted strings to see if they are anagrams\n    return len(s1) == len(s2) and s1_sorted == s2_sorted",
    "tests": [
        "assert are_anagrams('listen', 'silent') == True",
        "assert are_anagrams('hello', 'world') == False",
        "assert are_anagrams('A man, a plan, a canal: Panama', 'The last stand a sap, nan plan! A cat') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}