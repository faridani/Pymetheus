{
    "title": "Palindromic Substrings Count Finder (Medium)",
    "description": "Given a string, find and count all the palindromic substrings within it.\n\n#### Function Signature\n```python\ndef count_palindromes(s: str) -> dict:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns a dictionary where the keys are the lengths of the palindromic substrings found and the values are their counts.",
    "code": "import collections\ndef count_palindromes(s: str) -> dict:\n    result = collections.defaultdict(int)\n    for i in range(len(s)):\n        start = i\n        end = start\n        while start >= 0 and end < len(s) and s[start] == s[end]:\n            start -= 1\n            end += 1\n        result[end - start] += 1\n    return dict(result)",
    "tests": [
        "assert count_palindromes(\"racecar\") == {1: 1, 3: 2, 5: 1}",
        "assert count_palindromes(\"A man, a plan, a canal, Panama\") == {1: 9, 2: 6, 3: 4, 4: 1, 5: 1}",
        "assert count_palindromes(\"No 'x' in Nixon\") == {1: 2, 2: 2, 3: 1, 5: 1}"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}