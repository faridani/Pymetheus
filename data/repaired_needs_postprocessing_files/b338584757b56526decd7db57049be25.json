{
    "title": "Polindromes with Consecutive Letters (Hard)",
    "description": "Given a string, check if it contains any consecutive repeating letters. A polindrome is still considered valid even if it has consecutive repeating letters.\n#### Function Signature\n```python\ndef check_consec(s: str) -> bool:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns `True` if the input string contains any consecutive repeating letters, `False` otherwise.\n",
    "code": "def check_consec(s: str) -> bool:\n    # Remove non-alphabetic characters from the input\n    s = ''.join([char for char in s if char.isalpha()]).lower()\n    # Use a sliding window approach to check for consecutive repeating letters\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            return True\n    return False",
    "tests": [
        "assert check_consec(\"abca\") == False",
        "assert check_consec(\"abcba\") == False",
        "assert check_consec(\"abccba\") == True",
        "assert check_consec(\"aabbcc\") == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}