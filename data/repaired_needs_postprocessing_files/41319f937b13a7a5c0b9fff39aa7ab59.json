{
    "title": "Hard - Matrix Path Sum",
    "description": "You are given a matrix of integers. Find the sum of all elements along the path from the top-left corner to the bottom-right corner, moving only down or right at each step.\n\n#### Function Signature\n```python\ndef matrix_path_sum(matrix: list[list[int]]) -> int:\n```\n\n#### Input\n- `matrix` (list[list[int]]): A 2D integer matrix representing the grid.\n\n#### Output\n- Returns the sum of all elements along the path from the top-left corner to the bottom-right corner.",
    "code": "def matrix_path_sum(matrix: list[list[int]]) -> int:\n    rows = len(matrix)\n    cols = len(matrix[0])\n    dp = [[0 for _ in range(cols)] for _ in range(rows)]\n    dp[0][0] = matrix[0][0]\n    for i in range(1, rows):\n        dp[i][0] = dp[i - 1][0] + matrix[i][0]\n    for j in range(1, cols):\n        dp[0][j] = dp[0][j - 1] + matrix[0][j]\n    for i in range(1, rows):\n        for j in range(1, cols):\n            dp[i][j] = min(dp[i - 1][j], dp[i][j - 1]) + matrix[i][j]\n    return dp[rows - 1][cols - 1]",
    "tests": [
        "assert matrix_path_sum([[1, 2, 3],[4, 5, 6],[7, 8, 9]]) == 29",
        "assert matrix_path_sum([[1, 3],[2, 6]]) == 7",
        "assert matrix_path_sum([[10, 5],[2, 8]]) == 25"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}