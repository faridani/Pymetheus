{
    "title": "[Medium] Word Pattern",
    "description": "Given a pattern and a string, find if the string follows the same pattern. Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in str.\n\n#### Function Signature\n```python\ndef word_pattern(pattern: str, s: str) -> bool:\n```\n\n#### Input\n- `pattern` (str): A string consisting only of lowercase English letters.\n- `s` (str): A string that contains words separated by a single space.\n\n#### Output\n- Returns `True` if the input string follows the pattern, `False` otherwise.",
    "code": "def word_pattern(pattern: str, s: str) -> bool:\n    words = s.split()\n    if len(pattern) != len(words):\n        return False\n    char_to_word = {}\n    word_to_char = {}\n    for char, word in zip(pattern, words):\n        if (char in char_to_word and char_to_word[char] != word) or (word in word_to_char and word_to_char[word] != char):\n            return False\n        char_to_word[char] = word\n        word_to_char[word] = char\n    return True",
    "tests": [
        "assert word_pattern(\"abba\", \"dog cat cat dog\") == True",
        "assert word_pattern(\"abba\", \"dog cat fish dog\") == False",
        "assert word_pattern(\"aaaa\", \"dog cat cat dog\") == False"
    ],
    "model": "codestral:22b-repaired by Llama 3"
}