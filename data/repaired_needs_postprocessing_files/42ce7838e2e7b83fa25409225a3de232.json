{
    "title": "Palindromic Substrings Count",
    "description": "Write a function `count_palindromes` that takes a string as input and returns the number of palindromic substrings within it. A palindromic substring is a contiguous sequence of characters in the string that reads the same forward and backward (ignoring case). Write a function `count_palindromes` that takes a string as input and returns the number of palindromic substrings within it. A palindromic substring is a contiguous sequence of characters in the string that reads the same forward and backward (ignoring case).\n\n#### Function Signature\n```python\ndef count_palindromes(s: str) -> int:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns the number of palindromic substrings in the input string.\n",
    "code": "def count_palindromes(s: str) -> int:\n    n = len(s)\n    dp = [[0] * n for _ in range(n)]\n    result = 0\n    for k in range(1, n + 1):\n        for i in range(n):\n            j = i + k - 1\n            if i > j or (i + 1 < j and s[i] != s[j]):\n                continue\n            if s[i] == s[j]:\n                dp[i][j] = k == 1\n                result += 1\n            elif dp[i + 1][j - 1]:\n                dp[i][j] = True\n                result += 1\n    return result",
    "tests": [
        "assert count_palindromes('abcbabcd') == 5",
        "assert count_palindromes('racecar') == 4",
        "assert count_palindromes('hello world') == 2",
        "assert count_palindromes('A man, a plan, a canal: Panama') == 13"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}