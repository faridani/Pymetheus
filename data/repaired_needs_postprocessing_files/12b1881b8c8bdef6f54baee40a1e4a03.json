{
    "title": "Euler's Consecutive Integers",
    "description": "Given a list of consecutive integers, find the sum of all divisors of each integer. However, we are only interested in the sums that are perfect squares.\n\n#### Function Signature\n```\ndef euler_sum(s: str) -> int:\n``` \n\n#### Input\n- `s` (str): A string representing a list of consecutive integers separated by commas.\n\n#### Output\n- Returns the sum of all divisors of each integer that is a perfect square.",
    "code": "import math\ndef euler_sum(s: str) -> int:\n    # Parse the input string into a list of integers\n    nums = [int(num) for num in s.split(',')] \n    total_sum = 0 \n    for num in nums:\n        divisors = [i for i in range(1, num + 1) if num % i == 0]\n        sum_of_divisors = sum(divisors)\n        sqrt_sum = int(math.sqrt(sum_of_divisors))\n        if sqrt_sum * sqrt_sum == sum_of_divisors:\n            total_sum += sum_of_divisors\n    return total_sum",
    "tests": [
        "assert euler_sum('1,2,3,4') == 28",
        "assert euler_sum('5,6,7,8') == 56",
        "assert euler_sum('9,10,11,12') == 96"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}