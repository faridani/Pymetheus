{
    "title": "String Compression",
    "description": "Given an array of characters, compress it using the run-length encoding algorithm. In this algorithm, consecutive elements are replaced by a single instance followed by the count of that element. For example, 'aaaaa' becomes '5a'. Write a function `compress_string` that takes in a list of characters and returns a compressed string.",
    "code": "from typing import List\n\ndef compress_string(s: List[str]) -> str:\n    count = 1\n    prev_char = s[0]\n    result = ''\n    for char in s[1:]:\n        if char == prev_char:\n            count += 1\n        else:\n            result += prev_char + (str(count) if count > 1 else '')\n            count = 1\n            prev_char = char\n    result += prev_char + (str(count) if count > 1 else '')\n    return result if len(result) < len(s) else ''.join(s)",
    "tests": [
        "assert compress_string(['a', 'a', 'b', 'c']) == '2a1b1c'",
        "assert compress_string(['a', 'a', 'a', 'a', 'a']) == '5a'",
        "assert compress_string(['g', 'f', 'g', 'g', 'e']) == '3g1f1e'",
        "assert compress_string(list('AAAABBBCCCC')) == '4A1B3C'"
    ],
    "model": "mistral-nemo:latest-repaired by Llama 3"
}