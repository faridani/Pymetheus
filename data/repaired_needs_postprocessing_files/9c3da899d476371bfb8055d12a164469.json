{
    "title": "Anagram Checker (Hard)",
    "description": "Given two strings, determine if they are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n#### Function Signature\n```python\ndef are_anagrams(s1: str, s2: str) -> bool:\n```\n#### Input\n- `s1`, `s2` (str): Two strings that may contain letters (case insensitive), numbers, and spaces.\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\n",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    s1 = ''.join(char for char in s1.lower().replace(' ', '') if char in string.ascii_letters + string.digits)\n    s2 = ''.join(char for char in s2.lower().replace(' ', '') if char in string.ascii_letters + string.digits)\n    # Sort the characters\n    s1_sorted = sorted(s1)\n    s2_sorted = sorted(s2)\n    # Check if they are the same, ignoring order\n    return set(s1_sorted) == set(s2_sorted)",
    "tests": [
        "assert are_anagrams('Listen', 'Silent') == True",
        "assert are_anagrams('hello', 'olleh') == True",
        "assert are_anagrams('racecar', 'craecar') == False",
        "assert are_anagrams('Python', 'Thonyp') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}