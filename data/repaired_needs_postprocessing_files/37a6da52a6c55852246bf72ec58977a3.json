{
    "title": "Anagram Detection (Hard)",
    "description": "Write a function `anagram_check` that checks if two given strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of another, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef anagram_check(str1: str, str2: str) -> bool:\n``` \n\n#### Input\n- `str1`, `str2` (str): Two strings that contain only lowercase letters and no spaces.\n\n#### Output\n- Returns `True` if the given strings are anagrams of each other, `False` otherwise.",
    "code": "def anagram_check(str1: str, str2: str) -> bool:\n    # Convert both strings to sorted lists of characters\n    sorted_str1 = sorted(list(str1))\n    sorted_str2 = sorted(list(str2))\n    \n    # Check if the two sorted lists are equal\n    return sorted_str1 == sorted_str2",
    "tests": [
        "assert anagram_check('listen', 'silent') == True",
        "assert anagram_check('python', 'typhon') == False",
        "assert anagram_check('Madam', 'madaM') == True",
        "assert anagram_check('programming', 'grammarionp') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}