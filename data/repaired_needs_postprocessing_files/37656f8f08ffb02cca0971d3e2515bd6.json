{
    "title": "Anagram Detector (Hard)",
    "description": "Write a function `find_anagrams(str1: str, str2: str)` that checks if two given strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef find_anagrams(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1` (str): A string containing lowercase alphabets.\n- `str2` (str): Another string containing lowercase alphabets.\n\n#### Output\n- Returns `True` if the two strings are anagrams of each other, `False` otherwise.\n",
    "code": "def find_anagrams(str1: str, str2: str) -> bool:\n    # Ensure both strings have the same length\n    if len(str1) != len(str2):\n        return False\n    # Create frequency dictionary for each string\n    freq1 = {char: str1.count(char) for char in sorted(set(str1))}\n    freq2 = {char: str2.count(char) for char in sorted(set(str2))}\n    # Compare the frequency dictionaries\n    return freq1 == freq2",
    "tests": [
        "assert find_anagrams('listen', 'silent') == True",
        "assert find_anagrams('hello', 'world') == False",
        "assert find_anagrams('wow', 'now') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}