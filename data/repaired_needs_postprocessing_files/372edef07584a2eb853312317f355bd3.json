{
    "title": "Minimum Distance Sum",
    "description": "Given an array of integers, calculate the sum of the minimum distances between all pairs of elements that are greater than their average. If there are no such pairs, return 0.\n\n#### Function Signature\n```python\ndef min_distance_sum(arr: list[int]) -> int:\n```\n\n#### Input\n- `arr` (list[int]): A list of integers.\n\n#### Output\n- Returns the sum of the minimum distances between all pairs of elements that are greater than their average, or 0 if there are no such pairs.",
    "code": "import math\ndef min_distance_sum(arr: list[int]) -> int:\n    total = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            avg = (arr[i] + arr[j]) / 2\n            if arr[i] > avg and arr[j] > avg:\n                total += abs(arr[i] - arr[j])\n    return total",
    "tests": [
        "assert min_distance_sum([5, 10, 15]) == 0",
        "assert min_distance_sum([1, 3, 2, 4]) == 2",
        "assert min_distance_sum([-1, 0, 1]) == 0",
        "assert min_distance_sum([1, -1, 0, 1, 2, 3, 4, 5]) == 8"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}