{
    "title": "Roman Numeral Conversion (Hard)",
    "description": "Write a function `convert_to_roman` that converts an integer to its equivalent Roman numeral.\n\n#### Function Signature\n```python\ndef convert_to_roman(number: int) -> str:\n```\n\n#### Input\n- `number` (int): An integer from 1 to 3999.\n\n#### Output\n- Returns a string representing the equivalent Roman numeral of the input integer.\n\nThe Roman numeral system uses seven different symbols: I, V, X, L, C, D, and M. The values for each symbol are as follows:\n- I = 1\n- V = 5\n- X = 10\n- L = 50\n- C = 100\n- D = 500\n- M = 1000\n\nFor example:\n- 3 is represented as III in Roman numerals.\n- 4 is represented as IV (1 + 1 + 1 + 1 minus V).\n- 9 is represented as IX (I + X + X).",
    "code": "def convert_to_roman(number: int) -> str:\n    roman_numerals = {'M': 1000, 'CM': 900, 'D': 500, 'CD': 400, 'C': 100, \n                    'XC': 90, 'L': 50, 'XL': 40, 'X': 10, 'IX': 9, 'V': 5, 'IV': 4, 'I': 1}\n    numeral = ''\n    for roman, value in roman_numerals.items():\n        while number >= value:\n            number -= value\n            numeral += roman\n    return numeral",
    "tests": [
        "assert convert_to_roman(3) == 'III'",
        "assert convert_to_roman(4) == 'IV'",
        "assert convert_to_roman(9) == 'IX'",
        "assert convert_to_roman(58) == 'LVIII'",
        "assert convert_to_roman(1994) == 'MCMXCIV'"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}