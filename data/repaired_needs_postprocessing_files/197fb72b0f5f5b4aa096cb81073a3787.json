{
    "title": "Medium: Counting Duplicates",
    "description": "Write a function `count_duplicates` that takes a list of integers as input and returns the count of duplicate elements. Two elements are considered duplicates if they have the same value.\n\n#### Function Signature\n```python\ndef count_duplicates(lst: list[int]) -> int:\n``` \n\n#### Input\n- `lst` (list[int]): A list of integers that may contain duplicate values.\n\n#### Output\n- Returns the count of duplicate elements in the input list.",
    "code": "def count_duplicates(lst: list[int]) -> int:\n    # Initialize a dictionary to store the count of each element\n    element_counts = {}\n    for num in lst:\n        if num not in element_counts:\n            element_counts[num] = 1\n        else:\n            element_counts[num] += 1\n    # Count the duplicate elements by subtracting the count of unique elements from the total count\n    return len(lst) - sum(count == 1 for count in element_counts.values())\n",
    "tests": [
        "assert count_duplicates([1, 2, 3]) == 0",
        "assert count_duplicates([1, 2, 3, 4, 5]) == 0",
        "assert count_duplicates([1, 1, 2, 2, 3, 3, 4, 4]) == 4",
        "assert count_duplicates([5, 5, 5, 5, 6]) == 4"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}