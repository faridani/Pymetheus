{
    "title": "Medium Python Coding Question: Find Maximum Subarray Sum",
    "description": "Given an array of integers, find the maximum sum of a contiguous subarray in the array. The subarray can be of any length.\n#### Function Signature\n```python\ndef max_subarray_sum(nums: list[int]) -> int:\n```\n\n#### Input\n- `nums` (list[int]): An array of integers.\n#### Output\n- Returns the maximum sum of a contiguous subarray in the array.",
    "code": "def max_subarray_sum(nums: list[int]) -> int:\n    max_so_far = nums[0]\n    max_ending_here = nums[0]\n\n    for i in range(1, len(nums)):\n        max_ending_here = max(nums[i], max_ending_here + nums[i])\n        max_so_far = max(max_so_far, max_ending_here)\n    \n    return max_so_far",
    "tests": [
        "assert max_subarray_sum([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6",
        "assert max_subarray_sum([1, 2, 3, 4]) == 10",
        "assert max_subarray_sum([-1, -2, -3, -4]) == -1"
    ],
    "model": "codegemma:7b-repaired by Llama 3"
}