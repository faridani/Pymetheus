{
    "title": "Reversed Substring Finder (Hard)",
    "description": "Given a string, find all the substrings that are the same when reversed. These substrings can overlap.\n\n#### Function Signature\n```python\ndef find_reversed_substrings(s: str) -> List[str]:\n``` \n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns a list of all the substrings that are the same when reversed. For example, for the input 'abbacxyzzyxabba', the output will be ['abba', 'a']. Note that each element in the list is case sensitive.\n",
    "code": "def find_reversed_substrings(s: str) -> List[str]:\n    s = ''.join(char for char in s.lower() if char in string.ascii_letters + string.digits)\n    results = []\n\n    for i in range(len(s)):\n        for j in range(i, len(s)):\n            if s[i:j] == s[::-1][i:j][::-1]:\n                if s[i:j] not in results:\n                    results.append(s[i:j])\n    return results",
    "tests": [
        "assert find_reversed_substrings('abbacxyzzyxabba') == ['abba', 'a']",
        "assert find_reversed_substrings('level') == []",
        "assert find_reversed_substrings('madam') == ['madam']",
        "assert find_reversed_substrings('kayak') == ['kayak', 'a']"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}