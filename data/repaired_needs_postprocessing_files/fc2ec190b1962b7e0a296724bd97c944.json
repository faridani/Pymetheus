{
    "title": "Hard: Longest Increasing Subsequence with Constraints",
    "description": "Given an array of integers `nums` and a positive integer `k`, find the length of the longest increasing subsequence (LIS) of `nums` where the difference between any two consecutive elements in the LIS is at most `k`. \n#### Function Signature\n```python\ndef longest_increasing_subsequence(nums: list[int], k: int) -> int:\n```\n\n#### Input\n- `nums` (list[int]): A list of integers.\n- `k` (int): The maximum allowed difference between consecutive elements in the LIS.\n\n#### Output\n- Returns the length of the longest increasing subsequence satisfying the constraint.",
    "code": "def longest_increasing_subsequence(nums: list[int], k: int) -> int:\n    dp = [1] * len(nums)\n    for i in range(1, len(nums)):\n        for j in range(i):\n            if nums[i] > nums[j] and abs(nums[i] - nums[j]) <= k:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return max(dp)",
    "tests": [
        "assert longest_increasing_subsequence([4,2,3,6,5,8], 2) == 4",
        "assert longest_increasing_subsequence([1,3,2,4,5], 1) == 4",
        "assert longest_increasing_subsequence([10,9,2,5,3,7,101,18], 5) == 4"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}