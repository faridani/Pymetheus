{
    "title": "Maximum Sum of a Subarray",
    "description": "Given an array of integers, find the maximum sum of a subarray within it.\n#### Function Signature\n```python\ndef max_sum_subarray(arr: list[int)) -> int:\n``` \n\n#### Input\n- `arr` (list[int]): A list of integers.\n\n#### Output\n- Returns the maximum sum of a subarray within the input array.",
    "code": "def max_sum_subarray(arr: list[int]) -> int:\n    n = len(arr)\n    if n == 0:\n        return 0\n    max_sum = arr[0]\n    current_sum = arr[0]\n    for i in range(1, n):\n        current_sum = max(arr[i], current_sum + arr[i])\n        max_sum = max(max_sum, current_sum)\n    return max_sum",
    "tests": [
        "assert max_sum_subarray([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6",
        "assert max_sum_subarray([1, -2, 3, 10, -4, 7, 2, -5]) == 12",
        "assert max_sum_subarray([-1, -2, -3]) == -1",
        "assert max_sum_subarray([]) == 0"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}