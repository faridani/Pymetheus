{
    "title": "Hard - Longest Subsequence with Limited Sum",
    "description": "Given an array of integers `nums` and an integer `limit`, find the length of the longest subsequence in `nums` such that the sum of its elements is less than or equal to `limit`. \n#### Function Signature\n```python\ndef longest_subsequence(nums: list[int], limit: int) -> int:\n```\n\n#### Input\n- `nums` (list[int]): A list of integers.\n- `limit` (int): The maximum allowed sum for the subsequence.\n\n#### Output\n- Returns the length of the longest subsequence satisfying the condition.",
    "code": "def longest_subsequence(nums: list[int], limit: int) -> int:\n    dp = [[0 for _ in range(limit + 1)] for _ in range(len(nums) + 1)]\n    for i in range(1, len(nums) + 1):\n        for j in range(limit + 1):\n            dp[i][j] = dp[i - 1][j]\n            if nums[i - 1] <= j:\n                dp[i][j] = max(dp[i][j], dp[i - 1][j - nums[i - 1]] + 1)\n    return max(dp[len(nums)])\n",
    "tests": [
        "'assert longest_subsequence([1,2,3,4,5], 7) == 3'",
        "'assert longest_subsequence([10,2,8,6,9,4], 20) == 5'",
        "'assert longest_subsequence([1,5,2,3,4], 10) == 5'"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}