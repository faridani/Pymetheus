{
    "title": "'Anagram Checker (Hard)'",
    "description": "Write a function `is_anagram` that checks if two given strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of another word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef is_anagram(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1`, `str2` (str): Two strings that may contain letters and spaces, but no punctuation.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def is_anagram(str1: str, str2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    s1 = ''.join(sorted(str1.lower().replace(' ', '')))\n    s2 = ''.join(sorted(str2.lower().replace(' ', '')))\n    \n    # Check if the sorted strings are equal\n    return len(s1) == len(s2) and s1 == s2",
    "tests": [
        "assert is_anagram('listen', 'silent') == True",
        "assert is_anagram('hello', 'world') == False",
        "assert is_anagram('moor', 'room') == True",
        "assert is_anagram('racecar', 'crazerace') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}