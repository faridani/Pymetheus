{
    "title": "String Manipulation: Anagrams",
    "description": "Write a function `find_anagram` that takes two strings, `str1` and `str2`, as input and returns the number of anagrams between them.\n\n#### Function Signature\n```python\ndef find_anagram(str1: str, str2: str) -> int:\n```\n\n#### Input\n- `str1` (str): The first string to compare.\n- `str2` (str): The second string to compare.\n\n#### Output\n- Returns the number of anagrams between `str1` and `str2`. An anagram is a string that can be rearranged into another string. For example, \"listen\" and \"silentl\" are anagrams.\n",
    "code": "import math\ndef find_anagram(str1: str, str2: str) -> int:\n    # Convert both strings to lowercase\n    str1 = str1.lower()\n    str2 = str2.lower()\n\n    # Sort the characters in each string and join them into a new string\n    sorted_str1 = ''.join(sorted(str1))\n    sorted_str2 = ''.join(sorted(str2))\n\n    # Check if the two sorted strings are equal\n    return 1 if sorted_str1 == sorted_str2 else 0",
    "tests": [
        "assert find_anagram('listen', 'silentl') == 1",
        "assert find_anagram('hello', 'olleh') == 1",
        "assert find_anagram('abcde', 'edcba') == 1",
        "assert find_anagram('abcd', 'dcba') == 0"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}