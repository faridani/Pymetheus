{
    "title": "Anagram Detector (Hard)",
    "description": "An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Write a function `anagram_checker` that takes two strings and returns `True` if they are anagrams of each other, `False` otherwise.\n\n#### Function Signature\n```python\ndef anagram_checker(string1: str, string2: str) -> bool:\n```\n\n#### Input\n- `string1` (str): A string that may contain letters and spaces only.\n- `string2` (str): A string that may contain letters and spaces only.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\n",
    "code": "def anagram_checker(string1: str, string2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    string1 = ''.join([char for char in string1.lower() if char not in ' '])\n    string2 = ''.join([char for char in string2.lower() if char not in ' '])\n    \n    # If the lengths of the strings are not equal, they cannot be anagrams\n    if len(string1) != len(string2):\n        return False\n    \n    # Sort the characters in both strings and compare them\n    sorted_string1 = sorted(string1)\n    sorted_string2 = sorted(string2)\n    return sorted_string1 == sorted_string2",
    "tests": [
        "assert anagram_checker(\"listen\", \"silent\") == True",
        "assert anagram_checker(\"hello\", \"world\") == False",
        "assert anagram_checker(\"Moore\", \"reemo\") == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}