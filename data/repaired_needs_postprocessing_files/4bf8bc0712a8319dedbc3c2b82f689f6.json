{
    "title": "Anagram Checker (Hard)",
    "description": "An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Write a function `is_anagram` that checks if two given strings are anagrams.  #### Function Signature``pythondef is_anagram(s1: str, s2: str) -> bool:  ```   - Remove spaces from both strings  - If the lengths of the two strings are not equal, they cannot be anagrams  - Create a dictionary to count the frequency of each letter in the first string  - Decrease the count of each letter that appears in the second string and check if all counts become zero    for letter in s2:      if letter in count:        count[letter] -= 1      else:        return False    for key, value in count.items():      if value != 0:        return False    return True",
    "code": "def is_anagram(s1: str, s2: str) -> bool:\n    s1 = ''.join(filter(str.isalpha, s1)).lower()\n    s2 = ''.join(filter(str.isalpha, s2)).lower()\n    if len(s1) != len(s2):\n        return False\n    count = {letter: s1.count(letter) for letter in set(s1)}\n    for letter in s2:\n        if letter in count:\n            count[letter] -= 1\n        else:\n            return False\n    for key, value in count.items():\n        if value != 0:\n            return False\n    return True",
    "tests": [
        "assert is_anagram('listen', 'silent') == True",
        "assert is_anagram('hello', 'world') == False",
        "assert is_anagram('Tact Coa', 'Cat') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}