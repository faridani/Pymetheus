{
    "title": "Anagram Detection (Hard)",
    "description": "Given two strings, write a function `are_anagrams` that checks if the input strings are anagrams of each other. Anagrams are words or phrases formed by rearranging the letters of another word or phrase, usually with all the original letters in the same alphabet and only one instance of each letter.\n\n#### Function Signature\n```python\ndef are_anagrams(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1`, `str2` (str): Two strings that may contain letters from the English alphabet.\n\n#### Output\n- Returns `True` if the input strings are anagrams of each other, `False` otherwise.\n",
    "code": "def are_anagrams(str1: str, str2: str) -> bool:\n   # Remove spaces and convert to lowercase\n   str1 = ''.join(e.lower() for e in str1.replace(' ', '') if e.isalpha())\n   str2 = ''.join(e.lower() for e in str2.replace(' ', '') if e.isalpha())\n   # If the sorted characters of both strings are the same, they are anagrams\n   return sorted(str1) == sorted(str2)\n",
    "tests": [
        "assert are_anagrams('listen', 'silent') == True",
        "assert are_anagrams('hello', 'world') == False",
        "assert are_anagrams('Welcome', 'mleWecoN') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}