{
    "title": "Hard - Matrix Rotation",
    "description": "You are given a 2D matrix of size N x N. You need to rotate the matrix by 90 degrees clockwise and return the rotated matrix.\n\n#### Function Signature```python\ndef rotate_matrix(matrix: list[list[int]]) -> list[list[int]]:\n```\n\n#### Input\n- `matrix` (list[list[int]]): A square matrix of size N x N containing integers.\n\n#### Output\n- Returns a new 2D matrix representing the rotated matrix.",
    "code": "def rotate_matrix(matrix: list[list[int]]) -> list[list[int]]:\n    n = len(matrix)\n    for i in range(n // 2):\n        for j in range(i, n - i - 1):\n            temp = matrix[i][j]\n            matrix[i][j] = matrix[n - 1 - j][i]\n            matrix[n - 1 - j][i] = matrix[n - 1 - i][n - 1 - j]\n            matrix[n - 1 - i][n - 1 - j] = matrix[j][n - 1 - i]\n            matrix[j][n - 1 - i] = temp\n    return matrix",
    "tests": [
        "assert rotate_matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]]) == [[7, 4, 1], [8, 5, 2], [9, 6, 3]]",
        "assert rotate_matrix([[1, 2], [3, 4]]) == [[3, 1], [4, 2]]",
        "assert rotate_matrix([[1]]) == [[1]]"
    ],
    "model": "gemma2:27b-instruct-q5_K_S-repaired by Llama 3"
}