{
    "title": "Hard - Balanced Binary String",
    "description": "A binary string is balanced if it contains an equal number of 0s and 1s. Given a binary string s, determine the minimum number of operations required to make it balanced. In each operation, you can either replace a 0 with a 1 or vice versa.\n\n#### Function Signature\n```python\ndef min_operations(s: str) -> int:\n```\n\n#### Input\n- `s` (str): A binary string consisting of only '0' and '1' characters.\n\n#### Output\n- Returns the minimum number of operations required to make the string balanced. If the string is already balanced, return 0.",
    "code": "def min_operations(s: str) -> int:\n    zeroes = s.count('0')\n    ones = s.count('1')\n    return abs(zeroes - ones) // 2\n",
    "tests": [
        "assert min_operations('0011') == 0",
        "assert min_operations('010') == 0",
        "assert min_operations('00011') == 1",
        "assert min_operations('00001111') == 0",
        "assert min_operations('1110000') == 3"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}