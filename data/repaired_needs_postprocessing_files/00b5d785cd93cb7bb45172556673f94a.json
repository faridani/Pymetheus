{
    "title": "'Check if a given string is an Anagram'\n(Medium)",
    "description": "An anagram is a word or phrase that can be formed by rearranging the letters of another word or phrase, using all the original letters exactly once. Write a function `is_anagram` that checks if two given strings are anagrams.\n\n#### Function Signature\n```python\ndef is_anagram(str1: str, str2: str) -> bool:\n``` \n\n#### Input\n- `str1`, `str2` (both str): Two strings that may contain letters, numbers, spaces and punctuation.\n\n#### Output\n- Returns `True` if the two input strings can be rearranged to form each other, `False` otherwise.\n",
    "code": "def is_anagram(str1: str, str2: str) -> bool:\n    # Remove non-alphabetic characters and convert both strings to lowercase\n    str1 = ''.join(sorted([char.lower() for char in str1 if char.isalpha()]))\n    str2 = ''.join(sorted([char.lower() for char in str2 if char.isalpha()]))\n    # Check if both strings have the same length and are equal\n    return len(str1) == len(str2) and str1 == str2",
    "tests": [
        "assert is_anagram('listen', 'silent') == True",
        "assert is_anagram('hello', 'world') == False",
        "assert is_anagram('Stress', 'desserts') == True",
        "assert is_anagram('Python', 'Tonyp') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}