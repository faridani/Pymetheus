{
    "title": "'Anagram Detection (Hard)'",
    "description": "An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Write a function `is_anagram` that checks if two given strings are anagrams of each other.\n\n#### Function Signature\n```python\ndef is_anagram(s1: str, s2: str) -> bool:\n``` \n\n#### Input\n- `s1` (str): A string containing only lowercase letters.\n- `s2` (str): A string containing only lowercase letters.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def is_anagram(s1: str, s2: str) -> bool:\n    # Remove spaces and sort the characters in both strings\n    s1 = sorted(s1.lower().replace(' ', ''))\n    s2 = sorted(s2.lower().replace(' ', ''))\n    # Compare the sorted lists\n    return len(s1) == len(s2) and s1 == s2",
    "tests": [
        "assert is_anagram('listen', 'silent') == True",
        "assert is_anagram('abcde', 'cdeab') == True",
        "assert is_anagram('hello', 'world') == False",
        "assert is_anagram('twoo taco cat', 'act ootat cooww') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}