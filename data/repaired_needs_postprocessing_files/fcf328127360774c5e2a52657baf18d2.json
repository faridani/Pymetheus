{
    "title": "Divisor Sum",
    "description": "Given an integer n, calculate the sum of all divisors (excluding n itself) for each number from 1 to n. Write a function `divisor_sum` that calculates and returns this sum for each number in the range.\n\n#### Function Signature\n```python\ndef divisor_sum(n: int) -> list:\n``` \n\n#### Input\n- `n` (int): The upper limit of the range for which we need to calculate the sum of divisors.\n\n#### Output\n- Returns a list of length n, where each element at index i is the sum of all divisors of the number i.",
    "code": "def divisor_sum(n: int) -> list:\n    def sum_divisors(i: int) -> int:\n        sum = 0\n        for j in range(1, i):\n            if i % j == 0:\n                sum += j\n        return sum\n    return [sum_divisors(i) for i in range(1, n+1)]",
    "tests": [
        "assert len(divisor_sum(10)) == 10",
        "assert sum(divisor_sum(5)) == 36",
        "assert all(isinstance(x, int) and x >= 0 for x in divisor_sum(15))"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}