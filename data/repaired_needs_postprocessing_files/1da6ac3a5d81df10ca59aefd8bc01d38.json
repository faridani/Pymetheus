{
    "title": "Egg Packing Problem",
    "description": "A farm has an unlimited supply of small, medium and large eggs. An egg carton can hold 12 eggs in total, with 3 small eggs, 2 medium eggs or 1 large egg in each row. Write a function `pack_eggs` that takes as input the number of small, medium, and large eggs available, and returns whether it is possible to pack all the eggs into cartons.\n\n#### Function Signature\n```python\ndef pack_eggs(small: int, medium: int, large: int) -> bool:\n``` \n\n#### Input\n- `small` (int): The number of small eggs available.\n- `medium` (int): The number of medium eggs available.\n- `large` (int): The number of large eggs available.\n\n#### Output\n- Returns `True` if it is possible to pack all the eggs into cartons, `False` otherwise.",
    "code": "import math\ndef pack_eggs(small: int, medium: int, large: int) -> bool:\n    # Calculate the maximum number of small eggs that can be packed\n    max_small = math.floor((small + 2 * (medium // 3)) / 3)\n    \n    # Calculate the maximum number of medium eggs that can be packed\n    max_medium = math.floor((max_small * 3) + (medium % 3))\n    \n    # Check if all eggs can be packed\n    return small <= max_small and medium <= max_medium and large >= (12 - max_small * 3 - max_medium)\n",
    "tests": [
        "assert pack_eggs(1, 2, 0) == True",
        "assert pack_eggs(5, 4, 1) == False",
        "assert pack_eggs(3, 6, 2) == True"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}