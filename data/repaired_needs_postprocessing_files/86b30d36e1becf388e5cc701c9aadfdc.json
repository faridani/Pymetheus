{
    "title": "Anagram Detector (Hard)",
    "description": "Given two strings, write a function `are_anagrams` that checks if the two strings are anagrams of each other. Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef are_anagrams(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1`, `s2` (str): Two strings that may contain letters (no numbers or punctuation).\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\n",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    # Make sure both strings have the same length\n    if len(s1) != len(s2):\n        return False\n    # Remove spaces and convert to lowercase\n    s1 = ''.join([char.lower() for char in s1.replace(' ', '')])\n    s2 = ''.join([char.lower() for char in s2.replace(' ', '')])\n    # Sort the strings\n    return sorted(s1) == sorted(s2)",
    "tests": [
        "assert are_anagrams(\"listen\", \"silent\") == True",
        "assert are_anagrams(\"act\", \"cat\") == False",
        "assert are_anagrams(\"MelonatropBupronolam\", \"MorphineButyrate\") == True",
        "assert are_anagrams(\"hello\", \"world\") == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}