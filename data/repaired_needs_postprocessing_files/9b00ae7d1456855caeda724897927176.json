{
    "title": "'Anagram Detection (Medium)'",
    "description": "Given two strings, write a function `anagram_check` that checks if the given two strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n#### Function Signature\n```python\ndef anagram_check(s1: str, s2: str) -> bool:\n```\n#### Input\n- `s1`, `s2` (str): Two strings that may contain letters and spaces only.\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def anagram_check(s1: str, s2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    s1 = ''.join([char for char in s1.lower() if char not in ' ']).replace(' ', '')\n    s2 = ''.join([char for char in s2.lower() if char not in ' ']).replace(' ', '')\n    # Sort the characters and compare the sorted lists\n    return sorted(s1) == sorted(s2)\n",
    "tests": [
        "assert anagram_check('listen', 'silent') == True",
        "assert anagram_check('welcome', 'mlewec') == True",
        "assert anagram_check('hello', 'world') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}