{
    "title": "Reverse Words: Palindromic Sentence Checker (Medium)",
    "description": "Write a function `is_palindrome_sentence` that checks if a given sentence is palindromic at the word level, meaning it reads the same forwards and backwards. However, unlike regular palindromes, punctuation, case and spaces are considered.\n\n#### Function Signature\n```python\ndef is_palindrome_sentence(s: str) -> bool:\n``` \n\n#### Input\n- `s` (str): A sentence that may contain letters, numbers, spaces, punctuation, and capitalization.\n\n#### Output\n- Returns `True` if the input sentence is a palindrome at the word level, `False` otherwise.",
    "code": "import re\ndef is_palindrome_sentence(s: str) -> bool:\n    # Remove non-word characters and convert to lowercase\n    s = re.sub('[\\W_]+', ' ', s.lower())\n    # Split the sentence into words\n    words = s.split()\n    # Check if the list of words reads the same forwards and backwards\n    return words == words[::-1]",
    "tests": [
        "assert is_palindrome_sentence('A man, a plan, a canal, Panama') == True",
        "assert is_palindrome_sentence('racecar') == False",
        "assert is_palindrome_sentence('Madam, in Eden, I\\\\\\'m Adam.') == True",
        "assert is_palindrome_sentence('Hello World!') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}