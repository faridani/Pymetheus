{
    "title": "'Anagram Detector (Hard)'",
    "description": "Given two strings, determine if they are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of another word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef are_anagrams(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1` and `str2` (str): Two strings containing only lowercase letters.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def are_anagrams(str1: str, str2: str) -> bool:\n    # Make sure both strings have the same length\n    if len(str1) != len(str2):\n        return False\n    # Count the frequency of each letter in the first string\n    freq = Counter(str1)\n    # Decrease the count for each letter in the second string\n    for char in str2:\n        if char in freq:\n            freq[char] -= 1\n        else:\n            return False\n    # If all counts are zero, the strings are anagrams\n    return all(freq.values()) == 0",
    "tests": [
        "assert are_anagrams('listen', 'silent') == True",
        "assert are_anagrams('hello', 'world') == False",
        "assert are_anagrams('civic', 'clive') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}