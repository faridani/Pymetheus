{
    "title": "Hard: Longest Common Subsequence",
    "description": "Given two strings, find the length of their longest common subsequence. A subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.\n#### Function Signature\n```python\ndef longest_common_subsequence(text1: str, text2: str) -> int:\n```\n\n#### Input\n- `text1` (str): The first string.\n- `text2` (str): The second string.\n\n#### Output\n- Returns the length of the longest common subsequence of `text1` and `text2`. ",
    "code": "def longest_common_subsequence(text1: str, text2: str) -> int:\n    m = len(text1)\n    n = len(text2)\n    dp = [[0 for _ in range(n + 1)] for _ in range(m + 1)]\n\n    for i in range(1, m + 1):\n        for j in range(1, n + 1):\n            if text1[i - 1] == text2[j - 1]:\n                dp[i][j] = dp[i - 1][j - 1] + 1\n            else:\n                dp[i][j] = max(dp[i - 1][j], dp[i][j - 1])\n\n    return dp[m][n]",
    "tests": [
        "assert longest_common_subsequence('abcde', 'ace') == 3",
        "assert longest_common_subsequence('abc', 'def') == 0",
        "assert longest_common_subsequence('fish', 'fosh') == 3"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}