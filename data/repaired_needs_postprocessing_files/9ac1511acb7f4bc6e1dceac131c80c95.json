{
    "title": "Medium - Array Rotation",
    "description": "You are given an array of integers and a number 'k'. Rotate the array to the right by 'k' steps. For example, if the array is [1, 2, 3, 4, 5] and k = 2, the rotated array should be [4, 5, 1, 2, 3].\n\n#### Function Signature\n```python\ndef rotate_array(nums: list[int], k: int) -> None:\n```.\n\n#### Input\n- `nums` (list[int]): A list of integers.\n- `k` (int): The number of steps to rotate the array to the right.\n\n#### Output\n- Modify the input array in place. Do not return anything.",
    "code": "def rotate_array(nums: list[int], k: int) -> None:\n    n = len(nums)\n    k %= n\n    nums[:] = nums[-k:] + nums[:-k]",
    "tests": [
        "nums = [1, 2, 3, 4, 5]; rotate_array(nums, 2); assert nums == [4, 5, 1, 2, 3]",
        "nums = [1, 2]; rotate_array(nums, 5); assert nums == [2, 1]",
        "nums = [-1, -100, 3, 99]; rotate_array(nums, 2); assert nums == [3, 99, -1, -100]"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}