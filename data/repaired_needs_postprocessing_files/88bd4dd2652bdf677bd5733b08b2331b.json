{
    "title": "Prime Factorization Calculator (Hard)",
    "description": "Write a function `prime_factors` that calculates the prime factors of a given number. The function should return a list of prime numbers that are multiples of the input number.\n\n#### Function Signature\n```python\ndef prime_factors(n: int) -> List[int]:\n```\n\n#### Input\n- `n` (int): A positive integer greater than 1.\n\n#### Output\n- Returns a list of prime numbers that are multiples of the input number, sorted in ascending order.\n",
    "code": "def prime_factors(n: int) -> List[int]:\n    # Edge case for 1\n    if n == 1:\n        return []\n    # Initialize list to store prime factors\n    factors = []\n    i = 2\n    while i <= n:\n        # Check if i is a factor of n\n        if n % i == 0:\n            # Add i to the list and update n\n            factors.append(i)\n            n //= i\n        else:\n            i += 1\n    return [num for num in factors if is_prime(num)]\ndef is_prime(num: int) -> bool:\n    # Check if a number is prime by testing divisibility from 2 to the square root of the number\n    if num <= 1:\n        return False\n    i = 2\n    while i * i <= num:\n        if num % i == 0:\n            return False\n        i += 1\n    return True",
    "tests": [
        "assert prime_factors(3) == [3]",
        "assert prime_factors(6) == [2, 3]",
        "assert prime_factors(9) == [3, 3]",
        "assert prime_factors(40) == [2, 2, 5]"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}