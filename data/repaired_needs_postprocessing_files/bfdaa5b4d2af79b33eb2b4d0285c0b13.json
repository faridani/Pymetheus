{
    "title": "Maximum Subarray Sum",
    "description": "Given an array of integers, write a function that returns the maximum sum of any subarray within the given array.\n\n#### Function Signature\n```python\ndef max_subarray_sum(arr: list[int)) -> int:\n``` \n\n#### Input\n- `arr` (list[int]): A list of integers.\n\n#### Output\n- Returns the maximum sum of any subarray within the input array.",
    "code": "def max_subarray_sum(arr: list[int]) -> int:\n    if not arr:\n        return 0\n    max_sum = float('-inf')\n    current_sum = 0\n\n    for num in arr:\n        current_sum = max(num, current_sum + num)\n        max_sum = max(max_sum, current_sum)\n\n    return max_sum",
    "tests": [
        "assert max_subarray_sum([-2,1,-3,4,-1,2,1,-5,4]) == 6",
        "assert max_subarray_sum([1]) == 1",
        "assert max_subarray_sum([]) == 0",
        "assert max_subarray_sum([-1,-2,-3,-4,-5]) == -1"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}