{
    "title": "Prime Factorization",
    "description": "Write a function `prime_factors` that takes an integer as input and returns a list of prime numbers that are factors of the given number. For example, the prime factors of 12 are [2, 2, 3].\n\n#### Function Signature\n```python\ndef prime_factors(n: int) -> List[int]:\n```\n\n#### Input\n- `n` (int): A positive integer.\n\n#### Output\n- Returns a list of prime numbers that are factors of the input number, in decreasing order.\n",
    "code": "def prime_factors(n: int) -> List[int]:\n    if n < 2:\n        return []\n    factors = []\n    factor = 2\n    while len(factors) < n:\n        if n % factor == 0:\n            factors.append(factor)\n            n //= factor\n        else:\n            factor += 1\n            if factor > n ** 0.5:\n                break\n    return factors",
    "tests": [
        "assert prime_factors(4) == [2, 2]",
        "assert prime_factors(9) == [3, 3]",
        "assert prime_factors(15) == [3, 5]"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}