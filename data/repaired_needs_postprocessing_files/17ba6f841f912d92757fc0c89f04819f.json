{
    "title": "Prime Palindromes Finder (Hard)",
    "description": "Write a function `find_prime_palindromes` that finds all prime palindromic numbers within the range [1, n].\n\n#### Function Signature\n```python\ndef find_prime_palindromes(n: int) -> list[int]:\n``` \n\n#### Input\n- `n` (int): The upper limit of the range to search for prime palindromic numbers.\n\n#### Output\n- Returns a list of prime palindromic numbers within the given range.",
    "code": "def is_palindrome(n: int) -> bool:\n    return str(n)[::-1] == str(n)\ndef is_prime(n: int) -> bool:\n    if n <= 1: return False\n    for i in range(2, int(n**0.5)+1):\n        if n % i == 0:\n            return False\n    return True\n\ndef find_prime_palindromes(n: int) -> list[int]:\n    palindromes = []\n    for num in range(1, n+1):\n        if is_palindrome(num) and is_prime(num):\n            palindromes.append(num)\n    return palindromes",
    "tests": [
        "assert find_prime_palindromes(10) == [1, 3, 5, 7, 9]",
        "assert find_prime_palindromes(100) == [13, 31, 51, 73, 81, 97]",
        "assert find_prime_palindromes(1000) == [101, 209, 307, 409, 501, 601, 707, 809, 901]"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}