{
    "title": "Number of Islands",
    "description": "Given a 2D binary grid, count the number of islands. An island is a group of contiguous cells that have value 1 (representing land) and are not surrounded by water (value 0). Write a function `count_islands` that takes a 2D list `grid` as input and returns the total number of islands.\n#### Function Signature\n```\ndef count_islands(grid: list[list[int]]) -> int:\n``` \n\n#### Input\n- `grid` (list[list[int]]): A 2D binary grid where 1 represents land and 0 represents water.\n#### Output\n- Returns the total number of islands in the given grid.",
    "code": "import copy\ndef count_islands(grid: list[list[int]]) -> int:\n    if not grid or not grid[0]:\n        return 0\n    def dfs(i, j):\n        if i < 0 or j < 0 or i >= len(grid) or j >= len(grid[0]) or grid[i][j] != 1:\n            return\n        grid[i][j] = -1\n        for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)] :\n            dfs(i + dx, j + dy)\n    count = 0\n    for i in range(len(grid)):\n        for j in range(len(grid[0])):\n            if grid[i][j] == 1:\n                dfs(i, j)\n                count += 1\n    return count",
    "tests": [
        "assert count_islands([[0,0,1,0,0],[0,0,1,0,0],[0,0,1,0,0],[0,0,0,1,1]]) == 1",
        "assert count_islands([[1,1,0,0,0],[1,1,0,0,0],[0,0,0,0,1],[0,0,0,0,1]]) == 1",
        "assert count_islands([[1,1,0,0,0],[1,1,0,0,0],[0,0,0,0,1],[0,0,0,0,1]]) == 3"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}