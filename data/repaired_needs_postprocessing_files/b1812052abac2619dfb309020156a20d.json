{
    "title": "Anagram Detector (Hard)",
    "description": "Write a function `anagram_checker` that checks if two given strings are anagrams of each other. Two words are anagrams of each other if they contain the same letters, regardless of their order.\n\n#### Function Signature\n```python\ndef anagram_checker(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1`, `str2` (str): Two strings that may contain letters and spaces.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\n",
    "code": "def anagram_checker(str1: str, str2: str) -> bool:\n    # Remove any spaces from the strings\n    str1 = ''.join(char for char in str1 if char not in ' ').lower()\n    str2 = ''.join(char for char in str2 if char not in ' ').lower()\n    \n    # If the two strings are of different lengths, they cannot be anagrams.\n    if len(str1) != len(str2):\n        return False\n    \n    # Create a frequency table for each string\n    freq_table1 = {char: str1.count(char) for char in sorted(set(str1))}\n    freq_table2 = {char: str2.count(char) for char in sorted(set(str2))}\n    \n    # Compare the frequency tables\n    for key, value in freq_table1.items():\n        if key not in freq_table2 or freq_table2[key] != value:\n            return False\n    \n    # If no discrepancies were found, the strings are anagrams\n    return True",
    "tests": [
        "assert anagram_checker(\"listen\", \"silent\") == True",
        "assert anagram_checker(\"hello\", \"world\") == False",
        "assert anagram_checker(\"mooc.lihm\", \"computermail\") == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}