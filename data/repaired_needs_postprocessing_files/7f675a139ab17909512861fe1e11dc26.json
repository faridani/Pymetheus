{
    "title": "Hard -  Matrix Rotation",
    "description": "You are given a square matrix of size `n x n` filled with integers. Write a function `rotate_matrix(matrix)` that rotates the matrix 90 degrees clockwise in-place.\r\n\r\n#### Function Signature\r\n```python\r\ndef rotate_matrix(matrix: list[list[int]]) -> None:\r``` \r\r\n#### Input\r\n- `matrix` (list[list[int]]): A square matrix represented as a list of lists, where each inner list represents a row of the matrix.\r\r\n#### Output\r\n- Rotates the input matrix 90 degrees clockwise in-place. The function should modify the original matrix directly and not return anything.",
    "code": "def rotate_matrix(matrix: list[list[int]]) -> None:\r    n = len(matrix)\r    for i in range(n // 2):\r        for j in range(i, n - i - 1):\r            temp = matrix[i][j]\r            matrix[i][j] = matrix[n - 1 - j][i]\r            matrix[n - 1 - j][i] = matrix[n - 1 - i][n - 1 - j]\r            matrix[n - 1 - i][n - 1 - j] = matrix[j][n - 1 - i]\r            matrix[j][n - 1 - i] = temp\r",
    "tests": [
        "matrix = [[1,2,3],[4,5,6],[7,8,9]]\rrotate_matrix(matrix)\rassert matrix == [[7,4,1],[8,5,2],[9,6,3]] \r",
        "matrix = [[1,2],[3,4]]\rrotate_matrix(matrix)\rassert matrix == [[3,1],[4,2]]"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}