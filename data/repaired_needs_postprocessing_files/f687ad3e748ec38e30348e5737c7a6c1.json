{
    "title": "Anagram Detector (Hard)",
    "description": "Given two strings, write a function that checks if they are anagrams of each other. An anagram is a word or phrase that contains the same letters as another word or phrase but in a different order.\n\n#### Function Signature\n```python\ndef are_anagrams(str1: str, str2: str) -> bool:\n``` \n\n#### Input\n- `str1`, `str2` (str): Two strings that may contain only letters from the English alphabet.\n\n#### Output\n- Returns `True` if both strings are anagrams of each other, `False` otherwise.\n",
    "code": "def are_anagrams(str1: str, str2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    str1 = ''.join(sorted(str1.lower().replace(' ', '')))\n    str2 = ''.join(sorted(str2.lower().replace(' ', '')))\n    \n    # Check if the sorted strings have the same length and are equal\n    return len(str1) == len(str2) and str1 == str2",
    "tests": [
        "assert are_anagrams('listen', 'silent') == True",
        "assert are_anagrams('hello', 'world') == False",
        "assert are_anagrams('anagram', 'nag a ram') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}