{
    "title": "Anagram Detection (Hard)",
    "description": "An anagram is a word or phrase formed by rearranging the letters of another word or phrase, typically using all the original letters exactly once. Write a function `is_anagram` that checks if two given strings are anagrams.\n\n#### Function Signature\n```python\ndef is_anagram(str1: str, str2: str) -> bool:\n``` \n\n#### Input\n- `str1` (str): A string containing only letters (lowercase or uppercase).\n- `str2` (str): Another string containing only letters (lowercase or uppercase).\n\n#### Output\n- Returns `True` if the two input strings are anagrams, `False` otherwise.\n",
    "code": "def is_anagram(str1: str, str2: str) -> bool:\n    # Ensure both strings contain only letters and have the same length\n    if len(set(str1)) != len(set(str2)): return False\n    sorted_str1 = sorted(list(str1))\n    sorted_str2 = sorted(list(str2))\n    # Check if both strings can be obtained from each other by rearranging letters\n    return sorted_str1 == sorted_str2",
    "tests": [
        "assert is_anagram('listen', 'silent') == True",
        "assert is_anagram('hello', 'olleh') == True",
        "assert is_anagram('world', 'dirow') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}