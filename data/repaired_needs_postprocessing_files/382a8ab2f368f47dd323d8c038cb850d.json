{
    "title": "Anagram Checker (Hard)",
    "description": "An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Write a function `anagram_check` that checks if two given strings are anagrams of each other.\n\n#### Function Signature\n```python\ndef anagram_check(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1`, `str2` (str): Two strings that may contain letters, numbers and punctuation.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "import string\ndef anagram_check(str1: str, str2: str) -> bool:\n    # Remove non-alphanumeric characters and convert to lowercase\n    str1 = ''.join([char for char in str1 if char in string.ascii_letters + string.digits]).lower()\n    str2 = ''.join([char for char in str2 if char in string.ascii_letters + string.digits]).lower()\n    # Check if the sorted letters of both strings are the same\n    return sorted(str1) == sorted(str2)",
    "tests": [
        "assert anagram_check('listen', 'silent') == True",
        "assert anagram_check('hello', 'world') == False",
        "assert anagram_check('A man, a plan, a canal: Panama', 'Panama cannel for a man a plan, a canal: Panama') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}