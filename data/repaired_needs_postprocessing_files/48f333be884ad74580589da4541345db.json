{
    "title": "Goldbach's Conjecture Solver (Hard)",
    "description": "Goldbach's conjecture states that every even integer greater than 2 can be expressed as the sum of two primes. Write a function `is_prime_sum` that checks if an input number is the sum of two primes.\n\n#### Function Signature\n```python\ndef is_prime_sum(n: int) -> bool:\n```\n\n#### Input\n- `n` (int): A positive integer.\n\n#### Output\n- Returns `True` if the input number can be expressed as the sum of two primes, `False` otherwise.",
    "code": "def is_prime(num: int) -> bool:\n    # Check for edge cases (1 and even numbers are not primes)\n    if num < 2 or (num % 2 == 0 and num > 2):\n        return False\n    for i in range(3, int(num**0.5)+1, 2):\n        if num % i == 0:\n            return False\n    # If no factors were found up to the square root, the number is prime\n    return True\n\ndef is_prime_sum(n: int) -> bool:\n    for a in range(2, n):\n        b = n - a\n        if b < a or not is_prime(a) or not is_prime(b):\n            continue\n        return True",
    "tests": [
        "assert is_prime_sum(4) == True",
        "assert is_prime_sum(6) == False",
        "assert is_prime_sum(12) == True",
        "assert is_prime_sum(50) == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}