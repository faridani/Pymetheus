{
    "title": "List Reverse Function (Hard)",
    "description": "Write a function `reverse_list` that takes a list as an argument and returns the reversed version of the list. The input list can contain integers, strings, or other nested lists.\n\n#### Function Signature\n```python\ndef reverse_list(lst: list) -> list:\n```\n\n#### Input\n- `lst` (list): A list that may contain any data types.\n\n#### Output\n- Returns the reversed version of the input list.",
    "code": "def reverse_list(lst: list) -> list:\n    # If the list is empty, return an empty list\n    if not lst: \n        return []\n    # Recursively reverse the rest of the list and concatenate it with the first element of the original list\n    else: \n        return reverse_list(lst[1:]) + [lst[0]]",
    "tests": [
        "assert reverse_list([1, 2, 3, 4]) == [4, 3, 2, 1]",
        "assert reverse_list(['a', 'b', 'c']) == ['c', 'b', 'a']",
        "assert reverse_list([[1, 2], [3, 4]]) == [[4, 3], [2, 1]]"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}