{
    "title": "Anagram Detector (Hard)",
    "description": "Write a function `anagram_check` that determines if two given strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of another, typically with all the original letters in the same alphabet and only one unique representation of each letter.\n\n#### Function Signature\n```python\ndef anagram_check(str1: str, str2: str) -> bool:\n``` \n\n#### Input\n- `str1` (str): A string containing lowercase letters and possibly spaces, punctuation or digits.\n- `str2` (str): Another string containing lowercase letters and possibly spaces, punctuation or digits.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "import collections\ndef anagram_check(str1: str, str2: str) -> bool:\n    # Remove non-alphabetic characters and convert to lowercase\n    str1 = ''.join(char for char in str1 if char.isalpha()).lower()\n    str2 = ''.join(char for char in str2 if char.isalpha()).lower()\n    \n    # Count the frequency of each character in both strings\n    freq1 = collections.Counter(str1)\n    freq2 = collections.Counter(str2)\n    \n    # Check if the frequencies are equal for all characters\n    return freq1 == freq2",
    "tests": [
        "assert anagram_check(\"listen\", \"silent\") == True",
        "assert anagram_check(\"apple\", \"pear\") == False",
        "assert anagram_check(\"Melon Salad\", \"Lemon SALad\") == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}