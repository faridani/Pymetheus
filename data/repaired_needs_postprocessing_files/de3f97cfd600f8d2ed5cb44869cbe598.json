{
    "title": "Recursive Fibonacci Sequence (Hard)",
    "description": "The Fibonacci sequence is a series of numbers in which each number is the sum of the two preceding ones, usually starting with 0 and 1. Write a recursive function `fibonacci` that calculates the nth number in the Fibonacci sequence.\n#### Function Signature\n```python\ndef fibonacci(n: int) -> int:\n```\n\n#### Input\n- `n` (int): The position of the number to find in the Fibonacci sequence starting from 0.\n#### Output\n- Returns the nth number in the Fibonacci sequence.\n",
    "code": "def fibonacci(n: int) -> int:\n    if n <= 1: # Base case, 0 and 1 are the first two numbers in the sequence\n        return n\n    else:\n        return fibonacci(n - 1) + fibonacci(n - 2)",
    "tests": [
        "assert fibonacci(0) == 0",
        "assert fibonacci(1) == 1",
        "assert fibonacci(2) == 1",
        "assert fibonacci(3) == 2",
        "assert fibonacci(4) == 3",
        "assert fibonacci(5) == 5",
        "assert fibonacci(6) == 8",
        "assert fibonacci(10) == 55"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}