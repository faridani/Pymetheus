{
    "title": "Medium: Sum of Pairs",
    "description": "Given an array of integers and a target number, find all unique pairs in the array that add up to the target. Write a function `sum_of_pairs` that returns these pairs.\n\n#### Function Signature\n```python\ndef sum_of_pairs(numbers: List[int], target: int) -> Set[Tuple[int, int]]:\n```\n\n#### Input\n- `numbers` (List[int]): A list of integers.\n- `target` (int): An integer representing the target sum.\n\n#### Output\n- Returns a set of unique pairs of numbers from the input array that add up to the target sum. If no such pairs exist, return an empty set.",
    "code": "from typing import List, Set, Tuple\ndef sum_of_pairs(numbers: List[int], target: int) -> Set[Tuple[int, int]]:\n    pairs = set()\n    seen = set()\n    for num in numbers:\n        complement = target - num\n        if complement in seen:\n            pairs.add((min(num, complement), max(num, complement)))\n        else:\n            seen.add(num)\n    return pairs",
    "tests": [
        "assert sum_of_pairs([1, 2, 3, 4, 5], 6) == {(1, 5), (2, 4)}",
        "assert sum_of_pairs([0, -1, 1], 0) == {(-1, 1), (0, 0)}",
        "assert sum_of_pairs([1, 2, 3, 4], 10) == set()"
    ],
    "model": "codestral:22b-repaired by Llama 3"
}