{
    "title": "Hard: Zigzag Conversion",
    "description": "The string \"PAYPALISHIRING\" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in your code editor)\n\nP   A   H   N\nA P L S I I G\nY   I   R\nAnd then read line by line: \"PAHNAPLSIIGYIR\"\nWrite the code that will take a string and make this conversion given a number of rows.\n#### Function Signature\n```python\ndef zigzag_conversion(s: str, numRows: int) -> str:\n```\n\n#### Input\n- `s` (str): A string.\n- `numRows` (int): The number of rows in the zigzag pattern.\n\n#### Output\n- Returns a string representing the zigzag conversion of the input string.",
    "code": "def zigzag_conversion(s: str, numRows: int) -> str:\n    if numRows == 1 or numRows >= len(s):\n        return s\n    rows = [\"\" for _ in range(numRows)]\n    row = 0\n    direction = 1  # 1 for down, -1 for up\n    for char in s:\n        rows[row] += char\n        if row == numRows - 1:\n            direction = -1\n        elif row == 0:\n            direction = 1\n        row += direction\n    return \"\".join(rows)",
    "tests": [
        "assert zigzag_conversion(\"PAYPALISHIRING\", 3) == \"PAHNAPLSIIGYIR\"",
        "assert zigzag_conversion(\"PAYPALISHIRING\", 4) == \"PINALSIGYAHRPI\"",
        "assert zigzag_conversion(\"A\", 1) == \"A\""
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}