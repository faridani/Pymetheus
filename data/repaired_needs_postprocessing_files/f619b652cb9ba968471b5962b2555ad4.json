{
    "title": "Anagram Checker (Hard)",
    "description": "Given two strings, check if they are anagrams of each other.\n#### Function Signature\n```python\ndef are_anagrams(s1: str, s2: str) -> bool:\n```\n#### Input\n- `s1` (str): A string containing only lowercase letters and spaces.\n- `s2` (str): A string containing only lowercase letters and spaces.\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\n#### Constraints\n- Both strings have the same length.\n",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    # If the two strings do not have the same length, they cannot be anagrams\n    if len(s1) != len(s2):\n        return False\n    # Create a dictionary to count the frequency of each character in the first string\n    freq_dict = {char: s1.count(char) for char in sorted(set(s1))}\n    # Decrease the count for each character in the second string and check if we reach 0\n    for char in sorted(set(s2)):\n        if freq_dict[char] == 0:\n            return False\n        freq_dict[char] -= 1\n    # If we have checked all characters without finding a mismatch, the strings are anagrams\n    return True",
    "tests": [
        "assert are_anagrams(\"listen\", \"silent\") == True",
        "assert are_anagrams(\"women\", \"nomew\") == True",
        "assert are_anagrams(\"hello\", \"world\") == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}