{
    "title": "Easy: Evenly Distributed Integers",
    "description": "Write a function `evenly_distributed` that takes an integer `n` as input and returns the smallest positive integer `k` such that all integers from 1 to `n` can be distributed evenly among `k` bins.\n\n#### Function Signature\n```python\ndef evenly_distributed(n: int) -> int:\n``` \n\n#### Input\n- `n` (int): The number of integers to distribute.\n\n#### Output\n- Returns the smallest positive integer `k` such that all integers from 1 to `n` can be distributed evenly among `k` bins.\n",
    "code": "def evenly_distributed(n: int) -> int:\n    # Calculate the greatest common divisor of all numbers from 1 to n\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n    g = n\n    for i in range(2, n+1): \n        g = gcd(g, i)\n    # The smallest positive integer k is the product of all primes up to n\n    def is_prime(p):\n        if p < 2:\n            return False\n        for i in range(2, int(p**0.5) + 1): \n            if p % i == 0:\n                return False\n        return True\n    k = 1\n    for i in range(2, n+1): \n        if is_prime(i):\n            k *= i\n    return k",
    "tests": [
        "assert evenly_distributed(10) == 4",
        "assert evenly_distributed(15) == 15",
        "assert evenly_distributed(20) == 60"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}