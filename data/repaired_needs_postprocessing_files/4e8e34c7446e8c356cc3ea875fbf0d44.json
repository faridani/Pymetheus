{
    "title": "Hard - Minimum Operations to Make Array Increasing",
    "description": "You are given an array of integers `nums`. You can perform the following operation on the array any number of times:\n- Choose two adjacent elements in the array and swap them.\nYour goal is to find the minimum number of operations required to make the array strictly increasing. A strictly increasing array is an array where each element is greater than the previous element.\n\n#### Function Signature\n```python\ndef min_operations(nums: list[int]) -> int:\n```\n\n#### Input\n- `nums` (list[int]): A list of integers.\n\n#### Output\n- Returns the minimum number of operations required to make the array strictly increasing.",
    "code": "def min_operations(nums: list[int]) -> int:\n    n = len(nums)\n    dp = [0] * n\n    for i in range(1, n):\n        dp[i] = dp[i - 1]\n        for j in range(i):\n            if nums[j] < nums[i] and dp[i] > dp[j]:\n                dp[i] = dp[j]\n        dp[i] += 1\n    return dp[-1] - 1",
    "tests": [
        "assert min_operations([1, 2, 3]) == 0",
        "assert min_operations([3, 2, 1]) == 3",
        "assert min_operations([1, 5, 2, 4, 3]) == 1",
        "assert min_operations([1, 3, 2, 5, 4]) == 2"
    ],
    "model": "gemma2:27b-instruct-q5_K_S-repaired by Llama 3"
}