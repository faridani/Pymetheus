{
    "title": "'Anagram Detector (Hard)'",
    "description": "Write a function `anagram_checker(s1: str, s2: str) -> bool` that checks if two given strings are anagrams of each other.\n\n#### Function Signature\n```python\ndef anagram_checker(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1`, `s2` (str): Two strings that may contain letters (in any case) and spaces.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\n\nHint: Anagrams are words or phrases that are formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n",
    "code": "from collections import Counter\ndef anagram_checker(s1: str, s2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    s1 = ''.join(char for char in s1.lower() if char not in ' \\t').replace(' ', '')\n    s2 = ''.join(char for char in s2.lower() if char not in ' \\t').replace(' ', '')\n    # Count the occurrence of each character in each string\n    count1 = Counter(s1)\n    count2 = Counter(s2)\n    \n    # Check if both counts are equal\n    return count1 == count2",
    "tests": [
        "assert anagram_checker(\"listen\", \"silent\") == True",
        "assert anagram_checker(\"python\", \"typhon\") == False",
        "assert anagram_checker(\"Stars, Are They Bright?\", \"Rats, Was It Smart?\") == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}