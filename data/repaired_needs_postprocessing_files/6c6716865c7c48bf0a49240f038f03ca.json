{
    "title": "Hard -  Circular Linked List Sum",
    "description": "Given a circular linked list, where each node contains an integer value. Your task is to write a function `circular_list_sum` that calculates the sum of all the elements in the list.\n#### Function Signature\n```python\ndef circular_list_sum(head) -> int:\n```\n\n#### Input\n- `head` (ListNode): The head node of the circular linked list.\n#### Output\n- Returns an integer representing the sum of all elements in the circular linked list.\n#### Constraints\n - The list will have at least one node.\n - Node values can be positive or negative integers.",
    "code": "class ListNode:\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = next\n\ndef circular_list_sum(head) -> int:\n    current = head\n    total_sum = 0\n    while True:\n        total_sum += current.val\n        current = current.next\n        if current == head:\n            break\n    return total_sum",
    "tests": [
        "'assert circular_list_sum(ListNode(1, ListNode(2, ListNode(3, ListNode(4, ListNode(5, ListNode(6, ListNode(1))))))))) == 22'",
        "'assert circular_list_sum(ListNode(-1, ListNode(2, ListNode(3)))) == 4'",
        "'assert circular_list_sum(ListNode(10)) == 10'"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}