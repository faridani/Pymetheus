{
    "title": "Easy: Reverse Integer",
    "description": "Given a 32-bit signed integer, reverse digits of an integer. ```python def reverse_integer(x: int) -> int:\n    sign = 1 if x >= 0 else -1\n    x = abs(x)\n    reversed_x = 0\n    while x > 0:\n        digit = x % 10\n        reversed_x = reversed_x * 10 + digit\n        x //= 10\n    reversed_x *= sign\n    if -2**31 <= reversed_x <= 2**31 - 1:\n        return reversed_x\n    else:\n        return 0",
    "code": "def reverse_integer(x: int) -> int:\n    sign = 1 if x >= 0 else -1\n    x = abs(x)\n    reversed_x = 0\n    while x > 0:\n        digit = x % 10\n        reversed_x = reversed_x * 10 + digit\n        x //= 10\n    reversed_x *= sign\n    if -2**31 <= reversed_x <= 2**31 - 1:\n        return reversed_x\n    else:\n        return 0",
    "tests": [
        "assert reverse_integer(123) == 321",
        "assert reverse_integer(-123) == -321",
        "assert reverse_integer(120) == 21",
        "assert reverse_integer(0) == 0",
        "assert reverse_integer(1534236469) == 0"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}