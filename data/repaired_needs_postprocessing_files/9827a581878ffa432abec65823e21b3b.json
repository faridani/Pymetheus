{
    "title": "Anagram Finder (Hard)",
    "description": "Given two strings, check if they are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n#### Function Signature\n```python\ndef are_anagrams(s1: str, s2: str) -> bool:\n```\n#### Input\n- `s1`, `s2` (str): Two strings that may contain letters (uppercase or lowercase), numbers and spaces.\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    # Remove non-alphanumeric characters and convert to lowercase\n    s1 = ''.join(char for char in s1 if char.isalnum()).lower()\n    s2 = ''.join(char for char in s2 if char.isalnum()).lower()\n    # If either string is empty, they cannot be anagrams\n    if len(s1) != len(s2):\n        return False\n    # Sort the characters of both strings and compare\n    return sorted(s1) == sorted(s2)",
    "tests": [
        "assert are_anagrams(\"listen\", \"silent\") == True",
        "assert are_anagrams(\"hello\", \"world\") == False",
        "assert are_anagrams(\"A man, a plan, a canal: Panama\", \"The quick brown fox jumps over the lazy dog\") == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}