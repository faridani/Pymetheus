{
    "title": "'Palindromic Subsequence Checker (Hard)'",
    "description": "In computer science, a subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements. A palindrome subsequence of a string is defined as a subsequence that reads the same backward as forward. Write a function `is_palindromic_subsequence` that checks if a given string has a palindromic subsequence.\n\n#### Function Signature\n```python\ndef is_palindromic_subsequence(s: str) -> bool:\n``` \n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns `True` if the input string has a palindromic subsequence, `False` otherwise.\n",
    "code": "def is_palindromic_subsequence(s: str) -> bool:\n    n = len(s)\n    dp = [[0] * n for _ in range(n)]\n\n    for i in range(n):\n        for j in range(i, -1, -1):\n            if s[i] == s[j]:\n                dp[i][j] = dp[i + 1][j + 1] + 2 if (i + 1) < j else 2\n            else:\n                dp[i][j] = max(dp[i + 1][j], dp[i][j + 1])\n    return any(row[-1] > 1 for row in dp)",
    "tests": [
        "assert is_palindromic_subsequence('bab') == True",
        "assert is_palindromic_subsequence('acaba') == True",
        "assert is_palindromic_subsequence('abcde') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}