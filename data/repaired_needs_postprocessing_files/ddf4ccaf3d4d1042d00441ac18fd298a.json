{
    "title": "Hard:  Shortest Superstring",
    "description": " Given an array of strings, find the shortest string that contains all the given strings as substrings.\n#### Function Signature\n```python\ndef shortest_superstring(strings: list[str]) -> str:\n```\n#### Input\n- `strings` (list[str]): A list of strings.\n#### Output\n- Returns the shortest string that contains all the input strings as substrings. If there are multiple shortest superstrings, return any one of them.\n",
    "code": "def shortest_superstring(strings: list[str]) -> str:\n    from itertools import permutations\n    shortest_super = float('inf')\n    shortest_string = '' \n    for order in permutations(strings):\n        current_string = ''.join(order)\n        valid = True\n        for s in strings:\n            if s not in current_string:\n                valid = False\n                break\n        if valid and len(current_string) < shortest_super:\n            shortest_super = len(current_string)\n            shortest_string = current_string\n    return shortest_string",
    "tests": [
        "assert shortest_superstring(['cat', 'dog', 'bird']) == 'catdogbird'",
        "assert shortest_superstring(['apple', 'pie', 'banana']) == 'applebananapie'",
        "assert shortest_superstring(['hello', 'world']) == 'helloworld'"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}