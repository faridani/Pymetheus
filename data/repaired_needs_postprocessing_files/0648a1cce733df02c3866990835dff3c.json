{
    "title": "Anagram Detector (Hard)",
    "description": "Write a function `are_anagrams(s1: str, s2: str) -> bool` that checks if two given strings are anagrams of each other. Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n#### Function Signature\n```python\ndef are_anagrams(s1: str, s2: str) -> bool:\n``` \n- `s1` (str): A string containing only alphabetic characters.\n- `s2` (str): A string containing only alphabetic characters.\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\n",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    s1 = ''.join(sorted(s1.lower().replace(' ', '')))\n    s2 = ''.join(sorted(s2.lower().replace(' ', '')))\n    # Check if the sorted strings are equal\n    return len(s1) == len(s2) and s1 == s2",
    "tests": [
        "assert are_anagrams(\"listen\", \"silent\") == True",
        "assert are_anagrams(\"hello\", \"world\") == False",
        "assert are_anagrams(\"Moroccan\", \"armock\") == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}