{
    "title": "Fibonacci Series Generator (Hard)",
    "description": "The Fibonacci sequence is a series of numbers where a number is the sum of the two preceding ones, usually starting with 0 and 1. Write a function `fibonacci_series` that generates the Fibonacci series up to a given number. For example, if you call `fibonacci_series(10)`, it should return `[0, 1, 1, 2, 3, 5, 8]`. If the input is invalid (less than or equal to zero), the function should return an empty list.\n#### Function Signature\n```\ndef fibonacci_series(n: int) -> list:\n``` \n\n#### Input\n- `n` (int): The number up to which you want the Fibonacci series generated. If less than or equal to zero, the function returns an empty list.\n\n#### Output\n- A list of integers representing the Fibonacci series up to the given number.\n",
    "code": "def fibonacci_series(n: int) -> list:\n    if n <= 0:\n        return []\n    fib_series = [0, 1]\n    while fib_series[-1] + fib_series[-2] <= n:\n        fib_series.append(fib_series[-1] + fib_series[-2])\n    return fib_series",
    "tests": [
        "assert fibonacci_series(10) == [0, 1, 1, 2, 3, 5, 8]",
        "assert fibonacci_series(-5) == []",
        "assert fibonacci_series(15) == [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]",
        "assert fibonacci_series(0) == []"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}