{
    "title": "Easy: Even Length Slices",
    "description": "Given a list of integers, write a function that takes an integer as input and returns the number of slices (sublists) of even length that can be made from the given list.\n\n#### Function Signature\n```python\ndef count_even_slices(lst: list[int], n: int) -> int:\n```\n\n#### Input\n- `lst` (list[int]): A list of integers.- `n` (int): The desired length of each slice.\n\n#### Output\n- Returns the number of slices that can be made with even length `n`. ",
    "code": "def count_even_slices(lst: list[int], n: int) -> int:\n    return len([lst[i:i+n] for i in range(0, len(lst), n)]) if len(lst) % n == 0 else 0\n",
    "tests": [
        "assert count_even_slices([1,2,3,4,5,6], 2) == 3",
        "assert count_even_slices([1,2,3,4,5,6,7,8], 2) == 4",
        "assert count_even_slices([1,2,3,4,5,6], 3) == 2",
        "assert count_even_slices([], 2) == 0"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}