{
    "title": "Hard: Alien Alphabet Cipher",
    "description": "You intercepted a message from an alien civilization. Their alphabet consists of unique symbols represented by numbers 0-9 and A-Z (total of 36 symbols). They use a simple substitution cipher where each symbol in their language maps to a corresponding letter in the English alphabet.\nYou were able to decipher a few words from previous transmissions, giving you the following mapping:\n* 5 = 'e'\n* D = 't'\n* 1A = 'h'\n* B = 'a'\nWrite a function `decode_alien_message` that takes the ciphered message as input and returns the decoded English message. If a symbol is not in your mapping, replace it with '*'.\n#### Function Signature\n```python\ndef decode_alien_message(ciphered_message: str) -> str:\n``` \n\n#### Input\n- `ciphered_message` (str): A string containing the ciphered message using the alien alphabet.\n#### Output\n- Returns the decoded English message as a string.",
    "code": "def decode_alien_message(ciphered_message: str) -> str:\n    mapping = {'5': 'e', 'D': 't', '1A': 'h', 'B': 'a'}\n    decoded_message = ''\n    for symbol in ciphered_message:\n        if symbol in mapping:\n            decoded_message += mapping[symbol]\n        else:\n            decoded_message += '*'\n    return decoded_message",
    "tests": [
        "assert decode_alien_message('5D1A') == 'the'",
        "assert decode_alien_message('B5tD') == 'ate'",
        "assert decode_alien_message('2C7Z') == '**'"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}