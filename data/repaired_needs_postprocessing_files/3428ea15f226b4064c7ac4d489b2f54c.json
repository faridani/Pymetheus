{
    "title": "Roman Numeral Decoder (Easy)",
    "description": "Write a function `decode_roman` that takes a string containing only Roman numerals as input and returns the integer equivalent of the given Roman numeral.\n\n#### Function Signature\n```python\ndef decode_roman(s: str) -> int:\n``` \n\n#### Input\n- `s` (str): A string containing only valid Roman numerals.\n\n#### Output\n- Returns the integer equivalent of the given Roman numeral as an integer.",
    "code": "def decode_roman(s: str) -> int:\n    roman = {'I': 1, 'V': 5, 'X': 10, 'L': 50, 'C': 100, 'D': 500, 'M': 1000}\n    result, last_num = 0, None\n    for char in s[::-1]:\n        current_num = roman.get(char, 0)\n        if last_num > current_num:\n            result -= current_num\n        else:\n            result += current_num\n        last_num = current_num\n    return result",
    "tests": [
        "assert decode_roman('III') == 3",
        "assert decode_roman('IV') == 4",
        "assert decode_roman('IX') == 9",
        "assert decode_roman('LVIII') == 58",
        "assert decode_roman('MCMXCIV') == 1994"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}