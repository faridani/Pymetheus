{
    "title": "Project Euler Easy: Sum of Fibonacci Numbers up to N",
    "description": "Write a Python function `fibonacci_sum` that returns the sum of all Fibonacci numbers less than or equal to a given positive integer n. Write a Python function `fibonacci_sum(n: int) -> int:`\n\n#### Function Signature\n```python\ndef fibonacci_sum(n: int) -> int:\n```\n\n#### Input\n- `n` (int): A positive integer representing the upper limit of Fibonacci numbers to sum.\n\n#### Output\n- Returns an integer, the sum of all Fibonacci numbers less than or equal to n.\n\nHint: To generate the Fibonacci sequence, start with 0 and 1. Then each subsequent number is the sum of the two previous ones.\n",
    "code": "def fibonacci_sum(n: int) -> int:\n    # Initialize two variables for the current Fibonacci numbers\n    a, b = 0, 1\n    total = 0\n    while a <= n:\n        # Add the current Fibonacci number to the total and update the first number in the sequence\n        total += a\n        a, b = b, a + b\n    return total",
    "tests": [
        "assert fibonacci_sum(1) == 1",
        "assert fibonacci_sum(2) == 2",
        "assert fibonacci_sum(3) == 3",
        "assert fibonacci_sum(4) == 5",
        "assert fibonacci_sum(10) == 55"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}