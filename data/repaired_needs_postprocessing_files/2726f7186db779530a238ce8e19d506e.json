{
    "title": "Maximum Contiguous Subarray Sum",
    "description": "Given an integer array of positive and negative numbers and zeroes, find the maximum sum of a contiguous subarray within the array.\n\n#### Function Signature\n```python\ndef maxSubArray(arr: List[int]) -> int:\n```\n\n#### Input\n- `arr` (List[int]): A list of integers representing an array.\n\n#### Output\n- Returns the maximum sum of a contiguous subarray within the input array.\n",
    "code": "def maxSubArray(arr: List[int]) -> int:\n    # Initialize variables for storing the current and maximum sums\n    current_sum = 0\n    maximum_sum = arr[0]\n\n    # Iterate through the array\n    for num in arr:\n        # Update the current sum if it's positive or zero\n        current_sum = max(num, current_sum + num)\n        # Update the maximum sum if the current sum is greater\n        maximum_sum = max(maximum_sum, current_sum)\n    \n    # Return the maximum sum found\n    return maximum_sum",
    "tests": [
        "assert maxSubArray([1, -2, 3, 4, -5]) == 7",
        "assert maxSubArray([-1, -2, -3, -4, -5]) == 0",
        "assert maxSubArray([1, 7, -5, 9, 0, 3]) == 18",
        "assert maxSubArray([-1, -2, 3, 4, -5]) == 3"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}