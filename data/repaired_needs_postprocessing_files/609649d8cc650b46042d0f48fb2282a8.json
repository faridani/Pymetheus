{
    "title": "Hard: Matrix Rotation",
    "description": "You are given a square matrix of integers. Write a function `rotate_matrix` that rotates the matrix 90 degrees clockwise.\n\n#### Function Signature\n```python\ndef rotate_matrix(matrix):\n```\n\n#### Input\nA list of lists representing the square matrix.\n\n#### Output\nA new list of lists representing the rotated matrix. \n\n#### Constraints\nThe input matrix will always be a square matrix (same number of rows and columns).\n",
    "code": "def rotate_matrix(matrix):\n    n = len(matrix)\n    for i in range(n // 2):\n        for j in range(i, n - i - 1):\n            temp = matrix[i][j]\n            matrix[i][j] = matrix[n - 1 - j][i]\n            matrix[n - 1 - j][i] = matrix[n - 1 - i][n - 1 - j]\n            matrix[n - 1 - i][n - 1 - j] = matrix[j][n - 1 - i]\n            matrix[j][n - 1 - i] = temp\n    return matrix",
    "tests": [
        "assert rotate_matrix([[1,2],[3,4]]) == [[3,1],[4,2]]",
        "assert rotate_matrix([[1,2,3],[4,5,6],[7,8,9]]) == [[7,4,1],[8,5,2],[9,6,3]]"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}