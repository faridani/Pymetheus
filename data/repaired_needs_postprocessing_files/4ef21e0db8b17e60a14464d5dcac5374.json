{
    "title": "Anagram Detector (Hard)",
    "description": "Given two strings, write a function `anagram` that checks if they are anagrams of each other. Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef anagram(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1` (str): A string that may contain letters and spaces.\n- `str2` (str): A second string that may contain letters and spaces.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\n",
    "code": "import collections\ndef anagram(str1: str, str2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    str1 = ''.join([char for char in str1 if char not in ' '.upper()]).lower()\n    str2 = ''.join([char for char in str2 if char not in ' '.upper()]).lower()\n    # Count the frequency of each character in both strings\n    freq1 = collections.Counter(str1)\n    freq2 = collections.Counter(str2)\n    # Check if the two frequency dictionaries are equal\n    return freq1 == freq2",
    "tests": [
        "assert anagram('Listen', 'Silent') == True",
        "assert anagram('Hello', 'World') == False",
        "assert anagram('Eleven plus two', 'Twelve plus one') == True",
        "assert anagram('  A man, a plan, a canal: Panama ', 'amanaP lacinip tacan palman a man') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}