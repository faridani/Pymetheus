{
    "title": "Coin Change",
    "description": "A vending machine has a number of different coin denominations. Write a function `coin_change` that calculates the number of ways to make change for a given amount with these coins.\n\n#### Function Signature\n```python\ndef coin_change(coins: list[int], amount: int) -> int:\n```\n\n#### Input\n- `coins` (list[int]): A list of different coin denominations.\n- `amount` (int): The amount of change that needs to be made.\n\n#### Output\n- Returns the number of ways to make change for the given amount with the provided coins.",
    "code": "from functools import lru_cache\ndef coin_change(coins: list[int], amount: int) -> int:\n    @lru_cache(None)\n    def dp(n: int) -> int:\n        if n < 0:\n            return 0\n        elif n == 0:\n            return 1\n        else:\n            total = 0\n            for coin in coins:\n                total += dp(n - coin)\n            return total\n    return dp(amount)",
    "tests": [
        "assert coin_change([1,2], 4) == 3",
        "assert coin_change([1,2,5], 11) == 188",
        "assert coin_change([25], 100) == 4"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}