{
    "title": "Hard - Count Substrings with Unique Characters",
    "description": "Given a string, count the number of substrings that contain only unique characters.\n\n#### Function Signature\n```python\ndef count_unique_substrings(s: str) -> int:\n```\n\n#### Input\n- `s` (str): The input string consisting of lowercase letters.\n\n#### Output\n- Returns the number of substrings in `s` that contain only unique characters.\n\n#### Constraints\n - 1 <= len(s) <= 10^5",
    "code": "def count_unique_substrings(s: str) -> int:\n    count = 0  # Initialize the substring count\n    for i in range(len(s)):\n        seen = set()  # Keep track of unique characters in the current substring\n        for j in range(i, len(s)):\n            if s[j] not in seen:\n                seen.add(s[j])  # Add character to seen set if it's unique\n                count += 1  # Increment count if substring has only unique characters\n            else:\n                break  # Stop if a duplicate character is encountered\n    return count",
    "tests": [
        "assert count_unique_substrings(\"abcabcbb\") == 10",
        "assert count_unique_substrings(\"bbbbb\") == 5",
        "assert count_unique_substrings(\"pwwkew\") == 9"
    ],
    "model": "gemma2:27b-instruct-q5_K_S-repaired by Llama 3"
}