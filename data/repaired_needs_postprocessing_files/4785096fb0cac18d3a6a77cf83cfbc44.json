{
    "title": "Anagram Checker (Hard)",
    "description": "Given two strings, write a function `anagram(str1, str2)` that checks if the two strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n#### Function Signature\n```python\ndef anagram(str1: str, str2: str) -> bool:\n``` \n- `str1` (str): A string that may contain letters, numbers and spaces.\n- `str2` (str): Another string that may contain letters, numbers and spaces.\n#### Output\n- Returns `True` if the two strings are anagrams of each other, `False` otherwise.\n",
    "code": "import collections\ndef anagram(str1: str, str2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    str1 = ''.join(c.lower() for c in str1 if c.isalnum()).replace(' ', '')\n    str2 = ''.join(c.lower() for c in str2 if c.isalnum()).replace(' ', '')\n    # Check if the frequencies of characters in both strings match\n    return collections.Counter(str1) == collections.Counter(str2)",
    "tests": [
        "assert anagram(\"listen\", \"silent\") == True",
        "assert anagram(\"hello\", \"world\") == False",
        "assert anagram(\"Python\", \"thopuY\") == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}