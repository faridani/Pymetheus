{
    "title": "'Palindromic Substrings Finder (Easy)'",
    "description": "Given a string, find all the non-empty substrings that are palindromes. A palindrome is a word, phrase, number, or other sequence of characters that reads the same forward and backward (ignoring spaces, punctuation, and capitalization).\n\n#### Function Signature\n```python\ndef find_palindromes(s: str) -> List[str]:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns a list of all the non-empty palindromic substrings found in the input string.",
    "code": "def find_palindromes(s: str) -> List[str]:\n    s = s.lower()\n    result = []\n    for i in range(len(s)):\n        for j in range(i, len(s)):\n            substring = s[i:j+1]\n            if substring and substring == substring[::-1] and not substring in result:\n                result.append(substring)\n    return result",
    "tests": [
        "assert find_palindromes(\"abba\") == [\"abba\"]",
        "assert find_palindromes(\"racecar\") == [\"racecar\", \"ace\"]",
        "assert find_palindromes(\"hello world\") == [\"lo\"]"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}