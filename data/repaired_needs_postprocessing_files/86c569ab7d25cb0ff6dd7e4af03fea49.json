{
    "title": "Efficient Matrix Transpose",
    "description": "A matrix transpose is an operation that flips the elements of a matrix, i.e., it changes rows into columns and vice versa. Write a function `matrix_transpose` that takes a 2D list (matrix) as input and returns its transpose.\n\n#### Function Signature\n```python\ndef matrix_transpose(matrix: list[list[int]]) -> list[list[int]]:\n``` \n\n#### Input\n- `matrix` (list[list[int]]): A 2D list of integers representing a matrix.\n\n#### Output\n- Returns the transpose of the input matrix, also as a 2D list of integers.",
    "code": "from typing import List\ndef matrix_transpose(matrix: List[List[int]]) -> List[List[int]]:\n    # Initialize an empty matrix to store the transpose\n    transpose = [[0 for _ in range(len(matrix))] for _ in range(len(matrix[0]))]\n    for i, row in enumerate(matrix):\n        for j, val in enumerate(row):\n            transpose[j][i] = val\n    return transpose",
    "tests": [
        "assert matrix_transpose([[1, 2], [3, 4]]) == [[1, 3], [2, 4]]",
        "assert matrix_transpose([[1, 0, 0], [0, 1, 0], [0, 0, 1]]) == [[1, 0, 0], [1, 1, 0], [1, 0, 1]]"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}