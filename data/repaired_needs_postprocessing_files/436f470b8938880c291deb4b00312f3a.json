{
    "title": "Anagram Detection (Hard)",
    "description": "An anagram is a word or phrase that consists of the same letters as another word or phrase, but arranged differently. Write a function `is_anagram` that checks if two given strings are anagrams of each other.\n\n#### Function Signature\n```python\ndef is_anagram(str1: str, str2: str) -> bool:\n``` \n\n#### Input\n- `str1` (str): A string containing only lowercase letters.\n- `str2` (str): Another string containing only lowercase letters.\n\n#### Output\n- Returns `True` if the two strings are anagrams of each other, `False` otherwise.\n\n#### Constraints and Hints\n- The function should ignore spaces, punctuation, and capitalization before comparing the strings. For example, both 'Hello World' and 'hello world' would be considered the same string for comparison purposes.\n",
    "code": "def is_anagram(str1: str, str2: str) -> bool:\n    # Remove non-alphabetic characters\n    str1 = ''.join(char for char in str1 if char.isalpha())\n    str2 = ''.join(char for char in str2 if char.isalpha())\n    # Sort the letters in each string and compare them\n    return sorted(str1) == sorted(str2)",
    "tests": [
        "assert is_anagram('listen', 'silent') == True",
        "assert is_anagram('welcome', 'mellowce') == False",
        "assert is_anagram('Tact Coa', 'cat') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}