{
    "title": "'Is it an Anagram?' (Easy)",
    "description": "An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Write a function `is_anagram` that checks if two given strings are anagrams of each other.\n\n#### Function Signature\n```python\ndef is_anagram(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1` (str): A string that may contain letters and spaces.\n- `s2` (str): Another string that may contain the same letters as `s1`, in any order and with any number of spaces.\n\n#### Output\n- Returns `True` if both strings are anagrams of each other, `False` otherwise.\n",
    "code": "def is_anagram(s1: str, s2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    s1 = ''.join([char for char in s1 if char.isalpha()]).lower()\n    s2 = ''.join([char for char in s2 if char.isalpha()]).lower()\n    \n    # If the lengths of the strings are not equal, they cannot be anagrams.\n    if len(s1) != len(s2):\n        return False\n    \n    # Sort the letters in each string and compare them\n    return sorted(s1) == sorted(s2)\n",
    "tests": [
        "assert is_anagram('Listen', 'Silent') == True",
        "assert is_anagram('Hello', 'world') == False",
        "assert is_anagram('A man, a plan, a canal: Panama', 'Plan, a canal: PanamanA, a man') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}