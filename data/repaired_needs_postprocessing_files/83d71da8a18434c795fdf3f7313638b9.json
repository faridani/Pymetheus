{
    "title": "Hard: Longest Substring Without Repeating Characters",
    "description": "Given a string `s`, find the length of the longest substring without repeating characters.\n\n#### Function Signature\n```python\ndef length_of_longest_substring(s: str) -> int:\n```\n\n#### Input\n- `s` (str): A string containing letters.\n\n#### Output\n- Returns the length of the longest substring without repeating characters.\n\n#### Constraints\n- 0 <= len(s) <= 5 * 10**4\n- `s` consists of English letters.",
    "code": "def length_of_longest_substring(s: str) -> int:\n    char_set = set()\n    max_length = 0\n    start = 0\n    for end in range(len(s)):\n        while s[end] in char_set:\n            char_set.remove(s[start])\n            start += 1\n        char_set.add(s[end])\n        max_length = max(max_length, end - start + 1)\n    return max_length",
    "tests": [
        "assert length_of_longest_substring(\"abcabcbb\") == 3",
        "assert length_of_longest_substring(\"bbbb\") == 1",
        "assert length_of_longest_substring(\"pwwkew\") == 3",
        "assert length_of_longest_substring(\"\") == 0"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}