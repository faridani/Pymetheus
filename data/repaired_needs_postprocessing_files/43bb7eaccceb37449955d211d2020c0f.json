{
    "title": "Palindromic Substrings Finder (Hard)",
    "description": "Given a string, find all the palindromic substrings within it. A palindromic substring is a part of the given string that reads the same backwards as forwards. This problem requires you to use dynamic programming.\n\n#### Function Signature\n```python\ndef find_palindromes(s: str) -> List[str]:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns a list of all palindromic substrings found in the given input string.",
    "code": "def find_palindromes(s: str) -> List[str]:\n    # Initialize an empty list to store palindromes\n    palindromes = []\n    n = len(s)\n    \n    # Create a boolean matrix dp of size (2 * n + 1) x (2 * n + 1)\n    dp = [[False] * (2 * n + 1) for _ in range(2 * n + 1)]\n    \n    # Iterate through the string from left to right and top to bottom, setting the values in dp matrix.\n    for i in range(n):\n        for j in range(min(i, n - i), n + 1):\n            if i == 0 or j == 0:\n                # Base case: single character is a palindrome\n                dp[i][j] = True\n            elif s[i] != s[j]:\n                # If characters don't match, the substring is not a palindrome\n                dp[i][j] = False\n            else:\n                # If characters match, check if the middle part (dp[k][k + 1]) is also a palindrome where k = (i + j) // 2.\n                k = (i + j) // 2\n                dp[i][j] = dp[k][k + 1]\n            # If the current substring is a palindrome, add it to the list\n            if dp[i][j]:\n                start = max(0, i - j + 1)  # Make sure start index is always greater than or equal to 0\n                end = min(i + 1, n)\n                palindromes.append(s[start:end])\n    return palindromes",
    "tests": [
        "assert find_palindromes('racecar') == ['racecar', 'cc', 'ee', 'rr', 'ccc', 'r']",
        "assert find_palindromes('babad') == ['bab', 'aba', 'bad', 'bb']"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}