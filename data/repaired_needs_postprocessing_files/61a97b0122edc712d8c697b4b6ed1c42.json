{
    "title": "Anagram Detector",
    "description": "Write a function `has_anagram` that checks if two input strings have at least one anagram in common. An anagram is a word or phrase formed by rearranging the letters of another word or phrase, typically using all the original letters exactly once. For example, 'listen' and 'silent' are anagrams of each other.\n#### Function Signature\n```python\ndef has_anagram(s1: str, s2: str) -> bool:\n```\n#### Input\n- `s1` (str): The first input string.\n- `s2` (str): The second input string.\n#### Output\n- Returns `True` if the two strings have at least one anagram in common, `False` otherwise.",
    "code": "import string\n\ndef has_anagram(s1: str, s2: str) -> bool:\n    # Convert both strings to lowercase\n    s1 = s1.lower()\n    s2 = s2.lower()\n\n    # Remove non-alphanumeric characters from both strings\n    s1 = ''.join(char for char in s1 if char in string.ascii_letters + string.digits)\n    s2 = ''.join(char for char in s2 if char in string.ascii_letters + string.digits)\n\n    # Create sets of letters from both strings\n    set1 = set(s1)\n    set2 = set(s2)\n\n    # Check if the intersection of the two sets is not empty\n    return len(set1.intersection(set2)) > 0",
    "tests": [
        "assert has_anagram('listen', 'silent') == True",
        "assert has_anagram('hello', 'world') == False",
        "assert has_anagram('abcde', 'edcba') == True",
        "assert has_anagram('aabbcc', 'ddeeef') == False"
    ],
    "model": "llama3.1:8b-repaired by Llama 3"
}