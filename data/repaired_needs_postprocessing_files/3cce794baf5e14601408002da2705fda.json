{
    "title": "Medium: Max Sum Subarray of Size K",
    "description": "Given an array of integers, find the maximum sum of a subarray of size K.\n#### Function Signature\n```python\ndef max_sum_subarray(arr: list[int], k: int) -> int:\n```\n\n#### Input\n- `arr` (list[int]): A list of integers.\n- `k` (int): The size of the subarray.\n\n#### Output\n- Returns the maximum sum of a subarray of size K.\n",
    "code": "def max_sum_subarray(arr: list[int], k: int) -> int:\n    n = len(arr)\n    if k > n:\n        return -1  # or any other appropriate default value\n    max_sum = current_sum = sum(arr[:k])\n    for i in range(k, n):\n        current_sum = current_sum - arr[i-k] + arr[i]\n        max_sum = max(max_sum, current_sum)\n    return max_sum",
    "tests": [
        "assert max_sum_subarray([1, 2, 3, 4, 5], 2) == 9",
        "assert max_sum_subarray([-2, -3, 0, -1], 2) == 1",
        "assert max_sum_subarray([-2, 0, 0, 2, 1], 3) == 3",
        "assert max_sum_subarray([1, 2, 3, 4, 5], 6) == -1"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}