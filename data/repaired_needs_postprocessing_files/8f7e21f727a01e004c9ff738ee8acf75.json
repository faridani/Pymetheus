{
    "title": "Hard - Matrix Path Sum",
    "description": "You are given an m x n integer matrix `matrix`. A path in the matrix starts at cell (0, 0) and goes down or right until it reaches the bottom-right cell (m-1, n-1). The sum of a path is the sum of all the numbers along that path. Find the maximum possible sum of a path in the given matrix.\n\n#### Function Signature\n```python\ndef max_path_sum(matrix: list[list[int]]) -> int:\n```\n\n#### Input\n- `matrix` (list[list[int]]): An m x n integer matrix representing the grid.\n\n#### Output\n- Returns the maximum possible sum of a path from top-left to bottom-right in the matrix.",
    "code": "def max_path_sum(matrix: list[list[int]]) -> int:\n    m, n = len(matrix), len(matrix[0])\n    dp = [[0 for _ in range(n)] for _ in range(m)]\n    dp[0][0] = matrix[0][0]\n    for i in range(1, m):\n        dp[i][0] = dp[i-1][0] + matrix[i][0]\n    for j in range(1, n):\n        dp[0][j] = dp[0][j-1] + matrix[0][j]\n    for i in range(1, m):\n        for j in range(1, n):\n            dp[i][j] = max(dp[i-1][j], dp[i][j-1]) + matrix[i][j]\n    return dp[m-1][n-1]",
    "tests": [
        "'assert max_path_sum([[1, 3, 1], [1, 5, 1], [4, 2, 1]]) == 12'",
        "'assert max_path_sum([[1, 2, 3], [4, 5, 6], [7, 8, 9]]) == 29'"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}