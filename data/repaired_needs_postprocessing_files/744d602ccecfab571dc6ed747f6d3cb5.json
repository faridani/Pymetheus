{
    "title": "Hard: Maximum Subarray Product",
    "description": "Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product. Write a function `max_product` that returns this maximum product.\n\n#### Function Signature\n```python\ndef max_product(nums: List[int]) -> int:\n``` \n\n#### Input\n- `nums` (List[int]): An array of integers, where the length of the array is in the range [1, 2 * 10^4]. Each element is within the range [-10, 10].\n\n#### Output\n- Returns an integer representing the maximum product of any contiguous subarray.\n",
    "code": "def max_product(nums: List[int]) -> int:\n    if not nums: return 0\n    res = nums[0]\n    min_prod, max_prod = res, res\n    for num in nums[1:]:\n        temp = max(max_prod * num, min_prod * num, num)\n        min_prod = min(min_prod * num, max_prod * num, num)\n        max_prod = temp\n        res = max(res, max_prod)\n    return res",
    "tests": [
        "assert max_product([2,3,-2,4]) == 6",
        "assert max_product([-2,0,-1]) == 0",
        "assert max_product([-2,3,-4]) == 24"
    ],
    "model": "codestral:22b-repaired by Llama 3"
}