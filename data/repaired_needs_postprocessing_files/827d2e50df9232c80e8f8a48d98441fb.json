{
    "title": "'Anagram Detection (Hard)'",
    "description": "Given two strings, write a function `anagram_checker` that checks if they are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef anagram_checker(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1` (str): A string containing only lowercase alphabetic characters.\n- `str2` (str): A string containing only lowercase alphabetic characters.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def anagram_checker(str1: str, str2: str) -> bool:\n    # Remove spaces and sort the characters in each string\n    sorted_str1 = sorted(list(filter(str.isalpha, str1)))\n    sorted_str2 = sorted(list(filter(str.isalpha, str2)))\n    \n    # Check if the sorted strings are equal\n    return sorted_str1 == sorted_str2",
    "tests": [
        "assert anagram_checker('listen', 'silent') == True",
        "assert anagram_checker('actinium', 'nicotine') == True",
        "assert anagram_checker('hello', 'world') == False",
        "assert anagram_checker('actinic', 'anemic') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}