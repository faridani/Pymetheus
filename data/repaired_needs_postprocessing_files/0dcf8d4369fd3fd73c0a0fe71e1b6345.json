{
    "title": "Balanced Parentheses Checker (Hard)",
    "description": "A balanced parentheses sequence is one where all opening parentheses have a corresponding closing parenthesis. Write a function `is_balanced` that checks if a given string of parentheses is balanced.\n\n#### Function Signature\n```python\ndef is_balanced(s: str) -> bool:\n``` \n\n#### Input\n- `s` (str): A string consisting only of opening ('('), closing (')'), and possibly other characters.\n\n#### Output\n- Returns `True` if the parentheses are balanced, `False` otherwise.",
    "code": "def is_balanced(s: str) -> bool:\n    stack = []\n    for char in s:\n        if char == '(': \n            stack.append(char)\n        elif char == ')':\n            if not stack:\n                return False\n            stack.pop()\n    return len(stack) == 0",
    "tests": [
        "assert is_balanced('())') == False",
        "assert is_balanced('(())') == True",
        "assert is_balanced(')(') == False",
        "assert is_balanced('((()))') == True",
        "assert is_balanced('()()[]{}') == True"
    ],
    "model": "mistral-nemo:latest-repaired by Llama 3"
}