{
    "title": "Anagram Detector (Hard)",
    "description": "Write a function `anagram_checker` that checks if two given strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of another word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef anagram_checker(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1`, `str2` (str): Two strings that may contain letters and spaces.\n\n#### Output\n- Returns `True` if the input strings are anagrams of each other, `False` otherwise.\n",
    "code": "from collections import Counter\ndef anagram_checker(str1: str, str2: str) -> bool:\n    # Count the frequency of each letter in both strings\n    counter1 = Counter(str1.lower())\n    counter2 = Counter(str2.lower())\n    \n    # Check if the counts match for each letter\n    return all([counter1[letter] == counter2[letter] for letter in sorted(set(str1 + str2))])",
    "tests": [
        "assert anagram_checker('listen', 'silent') == True",
        "assert anagram_checker('act', 'cat') == False",
        "assert anagram_checker('python', 'typhon') == False",
        "assert anagram_checker('Madam', 'madam') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}