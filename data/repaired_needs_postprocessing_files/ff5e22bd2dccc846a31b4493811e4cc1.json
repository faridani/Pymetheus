{
    "title": "Palindromic Substring Finder (Hard)",
    "description": "Given a string, find the longest palindromic substring.\n\n#### Function Signature\n```python\ndef find_longest_palindrome(s: str) -> str:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns the longest palindromic substring found in the input string as a string.",
    "code": "def find_longest_palindrome(s: str) -> str:\n    longest = ''\n    for i in range(len(s)):\n        for j in range(i, min(i + len(longest), len(s))):\n            half = (j - i) // 2\n            if len(s[i:j]) <= half:\n                continue\n            if s[i:j] == s[j-half:i-1:-1]:\n                if len(longest) < len(s[i:j]):\n                    longest = s[i:j]\n    return longest",
    "tests": [
        "assert find_longest_palindrome('babad') == 'babab'",
        "assert find_longest_palindrome('cbbdde') == 'bb'",
        "assert find_longest_palindrome('abracadabra') == 'acada'",
        "assert find_longest_palindrome('a') == 'a'"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}