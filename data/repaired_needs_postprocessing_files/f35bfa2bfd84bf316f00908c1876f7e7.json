{
    "title": "Anagram Checker (Hard)",
    "description": "Given two strings, write a function `anagram_checker` that checks if the strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of another word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef anagram_checker(string1: str, string2: str) -> bool:\n```\n\n#### Input\n- `string1` (str): A non-empty string containing only lowercase letters of the alphabet.\n- `string2` (str): Another non-empty string containing only lowercase letters of the alphabet.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def anagram_checker(string1: str, string2: str) -> bool:\n    # Remove any spaces from the strings\n    string1 = string1.replace(' ', '').lower()\n    string2 = string2.replace(' ', '').lower()\n\n    # Sort the characters in each string\n    sorted_string1 = sorted(string1)\n    sorted_string2 = sorted(string2)\n\n    # Check if the sorted strings are equal\n    return sorted_string1 == sorted_string2",
    "tests": [
        "assert anagram_checker('listen', 'silent') == True",
        "assert anagram_checker('apple', 'pleapa') == True",
        "assert anagram_checker('hello', 'world') == False",
        "assert anagram_checker('python', 'typhon') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}