{
    "title": "Maximum Sum of Arithmetic Series (Hard)",
    "description": "An arithmetic series is a sequence of numbers where each term after the first is obtained by adding a fixed constant to the previous term. Write a function `max_sum_arithmetic_series` that takes as input two lists: `numbers` and `increments`. The function should find the maximum sum of any arithmetic series formed using the elements of `numbers` and the increments from `increments`. For example, if `numbers = [1, 2, 3, 4, 5]` and `increments = [1, 2, 3]`, one possible arithmetic series is `[1, 3, 6, 10]` (with increment 2), which has a sum of `20`. Another possibility is the series `[1, 2, 4, 7]` (with increment 1), which also has a sum of `14`. The function should return the maximum sum that can be obtained.\n#### Function Signature\n```python\ndef max_sum_arithmetic_series(numbers: list[int], increments: list[int]) -> int:\n```\n#### Input\n- `numbers` (list[int]): A list of integers representing the terms in an arithmetic series.\n- `increments` (list[int]): A list of integers representing the possible increments for the arithmetic series.\n#### Output\n- Returns the maximum sum that can be obtained from any arithmetic series formed using the elements of `numbers` and the increments from `increments`.",
    "code": "def max_sum_arithmetic_series(numbers: list[int], increments: list[int]) -> int:\n    max_sum = 0\n    for i in range(len(increments)):\n        for j in range(i+1, len(increments)+1):\n            increment = increments[i:j]\n            series_sum = sum([numbers[k]+increment[0]*(j-k-1) for k in range(j)])\n            max_sum = max(max_sum, series_sum)\n    return max_sum\n",
    "tests": [
        "assert max_sum_arithmetic_series([1, 2, 3, 4, 5], [1, 2]) == 20",
        "assert max_sum_arithmetic_series([-1, -2, -3, -4, -5], [-1, -2]) == -10",
        "assert max_sum_arithmetic_series([0, 0, 0, 0, 0], [1, 2]) == 6"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}