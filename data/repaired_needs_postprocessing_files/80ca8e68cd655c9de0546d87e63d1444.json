{
    "title": "Is it an Anagram Checker (Easy)",
    "description": "An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Write a function `is_anagram` that checks if two given strings are anagrams of each other.\n\n#### Function Signature\n```python\ndef is_anagram(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1`, `str2` (str): Two strings that contain only letters (no numbers or special characters). The lengths of the strings may be different.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def is_anagram(str1: str, str2: str) -> bool:\n    # Remove any spaces and convert to lowercase\n    str1 = ''.join(char for char in str1.strip().lower() if char in string.ascii_letters)\n    str2 = ''.join(char for char in str2.strip().lower() if char in string.ascii_letters)\n    # Check if the sorted characters of both strings are the same\n    return sorted(str1) == sorted(str2)",
    "tests": [
        "assert is_anagram('listen', 'silent') == True",
        "assert is_anagram('hello', 'world') == False",
        "assert is_anagram('Stars', 'Rats') == True",
        "assert is_anagram('apple', 'lemon') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}