{
    "title": "Anagram Detection (Hard)",
    "description": "An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef is_anagram(word1: str, word2: str) -> bool:\n```\n\n#### Input\n- `word1` (str): A string containing only lowercase English alphabets.\n- `word2` (str): A second string containing only lowercase English alphabets.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def is_anagram(word1: str, word2: str) -> bool:\n    # Ensure both words have the same length\n    if len(word1) != len(word2):\n        return False\n    # Sort both strings and compare them\n    sorted_word1 = sorted(word1)\n    sorted_word2 = sorted(word2)\n    return sorted_word1 == sorted_word2",
    "tests": [
        "assert is_anagram(\"listen\", \"silent\") == True",
        "assert is_anagram(\"welcome\", \"malone\") == False",
        "assert is_anagram(\"madam\", \"adam\") == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}