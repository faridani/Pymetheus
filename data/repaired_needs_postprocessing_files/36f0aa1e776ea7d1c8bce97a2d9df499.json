{
    "title": "Counting Islands",
    "description": "Given a 2D grid of size `m x n` where each cell contains either a landmass (represented by the number 1) or water (represented by the number 0). Two cells are considered adjacent if they share an edge (horizontally, vertically, or diagonally). Write a function that counts the number of distinct islands in the grid. \n\n#### Function Signature\n```python\ndef count_islands(grid: list[list[int]]) -> int:\n``` \n\n#### Input\n- `grid` (list[list[int]]): A 2D grid where each cell contains either a landmass (1) or water (0).\n\n#### Output\n- Returns the number of distinct islands in the grid.",
    "code": "from collections import deque\ndef count_islands(grid: list[list[int]]) -> int:\n    if not grid:\n        return 0\n    m, n = len(grid), len(grid[0])\n    def dfs(r, c):\n        if r < 0 or c < 0 or r >= m or c >= n or grid[r][c] == 0:\n            return\n        grid[r][c] = 0\n        for dr, dc in [(1, 0), (-1, 0), (0, 1), (0, -1), (1, 1), (-1, -1), (1, -1), (-1, 1)]:\n            dfs(r + dr, c + dc)\n    count = 0\n    for i in range(m):\n        for j in range(n):\n            if grid[i][j] == 1:\n                dfs(i, j)\n                count += 1\n    return count",
    "tests": [
        "assert count_islands([[0,0,1,0,0],[1,0,0,0,0],[0,1,1,0,0],[0,0,0,1,1]]) == 4",
        "assert count_islands([[0,0,0,0,0],[0,1,1,0,0],[0,0,0,0,0],[0,0,0,1,1]]) == 3",
        "assert count_islands([]) == 0"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}