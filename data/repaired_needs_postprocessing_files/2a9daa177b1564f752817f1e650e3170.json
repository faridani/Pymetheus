{
    "title": "Anagram Detector (Hard)",
    "description": "An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Write a function `anagram_checker` that checks if two given strings are anagrams of each other.\n\n#### Function Signature\n```python\ndef anagram_checker(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1` (str): A string that may contain letters in any case and spaces.\n- `str2` (str): Another string that may contain letters in any case and spaces.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "import collections\ndef anagram_checker(str1: str, str2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    str1 = ''.join(char for char in str1.lower() if char.isalpha()).replace(' ', '')\n    str2 = ''.join(char for char in str2.lower() if char.isalpha()).replace(' ', '')\n    # Count the frequency of each letter in both strings\n    count1 = collections.Counter(str1)\n    count2 = collections.Counter(str2)\n    \n    # Check if the frequencies are the same\n    return count1 == count2",
    "tests": [
        "assert anagram_checker(\"listen\", \"silent\") == True",
        "assert anagram_checker(\"actinic\", \"cinematics\") == True",
        "assert anagram_checker(\"hello\", \"world\") == False",
        "assert anagram_checker(\" a man, a plan, a canal: Panama \", \" panama canal: a man a plan \") == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}