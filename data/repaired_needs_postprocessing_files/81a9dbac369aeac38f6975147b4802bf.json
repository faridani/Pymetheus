{
    "title": "Finding the Minimum Number of Operations to Make a String Palindrome (Hard)",
    "description": "You are given a string consisting of lowercase English letters. Your task is to determine the minimum number of operations required to make the string a palindrome. An operation consists of either deleting or changing a character in the string.\n\n#### Function Signature\n```python\ndef min_operations_to_palindrome(s: str) -> int:\n```\n\n#### Input\n- `s` (str): A string consisting of lowercase English letters.\n\n#### Output\n- Returns the minimum number of operations required to make the input string a palindrome.",
    "code": "def min_operations_to_palindrome(s: str) -> int:\n    n = len(s)\n    dp = [[0 for _ in range(n)] for _ in range(n)]\n    \n    for i in range(n):\n        dp[i][i] = 0\n    \n    for length in range(2, n + 1):\n        for i in range(n - length + 1):\n            j = i + length - 1\n            if s[i] == s[j]:\n                dp[i][j] = dp[i+1][j-1]\n            else:\n                dp[i][j] = 1 + min(dp[i+1][j], dp[i][j-1])\n    \n    return dp[0][n - 1]",
    "tests": [
        "assert min_operations_to_palindrome(\"a\") == 0",
        "assert min_operations_to_palindrome(\"abba\") == 0",
        "assert min_operations_to_palindrome(\"abcba\") == 2",
        "assert min_operations_to_palindrome(\"notapalin\") == 4"
    ],
    "model": "command-r7b:latest-repaired by Llama 3"
}