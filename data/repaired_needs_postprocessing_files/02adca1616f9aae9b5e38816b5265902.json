{
    "title": "Hard: Longest Subsequence with Adjacent Repeating Elements",
    "description": "Given a sequence of integers, find the longest subsequence where adjacent elements are equal. Return the length of this longest subsequence.\n\n#### Function Signature\n```python\ndef longest_adjacent_repeats(seq: List[int]) -> int:\n```\n\n#### Input\n- `seq` (List[int]): A list of integers.\n\n#### Output\n- Returns an integer representing the length of the longest subsequence with adjacent repeating elements.",
    "code": "from typing import List\ndef longest_adjacent_repeats(seq: List[int]) -> int:\n    if not seq:\n        return 0\n    max_length = current_length = 1\n    prev_element = seq[0]\n    for i in range(1, len(seq)):\n        if seq[i] == prev_element:\n            current_length += 1\n        else:\n            prev_element = seq[i]\n            max_length = max(max_length, current_length)\n            current_length = 1\n    return max(max_length, current_length)",
    "tests": [
        "assert longest_adjacent_repeats([5, 5, 2, 2, 3, 4, 4, 5]) == 4",
        "assert longest_adjacent_repeats([1, 1, 1, 1, 1]) == 5",
        "assert longest_adjacent_repeats([1, 2, 3, 4, 5]) == 1",
        "assert longest_adjacent_repeats([10, 10, 10, 10, 10, 10]) == 6"
    ],
    "model": "qwen2:7b-repaired by Llama 3"
}