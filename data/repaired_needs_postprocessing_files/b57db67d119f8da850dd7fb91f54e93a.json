{
    "title": "Anagram Checker (Hard)",
    "description": "An anagram is a word or phrase that is formed by rearranging the letters of another word or phrase, usually using all the original letters exactly once. Write a function `are_anagrams` that checks if two given strings are anagrams.  #### Function Signature```pythondef are_anagrams(s1: str, s2: str) -> bool:  ```   #### Input- `s1`, `s2` (str): Two strings of any length that may contain letters, numbers, spaces, and punctuation.- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.  #### Output- `True` if the two input strings are anagrams of each other, `False` otherwise. ",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    # Remove non-alphanumeric characters and convert to lowercase\n    s1 = ''.join(char for char in s1 if char in string.ascii_letters + string.digits).lower()\n    s2 = ''.join(char for char in s2 if char in string.ascii_letters + string.digits).lower()\n    # Check if the sorted strings are equal\n    return sorted(s1) == sorted(s2)\n",
    "tests": [
        "assert are_anagrams('listen', 'silent') == True",
        "assert are_anagrams('hello', 'world') == False",
        "assert are_anagrams('A man, a plan, a canal: Panama', 'amanaplanacanalpanama') == True",
        "assert are_anagrams('Racecar', 'Carrace') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}