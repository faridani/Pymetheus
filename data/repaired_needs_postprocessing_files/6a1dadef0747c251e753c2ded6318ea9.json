{
    "title": "[Hard] Matrix Multiplication and Transposition",
    "description": "Given two matrices, A and B, write a function `multiply_and_transpose` that multiplies matrix A with matrix B, then transposes the result. Your solution should be able to handle any valid square matrices of size N x N.\n\n#### Function Signature\n```python\ndef multiply_and_transpose(A: List[List[int]], B: List[List[int]]) -> List[List[int]]:\n``` \n\n#### Input\n- `A` and `B` (List[List[int]]): Square matrices of size N x N, where each element is an integer.\n\n#### Output\n- Returns the transposed matrix resulting from multiplying A with B. The output should be a square matrix of size N x N.",
    "code": "from typing import List\ndef multiply_and_transpose(A: List[List[int]], B: List[List[int]]) -> List[List[int]]:\n    # Multiply A with B\n    result = [[sum(a*b for a, b in zip(rowA, colB)) for colB in zip(*B)] for rowA in A]\n    \n    # Transpose the result\n    transposed_result = [list(i) for i in zip(*result)]\n    return transposed_result",
    "tests": [
        "assert multiply_and_transpose([[1, 2], [3, 4]], [[5, 6], [7, 8]]) == [[19, 22], [43, 50]]",
        "assert multiply_and_transpose([[1, 2, 3], [4, 5, 6], [7, 8, 9]], [[9, 8, 7], [6, 5, 4], [3, 2, 1]]) == [[30, 24, 18], [84, 69, 54], [138, 114, 90]]"
    ],
    "model": "codestral:22b-repaired by Llama 3"
}