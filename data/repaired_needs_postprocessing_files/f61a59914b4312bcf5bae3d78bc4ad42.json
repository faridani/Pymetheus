{
    "title": "Anagram Checker (Hard)",
    "description": "An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Write a function `anagram_checker` that checks if two given strings are anagrams of each other.\n\n#### Function Signature\n```python\ndef anagram_checker(string1: str, string2: str) -> bool:\n```\n\n#### Input\n- `string1`, `string2` (str): Two strings that may contain letters, numbers, and punctuation.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def anagram_checker(string1: str, string2: str) -> bool:\n    # Remove spaces and punctuation from both strings\n    string1 = ''.join(char for char in string1 if char.isalnum())\n    string2 = ''.join(char for char in string2 if char.isalnum())\n    # Sort the letters of each string\n    sorted_string1 = sorted(string1)\n    sorted_string2 = sorted(string2)\n    \n    # Check if both strings have the same length and the sorted letters are the same in both strings\n    return len(sorted_string1) == len(sorted_string2) and sorted_string1 == sorted_string2",
    "tests": [
        "assert anagram_checker(\"listen\", \"silent\") == True",
        "assert anagram_checker(\"actinium\", \"nicotine\") == True",
        "assert anagram_checker(\"python\", \"htypoen\") == False",
        "assert anagram_checker(\"hello\", \"world\") == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}