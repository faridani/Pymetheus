{
    "title": "Anagram Checker (Medium)",
    "description": "Two strings are anagrams if they contain the same characters but in a different order. Ignore spaces, punctuation and case differences.\n\n#### Function Signature```python\ndef is_anagram(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1` (str): A string that may contain letters, numbers, spaces, and punctuation.\n- `s2` (str): Another string with the same characteristics as `s1`.\n\n#### Output\n- Returns `True` if both input strings are anagrams of each other, `False` otherwise.",
    "code": "from collections import Counter\nimport string\n\ndef is_anagram(s1: str, s2: str) -> bool:\n    # Remove spaces and punctuation, convert to lowercase\n    cleaned_s1 = ''.join(char for char in s1.lower() if char not in string.punctuation + ' ')\n    cleaned_s2 = ''.join(char for char in s2.lower() if char not in string.punctuation + ' ')\n    # Use Counter to check the character counts\n    return Counter(cleaned_s1) == Counter(cleaned_s2)",
    "tests": [
        "assert is_anagram(\"Listen\", \"Silent\") == True",
        "assert is_anagram(\"Hello, world!\", \"Doll who?\") == False",
        "assert is_anagram(\"A gentleman\", \"Elegant man\") == True",
        "assert is_anagram(\"Clint Eastwood\", \"Old West Action\") == False"
    ],
    "model": "phi3:14b-repaired by Llama 3"
}