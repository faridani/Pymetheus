{
    "title": "Number of Islands",
    "description": "You are given a map represented as an array of strings, where each string represents a row of cells. Each cell can be either '0' (land) or '1' (water). Write a function `count_islands` that counts the number of islands in the map.\n\n#### Function Signature\n```python\ndef count_islands(map: list[str]) -> int:\n```\n\n#### Input\n- `map` (list[str]): A 2D array representing the map. Each string represents a row of cells, where '0' is land and '1' is water.\n\n#### Output\n- Returns the number of islands in the map.",
    "code": "def count_islands(map: list[str]) -> int:\n    if not map:\n        return 0\n    def dfs(i: int, j: int) -> None:\n        if i < 0 or i >= len(map) or j < 0 or j >= len(map[0]):\n            return\n        if map[i][j] == '1':\n            map[i] = map[i][:j] + '*' + map[i][j+1:]\n            dfs(i, j-1)\n            dfs(i, j+1)\n            dfs(i-1, j)\n            dfs(i+1, j)\n\n    count = 0\n    for i in range(len(map)):\n        for j in range(len(map[0])):\n            if map[i][j] == '0':\n                dfs(i, j)\n                count += 1\n\n    return count",
    "tests": [
        "assert count_islands([['0', '0', '1'], ['0', '0', '0']]) == 1",
        "assert count_islands([['0', '1', '1'], ['1', '1', '0'], ['0', '1', '0']]) == 2",
        "assert count_islands([]) == 0",
        "assert count_islands([['0']]) == 1"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}