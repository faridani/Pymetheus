{
    "title": "'Palindromic Substrings Finder (Easy)'",
    "description": "Given a string, find and return all the non-overlapping palindromic substrings. A palindrome is a word, phrase, number, or other sequence of characters that reads the same forward and backward (ignoring spaces, punctuation, and capitalization).\n\n#### Function Signature\n```python\ndef find_palindromes(s: str) -> List[str]:\n``` \n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns a list of all the non-overlapping palindromic substrings in the input string.",
    "code": "def find_palindromes(s: str) -> List[str]:\n    # Initialize an empty list to store the palindromes\n    palindromes = []\n    \n    for i in range(len(s)):\n        # Start of the current substring\n        start = i\n        # End of the current substring, initially set to the start index\n        end = start\n        \n        while start >= 0 and end < len(s) and s[start] == s[end]:\n            # Move towards the center, comparing characters\n            start -= 1\n            end += 1\n        \n        if start + 1 < end:\n            # If the substring found is longer than one character, add it to the list\n            palindromes.append(s[start+1:end])\n",
    "tests": [
        "assert find_palindromes('madam') == ['madam']",
        "assert find_palindromes('racecar') == ['racecar', 'acecar']",
        "assert find_palindromes('hello') == []"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}