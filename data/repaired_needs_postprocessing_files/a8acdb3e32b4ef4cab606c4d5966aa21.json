{
    "title": "Anagram Detector (Hard)",
    "description": "An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Write a function `anagram_checker` that checks if two given strings are anagrams of each other.\n\n#### Function Signature\n```python\ndef anagram_checker(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1`, `str2` (str): Two strings that may contain letters in any case and spaces.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def anagram_checker(str1: str, str2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    str1 = ''.join([char for char in str1 if char.isalpha()]).lower()\n    str2 = ''.join([char for char in str2 if char.isalpha()]).lower()\n    \n    # If the lengths of the strings are not equal, they cannot be anagrams\n    if len(str1) != len(str2):\n        return False\n    \n    # Sort the characters in each string and compare them\n    return sorted(str1) == sorted(str2)",
    "tests": [
        "assert anagram_checker('Listen', 'Silent') == True",
        "assert anagram_checker('Dormitory', 'Dirty Room') == True",
        "assert anagram_checker('Hello', 'world') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}