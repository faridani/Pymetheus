{
    "title": "Anagram Detector (Hard)",
    "description": "Write a function `anagram_checker` that checks if two strings are anagrams of each other. Anagram is a word or phrase that is formed by rearranging the letters of another word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef anagram_checker(str1: str, str2: str) -> bool:\n``` \n\n#### Input\n- `str1`, `str2` (str): Two strings of lowercase alphabets.\n\n#### Output\n- Returns `True` if the input strings are anagrams of each other, `False` otherwise.",
    "code": "def anagram_checker(str1: str, str2: str) -> bool:\n    # Remove spaces and convert to sorted lists of characters\n    sorted_str1 = sorted(list(filter(str.isalpha, str1)))\n    sorted_str2 = sorted(list(filter(str.isalpha, str2)))\n    \n    # Check if the sorted lists are equal\n    return sorted_str1 == sorted_str2",
    "tests": [
        "assert anagram_checker('listen', 'silent') == True",
        "assert anagram_checker('Python', 'htypoN') == True",
        "assert anagram_checker('racecar', 'carrace') == True",
        "assert anagram_checker('hello', 'olleh') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}