{
    "title": "Anagram Checker (Hard)",
    "description": "An anagram is a word or phrase that is formed by rearranging the letters of another word or phrase, typically using all the original letters exactly once. Write a function `is_anagram` that checks if two given strings are anagrams of each other.\n\n#### Function Signature\n```python\ndef is_anagram(string1: str, string2: str) -> bool:\n``` \n\n#### Input\n- `string1`, `string2` (str): Two strings that may contain letters and spaces.\n\n#### Output\n- Returns `True` if the input strings are anagrams of each other, `False` otherwise. The strings should be ignored for case sensitivity and punctuation.",
    "code": "import string\ndef is_anagram(string1: str, string2: str) -> bool:\n    # Remove non-alphabetic characters from both strings\n    string1 = ''.join(char for char in string1.lower() if char in string.ascii_letters)\n    string2 = ''.join(char for char in string2.lower() if char in string.ascii_letters)\n    # Check if both strings have the same length\n    if len(string1) != len(string2):\n        return False\n    # Sort and compare the letters in both strings\n    return sorted(string1) == sorted(string2)",
    "tests": [
        "assert is_anagram(\"listen\", \"silent\") == True",
        "assert is_anagram(\"hello\", \"world\") == False",
        "assert is_anagram(\"Elephants and cats are really cool\", \"The classroom of rats is very tight\") == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}