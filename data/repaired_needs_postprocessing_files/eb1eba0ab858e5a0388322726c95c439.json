{
    "title": "Cantor Pairing Function",
    "description": "Given two integers n and m, return the result of applying Cantor pairing function to them. The Cantor pairing function is a bijection from \u2115 \u00d7 \u2115 onto \u2115 that pairs two positive integers in such a way that it's easy to recover the original numbers.\n\n#### Function Signature\n```python\ndef cantor_pair(n: int, m: int) -> int:\n```\n\n#### Input\n- `n` (int): A non-negative integer.\n- `m` (int): A non-negative integer.\n\n#### Output\n- Returns the result of applying Cantor pairing function to `n` and `m`.\n",
    "code": "def cantor_pair(n: int, m: int) -> int:\n    if n > m:\n        return 2 * (m + n) - 1\n    else:\n        return 2 * n + m\n",
    "tests": [
        "assert cantor_pair(0, 0) == 0",
        "assert cantor_pair(5, 3) == 11",
        "assert cantor_pair(10, 7) == 22",
        "assert cantor_pair(1, 9) == 10"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}