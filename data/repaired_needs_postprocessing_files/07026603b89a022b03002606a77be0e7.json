{
    "title": "'Palindromic Substrings Finder (Medium)'",
    "description": "Given a string `s`, find all the palindromic substrings of the string and return them as a list. A palindrome is a non-empty substring that reads the same backward as forward.\n\n#### Function Signature\n```python\ndef find_palindromes(s: str) -> List[str]:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns a list of all palindromic substrings of the input string.",
    "code": "import re\ndef find_palindromes(s: str) -> List[str]:\n    # Find all possible palindromic patterns in the string, including odd and even lengths\n    patterns = ['.{0,2}$', '.{1}\\b.\\1{1,}', '.\\b.{3,}\\.\\1{2,}.\\1']\n    matches = []\n    for pattern in patterns:\n        matches += re.findall(pattern, s)\n    # Remove duplicates and empty strings\n    return list(set([match[0] for match in matches if match]))",
    "tests": [
        "assert find_palindromes(\"racecar\") == [\"racecar\", \"race\", \"car\", \"cc\"]",
        "assert find_palindromes(\"abba\") == [\"abba\", \"aba\", \"bb\"]",
        "assert find_palindromes(\"Hello World!\") == [\"ll\", \"o\", \"s\", \"ss\", \"WW\"]"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}