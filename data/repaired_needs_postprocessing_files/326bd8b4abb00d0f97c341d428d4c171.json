{
    "title": "Prime Factors (Hard)",
    "description": "Write a function `prime_factors` that takes an integer as input and returns a list of prime numbers that multiply together to equal the input.\n\n#### Function Signature\n```python\ndef prime_factors(n: int) -> List[int]:\n``` \n\n#### Input\n- `n` (int): A positive integer.\n\n#### Output\n- Returns a list of prime numbers that multiply together to equal the input. For example, if `n` is 36, the function should return [2, 2, 3, 3]. If `n` is not a product of prime numbers (e.g., 8), the function should return an empty list.\n",
    "code": "def prime_factors(n: int) -> List[int]:\n    factors = []\n    divisor = 2\n    while divisor * divisor <= n:\n        if n % divisor == 0:\n            factors.append(divisor)\n            n /= divisor\n        else:\n            divisor += 1\n    if n > 1:\n        factors.append(n)\n    return factors",
    "tests": [
        "assert prime_factors(4) == [2, 2]",
        "assert prime_factors(9) == [3, 3]",
        "assert prime_factors(17) == [17]",
        "assert prime_factors(60) == [2, 2, 3, 5]",
        "assert prime_factors(41) == [41]"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}