{
    "title": "Palindromic Substrings Finder (Hard)",
    "description": "Given a string, write a function `find_palindromes` that finds all the non-overlapping palindromic substrings of length greater than 1. The function should return a list containing these substrings.\n\n#### Function Signature\n```python\ndef find_palindromes(s: str) -> List[str]:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns a list of all non-overlapping palindromic substrings of length greater than 1 found in the input string.",
    "code": "import re\ndef find_palindromes(s: str) -> List[str]:\n    # Find all possible palindromic substrings of the input string\n    substrings = re.findall('(.|.)(\\1)(?!\\2)', s)\n    \n    # Filter out single characters and palindromes of length 1\n    palindromes = [substr for substr in substrings if len(substr) > 1]\n    return palindromes",
    "tests": [
        "assert find_palindromes('racecar') == ['racecar', 'acecar']",
        "assert find_palindromes('hello world') == ['ll', 'ow', 'wo']",
        "assert find_palindromes('A man, a plan, a canal: Panama') == ['amanaplanacanalpanama', 'nan']"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}