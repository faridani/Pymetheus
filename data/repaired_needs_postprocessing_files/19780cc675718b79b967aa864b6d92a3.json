{
    "title": "Anagram Checker (Hard)",
    "description": "An anagram is a word or phrase that is formed by rearranging the letters of another word or phrase, typically using all the original letters exactly once. Write a function `is_anagram` that checks if two given strings are anagrams of each other.\n#### Function Signature\n```python\ndef is_anagram(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1` (str): A string that may contain letters, numbers and spaces, but no punctuation.\n- `s2` (str): Another string that may contain letters, numbers and spaces, but no punctuation.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def is_anagram(s1: str, s2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    s1 = ''.join(sorted(s1.lower().replace(' ', '')))\n    s2 = ''.join(sorted(s2.lower().replace(' ', '')))\n    \n    # Compare sorted strings\n    return len(s1) == len(s2) and s1 == s2",
    "tests": [
        "assert is_anagram('listen', 'silent') == True",
        "assert is_anagram('hello', 'olleh') == True",
        "assert is_anagram('pale', 'ape') == False",
        "assert is_anagram('Anagram', 'nag a ram') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}