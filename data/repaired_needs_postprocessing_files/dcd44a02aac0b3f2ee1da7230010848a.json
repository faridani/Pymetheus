{
    "title": "Number of Inversions (Easy)",
    "description": "Write a function `count_inversions` that takes a list of integers as input and returns the number of inversions in the list. An inversion is a pair of numbers (i, j) where i < j and i > j in sorted order. Note that self-pairings (such as 5, 5) are not considered inversions.\n\n#### Function Signature\n```python\ndef count_inversions(arr: List[int]) -> int:\n``` \n\n#### Input\n- `arr` (List[int]): A sorted list of integers with possible negative numbers.\n\n#### Output\n- Returns the number of inversions in the input list.",
    "code": "def count_inversions(arr: List[int]) -> int:\n    result = 0\n    for i in range(len(arr) - 1):\n        if arr[i] > arr[i + 1]:\n            result += (i + 1)\n    return result",
    "tests": [
        "assert count_inversions([2, 4, 1, 3]) == 2",
        "assert count_inversions([1, 2, 3]) == 0",
        "assert count_inversions([6, 4, 1, 7, 3]) == 3"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}