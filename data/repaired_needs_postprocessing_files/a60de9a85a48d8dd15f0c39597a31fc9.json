{
    "title": "Prime Palindromes",
    "description": "Write a function `is_prime_palindrome` that checks if a given number is both prime and palindromic. A prime number is a natural number greater than 1 that has no positive divisors other than 1 and itself. A palindromic number reads the same forwards and backwards.\n\n#### Function Signature\n```python\ndef is_prime_palindrome(n: int) -> bool:\n```\n\n#### Input\n- `n` (int): A non-negative integer.\n\n#### Output\n- Returns `True` if the input number is both prime and palindromic, `False` otherwise.",
    "code": "def is_prime(n: int) -> bool:\n    # Check if n is less than 2 (not prime)\n    if n < 2:\n        return False\n    # Check divisibility by 2 and 5 (since 2 and its powers are the only even primes)\n    if n % 2 == 0 and n != 2:\n        return False\n    if n % 5 == 0 and n != 5:\n        return False\n    # Check divisibility by all odd numbers up to the square root of n\n    i = 3\n    while i * i <= n:\n        if n % i == 0 and n != i:\n            return False\n        i += 2\n    # If no divisors found, n is prime\n    return True\ndef is_prime_palindrome(n: int) -> bool:\n    # Convert number to string\n    s = str(n)\n    # Reverse the string\n    rs = s[::-1]\n    # Check if the original and reversed strings are equal (palindromic)\n    if s == rs:\n        # Remove leading zeros (since 0 is not prime)\n        if len(s) > 1 and s[0] == '0':\n            return False\n        # Check if the number is prime\n        if is_prime(int(s)):\n            return True\n    return False",
    "tests": [
        "assert is_prime_palindrome(3) == True",
        "assert is_prime_palindrome(5) == True",
        "assert is_prime_palindrome(7) == True",
        "assert is_prime_palindrome(11) == True",
        "assert is_prime_palindrome(191) == True",
        "assert is_prime_palindrome(223) == True",
        "assert is_prime_palindrome(385) == False",
        "assert is_prime_palindrome(407) == False",
        "assert is_prime_palindrome(647) == True",
        "assert is_prime_palindrome(82828) == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}