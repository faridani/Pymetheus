{
    "title": "Medium: Longest Increasing Subsequence",
    "description": "Given an integer array nums, return the length of the longest strictly increasing subsequence.\nA subsequence is a sequence that can be derived from an array by deleting some or no elements without changing the order of the remaining elements. For example, [3,6,2,7] is a subsequence of the array [0,3,1,6,2,2,7].\n#### Function Signature\n```python\ndef length_of_LIS(nums: list[int]) -> int:\n``` \n\n #### Input\n- `nums` (list[int]): A list of integers.\n\n #### Output\n- Returns the length of the longest strictly increasing subsequence.",
    "code": "def length_of_LIS(nums: list[int]) -> int:\n    if not nums: return 0\n    dp = [1] * len(nums)\n    for i in range(1, len(nums)):\n        for j in range(i):\n            if nums[i] > nums[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return max(dp)",
    "tests": [
        "assert length_of_LIS([10,9,2,5,3,7,101,18]) == 4",
        "assert length_of_LIS([0,1,0,3,2,3]) == 4",
        "assert length_of_LIS([7,7,7,7,7,7,7]) == 1"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}