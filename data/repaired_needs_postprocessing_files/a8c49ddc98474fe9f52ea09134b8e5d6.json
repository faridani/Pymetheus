{
    "title": "Anagram Detector (Hard)",
    "description": "Given two strings, write a function `are_anagrams` that checks if the two strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef are_anagrams(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1` (str): A string containing only lowercase letters and spaces\n- `s2` (str): A string containing only lowercase letters and spaces\n\n#### Output\n- Returns `True` if the two strings are anagrams of each other, `False` otherwise.\n",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    # Remove spaces from both strings\n    s1 = ''.join(filter(str.isalnum, s1)).lower()\n    s2 = ''.join(filter(str.isalnum, s2)).lower()\n    \n    # If the two strings have different lengths, they cannot be anagrams.\n    if len(s1) != len(s2):\n        return False\n    \n    # Sort both strings and compare them\n    return sorted(s1) == sorted(s2)",
    "tests": [
        "assert are_anagrams('listen', 'silent') == True",
        "assert are_anagrams('hello', 'world') == False",
        "assert are_anagrams('cat', 'act') == True",
        "assert are_anagrams('Anagram', 'nag a ram') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}