{
    "title": "Hard - Minimum Deletions for Sorted Subsequence",
    "description": "Given an array of integers `nums`, find the minimum number of deletions required to obtain a sorted subsequence. A sorted subsequence is a sequence of elements from the original array that are in non-decreasing order.\n\n#### Function Signature\n```python\ndef min_deletions(nums: list[int]) -> int:\n``` \n\n#### Input\n- `nums` (list[int]): A list of integers.\n\n#### Output\n- Returns the minimum number of deletions required to obtain a sorted subsequence.",
    "code": "def min_deletions(nums: list[int]) -> int:\n    n = len(nums)\n    dp = [1] * n\n\n    for i in range(1, n):\n        for j in range(i):\n            if nums[i] >= nums[j] and dp[i] < dp[j] + 1:\n                dp[i] = dp[j] + 1\n\n    return n - max(dp)",
    "tests": [
        "assert min_deletions([4, 2, 3, 6, 10, 1, 12]) == 2",
        "assert min_deletions([1, 2, 3, 4, 5]) == 0",
        "assert min_deletions([5, 4, 3, 2, 1]) == 4"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}