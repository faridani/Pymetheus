{
    "title": "Hard: Minimum Swaps for Sorted Array",
    "description": "Given an array of integers `arr`, find the minimum number of swaps required to sort the array in ascending order. \n\n#### Function Signature\n```python\ndef min_swaps(arr):\n``` \n\n#### Input\n- `arr` (list of int): An unsorted list of integers.\n\n#### Output\n- Returns an integer representing the minimum number of swaps required to sort the array.",
    "code": "def min_swaps(arr):\n    n = len(arr)\n    arrpos = [0 for x in range(n)]\n    for i in range(n):\n        arrpos[arr[i]] = i\n    swaps = 0\n    cycle_len = 0\n    visited = [False] * n\n    for i in range(n):\n        if visited[i] or arrpos[i] == i:\n            continue\n        j = i\n        cycle_len = 0\n        while not visited[j]:\n            visited[j] = True\n            j = arrpos[arr[j]]\n            cycle_len += 1\n        swaps += cycle_len - 1\n    return swaps",
    "tests": [
        "assert min_swaps([7, 1, 3, 2, 4, 5, 6]) == 5",
        "assert min_swaps([1, 2, 3, 4, 5]) == 0",
        "assert min_swaps([4, 3, 2, 1]) == 6"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}