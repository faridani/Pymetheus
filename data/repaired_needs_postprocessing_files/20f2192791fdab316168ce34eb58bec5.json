{
    "title": "Anagram Detector (Hard)",
    "description": "Given two strings, write a function `anagram_checker` that checks if the two input strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of another word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef anagram_checker(str1: str, str2: str) -> bool:\n``` \n\n#### Input\n- `str1` (str): A string that may contain letters, numbers, and spaces. No punctuation is allowed.\n- `str2` (str): Another string that may contain letters, numbers, and spaces. No punctuation is allowed.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\n",
    "code": "def anagram_checker(str1: str, str2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    str1 = ''.join(sorted(str1.lower().replace(' ', '')))\n    str2 = ''.join(sorted(str2.lower().replace(' ', '')))\n    # Compare the sorted strings\n    return len(str1) == len(str2) and str1 == str2",
    "tests": [
        "assert anagram_checker(\"listen\", \"silent\") == True",
        "assert anagram_checker(\"apple\", \"appel\") == True",
        "assert anagram_checker(\"world\", \"dlrow\") == True",
        "assert anagram_checker(\"hello\", \"olleh\") == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}