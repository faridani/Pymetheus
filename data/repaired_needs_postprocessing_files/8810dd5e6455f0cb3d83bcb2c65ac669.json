{
    "title": "Fibonacci Summation",
    "description": "The Fibonacci sequence is a series of numbers where the next number is found by adding up the two numbers before it. The sequence starts with 0 and 1. Your task is to write a function that calculates the sum of the first n Fibonacci numbers, including zero.\n#### Function Signature\n```python\ndef fib_sum(n: int) -> int:\n```\n\n#### Input\n- `n` (int): The number of terms to sum in the Fibonacci sequence. It should be a positive integer. Nonetheless, if n is less than 1, return 0.\n\n#### Output\n- Returns an integer that represents the sum of the first n Fibonacci numbers including zero.",
    "code": "def fib_sum(n: int) -> int:\n    def fibonacci(num):\n        a, b = 0, 1\n        for _ in range(num-1):\n            a, b = b, a + b\n        return a\n    \n    if n <= 0:\n        return 0\n    elif n == 1:\n        return fibonacci(n)\n    else:\n        total_sum = 0\n        for i in range(1, n+1):\n            total_sum += fibonacci(i)\n        return total_sum",
    "tests": [
        "assert fib_cu(5) == 7",
        "assert fib_sum(8) == 33",
        "assert fib_sum(20) == 4613732029425"
    ],
    "model": "phi3:14b-repaired by Llama 3"
}