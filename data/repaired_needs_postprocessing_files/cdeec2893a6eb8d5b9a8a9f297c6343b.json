{
    "title": "Palindrome Indices Finder (Medium)",
    "description": "Write a function `find_palindrome_indices` that finds all indices of palindromic substrings in a given string. Note that the palindrome can contain spaces, punctuation, and special characters.\n\n#### Function Signature\n```python\ndef find_palindrome_indices(s: str) -> List[List[int]]:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns a list of lists, where each inner list contains the starting and ending indices of a palindrome in the input string. For example, for the input string 'A man, panama, man a', the function should return [[0, 6], [7, 15]].\n",
    "code": "def find_palindrome_indices(s: str) -> List[List[int]]:\n    # Initialize an empty list to store the indices of palindromes\n    palindromes = []\n    # Iterate through all substrings of the input string\n    for i in range(len(s)):\n        for j in range(i, len(s)):\n            # Check if the substring is a palindrome\n            if s[i:j] == s[i:j][::-1]:\n                # If it is, add its indices to the list of palindromes\n                palindromes.append([i, j])\n    \n    return palindromes",
    "tests": [
        "assert find_palindrome_indices('A man, panama, man a') == [[0, 6], [7, 15]]",
        "assert find_palindrome_indices('Able was I ere I saw Elba') == [[4, 12], [13, 14], [19, 20], [28, 29], [31, 32]]",
        "assert find_palindrome_indices('never odd or even') == [[0, 6], [7, 15]]"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}