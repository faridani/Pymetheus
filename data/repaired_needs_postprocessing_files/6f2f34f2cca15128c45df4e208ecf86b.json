{
    "title": "Prime Spiral",
    "description": "A prime spiral is a sequence of prime numbers that spirals out from the center. The first few terms are 2, 3, 5, 7, 11, 13, 17, and so on. Given an integer n, write a function `prime_spiral` that returns the nth term in the prime spiral sequence.\n#### Function Signature\n```python\ndef prime_spiral(n: int) -> int:\n``` \n#### Input\n- `n` (int): The position of the term in the prime spiral sequence.\n#### Output\n- Returns the `n`th term in the prime spiral sequence.",
    "code": "import math\n\ndef is_prime(num):\n    if num < 2:\n        return False\n    for i in range(2, int(math.sqrt(num)) + 1):\n        if num % i == 0:\n            return False\n    return True\n\ndef prime_spiral(n):\n    primes = []\n    i = 2\n    while len(primes) < n:\n        if is_prime(i):\n            primes.append(i)\n        i += 1\n    return primes[-1]\n",
    "tests": [
        "assert prime_spiral(1) == 2",
        "assert prime_spiral(8) == 17",
        "assert prime_spiral(15) == 47",
        "assert prime_spiral(20) == 73"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}