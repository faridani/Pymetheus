{
    "title": "Hard: Matrix Rotation",
    "description": "You are given a 2D matrix of integers. Write a function `rotate_matrix(matrix)` that rotates the matrix 90 degrees clockwise in-place.\n\n#### Function Signature\n```python\ndef rotate_matrix(matrix):\n```\n\n#### Input\n- `matrix` (list of lists): A square matrix represented as a list of lists, where each inner list represents a row.\n\n#### Output\n- Modifies the input `matrix` in-place to represent the rotated matrix.",
    "code": "def rotate_matrix(matrix):\n    n = len(matrix)\n    for i in range(n // 2):\n        for j in range(i, n - i - 1):\n            temp = matrix[i][j]\n            matrix[i][j] = matrix[n - 1 - j][i]\n            matrix[n - 1 - j][i] = matrix[n - 1 - i][n - 1 - j]\n            matrix[n - 1 - i][n - 1 - j] = matrix[j][n - 1 - i]\n            matrix[j][n - 1 - i] = temp",
    "tests": [
        "matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]; rotate_matrix(matrix); assert matrix == [[7, 4, 1], [8, 5, 2], [9, 6, 3]]",
        "matrix = [[1, 2], [3, 4]]; rotate_matrix(matrix); assert matrix == [[3, 1], [4, 2]]"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}