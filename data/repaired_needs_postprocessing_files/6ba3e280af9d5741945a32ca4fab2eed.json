{
    "title": "Anagram Checker (Hard)",
    "description": "In computer science, an anagram is a word or phrase formed by rearranging the letters of another word or phrase, typically using all the original letters exactly once.\n#### Function Signature\n```python\ndef are_anagrams(s1: str, s2: str) -> bool:\n``` \n\n#### Input\n- `s1`, `s2` (str): Two strings containing lowercase alphabets.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\n",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    # Check that both strings have the same length\n    if len(s1) != len(s2):\n        return False\n    \n    # Create dictionaries to count each letter in the two strings\n    dict1 = {letter: s1.count(letter) for letter in string.ascii_lowercase}\n    dict2 = {letter: s2.count(letter) for letter in string.ascii_lowercase}\n    \n    # Check if both dictionaries are equal\n    return dict1 == dict2",
    "tests": [
        "assert are_anagrams('listen', 'silent') == True",
        "assert are_anagrams('hello', 'world') == False",
        "assert are_anagrams('acttcat', 'actcat') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}