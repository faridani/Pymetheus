{
    "title": "'Anagram Checker (Hard)'",
    "description": "An anagram is a word or phrase formed by rearranging the letters of another word or phrase, typically using all the original letters exactly once. Write a function `is_anagram` that checks if two given strings are anagrams of each other.\n#### Function Signature\n```python\ndef is_anagram(s1: str, s2: str) -> bool:\n``` \n#### Input\n- `s1` (str): A string containing lowercase letters only.\n- `s2` (str): A string containing lowercase letters only.\n#### Output\n- Returns `True` if the input strings are anagrams of each other, `False` otherwise.",
    "code": "def is_anagram(s1: str, s2: str) -> bool:\n    # Remove spaces and convert to sorted lists\n    s1 = ''.join([char for char in s1 if char.isalpha()]).lower().sort()\n    s2 = ''.join([char for char in s2 if char.isalpha()]).lower().sort()\n    # Compare the sorted lists\n    return len(s1) == len(s2) and s1 == s2",
    "tests": [
        "assert is_anagram('listen', 'silent') == True",
        "assert is_anagram('hello', 'world') == False",
        "assert is_anagram('python', 'typhon') == True",
        "assert is_anagram('', '') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}