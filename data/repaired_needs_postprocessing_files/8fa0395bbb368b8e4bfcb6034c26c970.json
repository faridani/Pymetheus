{
    "title": "Anagram Checker (Hard)",
    "description": "Given two strings, write a function `is_anagram` that checks if the given strings are anagrams of each other.\n\n#### Function Signature\n```python\ndef is_anagram(s1: str, s2: str) -> bool:\n``` \n\n#### Input\n- `s1` (str): A string containing lowercase letters only.\n- `s2` (str): A string containing lowercase letters only.\n\n#### Output\n- Returns `True` if the two strings are anagrams of each other, `False` otherwise.\n",
    "code": "def is_anagram(s1: str, s2: str) -> bool:\n    # Check if both strings have the same length\n    if len(s1) != len(s2):\n        return False\n    # Create a dictionary to count the frequency of each character in s1\n    counter = {}\n    for char in s1:\n        if char in counter:\n            counter[char] += 1\n        else:\n            counter[char] = 1\n    # Decrement the count of each character in s2 and check if all counts become zero\n    for char in s2:\n        if char in counter:\n            counter[char] -= 1\n        else:\n            return False\n    for key, val in counter.items():\n        if val != 0:\n            return False\n    return True",
    "tests": [
        "assert is_anagram(\"listen\", \"silent\") == True",
        "assert is_anagram(\"hello\", \"world\") == False",
        "assert is_anagram(\"abba\", \"baab\") == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}