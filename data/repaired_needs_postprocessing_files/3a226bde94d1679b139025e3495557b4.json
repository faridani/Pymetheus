{
    "title": "Anagram Checker (Hard)",
    "description": "Given two strings, write a function `anagram_checker` that checks if the two strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n#### Function Signature\n```python\ndef anagram_checker(string1: str, string2: str) -> bool:\n```\n#### Input\n- `string1` (str): The first given string that may contain letters and spaces only.\n- `string2` (str): The second given string that may contain letters and spaces only.\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def anagram_checker(string1: str, string2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    string1 = ''.join(sorted(string1.lower().replace(' ', '')))\n    string2 = ''.join(sorted(string2.lower().replace(' ', '')))\n    \n    # Check if the sorted strings are equal\n    return string1 == string2",
    "tests": [
        "assert anagram_checker(\"listen\", \"silent\") == True",
        "assert anagram_checker(\"welcome\", \"melon\") == False",
        "assert anagram_checker(\"madam\", \"madam\") == True",
        "assert anagram_checker(\"programmer\", \"memory\") == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}