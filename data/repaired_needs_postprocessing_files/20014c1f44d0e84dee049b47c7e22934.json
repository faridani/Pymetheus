{
    "title": "Hard: Prime Factors of a Number",
    "description": "Write a function `prime_factors` that takes an integer `n` as input and returns the prime factors of `n`. The function should return the prime factors in ascending order.\n\n#### Function Signature\n```python\ndef prime_factors(n: int) -> list[int]:\n```\n\n#### Input\n- `n` (int): A positive integer.\n\n#### Output\n- Returns a list of integers representing the prime factors of `n`. The list should be sorted in ascending order.\n",
    "code": "def prime_factors(n: int) -> list[int]:\n    i = 2\n    factors = []\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n            while n % i == 0:\n                n //= i\n            factors.append(i)\n    if n > 1:\n        factors.append(n)\n    return sorted(factors)",
    "tests": [
        "assert prime_factors(315) == [3, 3, 5, 7]",
        "assert prime_factors(100) == [2, 2, 5, 5]",
        "assert prime_factors(12) == [2, 2, 3]",
        "assert prime_factors(1) == []"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}