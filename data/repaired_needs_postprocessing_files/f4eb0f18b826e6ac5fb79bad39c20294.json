{
    "title": "Hard: Minimum Swaps to Sort an Array",
    "description": "You are given an array of integers. Your task is to find the minimum number of swaps required to sort the array in ascending order.\n\n#### Function Signature\n```python\ndef min_swaps(arr):\n```\n\n#### Input\n- `arr` (list): A list of integers.\n\n#### Output\n- Returns an integer representing the minimum number of swaps required to sort the array.",
    "code": "def min_swaps(arr):\n    n = len(arr)\n    cycle_count = 0\n\n    # Create a mapping from element value to its index\n    value_to_index = {val: i for i, val in enumerate(arr)}\n\n    for i in range(n):\n        if arr[i] != i + 1:\n            # Find the correct position of the current element\n            correct_position = value_to_index[i + 1]\n            # Swap the elements at the current position and the correct position\n            arr[i], arr[correct_position] = arr[correct_position], arr[i]\n            # Update the index mapping\n            value_to_index[arr[i]] = i\n            value_to_index[arr[correct_position]] = correct_position\n            cycle_count += 1\n    return cycle_count",
    "tests": [
        "assert min_swaps([7, 1, 3, 2, 4, 5, 6]) == 5",
        "assert min_swaps([1, 2, 3, 4, 5]) == 0",
        "assert min_swaps([4, 3, 2, 1]) == 3"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}