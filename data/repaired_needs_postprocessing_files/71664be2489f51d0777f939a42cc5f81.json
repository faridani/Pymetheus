{
    "title": "Anagram Detector (Hard)",
    "description": "An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Write a function `is_anagram` that checks if two given strings are anagrams of each other.  #### Function Signature```python\ndef is_anagram(str1: str, str2: str) -> bool:\n```\n#### Input\n- `str1` (str): A string that may contain letters, spaces and punctuation.\n- `str2` (str): Another string that may contain letters, spaces and punctuation.\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "import collections\ndef is_anagram(str1: str, str2: str) -> bool:\n    # Remove non-alphabetic characters and convert to lowercase\n    str1 = ''.join(char for char in str1.lower() if char.isalpha())\n    str2 = ''.join(char for char in str2.lower() if char.isalpha())\n    \n    # Count the frequency of each character in both strings\n    count1 = collections.Counter(str1)\n    count2 = collections.Counter(str2)\n    \n    # Check if both counts are equal\n    return count1 == count2",
    "tests": [
        "assert is_anagram('listen', 'silent') == True",
        "assert is_anagram('abcdefghi', 'ihgfedcba') == True",
        "assert is_anagram('hello', 'world') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}