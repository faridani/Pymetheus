{
    "title": "Anagram Detector (Hard)",
    "description": "Write a function `anagram_checker` that checks if two given strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of another, using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef anagram_checker(str1: str, str2: str) -> bool:\n``` \n\n#### Input\n- `str1`, `str2` (str): Two strings that may contain letters, numbers, and spaces.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "import collections\ndef anagram_checker(str1: str, str2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    str1 = ''.join([char.lower() for char in str1.strip() if char.isalpha()]).strip()\n    str2 = ''.join([char.lower() for char in str2.strip() if char.isalpha()]).strip()\n    # Check if the frequency of each letter is equal in both strings\n    freq1 = collections.Counter(str1)\n    freq2 = collections.Counter(str2)\n    return freq1 == freq2",
    "tests": [
        "assert anagram_checker('listen', 'silent') == True",
        "assert anagram_checker('actinic', 'nicotine') == True",
        "assert anagram_checker('alpha', 'apple') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}