{
    "title": "Anagram Checker (Hard)",
    "description": "Given two strings, determine if they are anagrams of each other. An anagram is a word or phrase that consists of the same letters as another word or phrase, but may have different word order.\n\n#### Function Signature\n```python\ndef are_anagrams(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1`, `s2` (str): Two strings that may contain the same letters in different orders.\n\n#### Output\n- Returns `True` if the two input strings are anagrams, `False` otherwise.",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    # Convert both strings to lowercase and remove non-alphabetic characters\n    s1 = ''.join(sorted(c.lower() for c in s1 if c.isalpha()))\n    s2 = ''.join(sorted(c.lower() for c in s2 if c.isalpha()))\n    # Check if the two sorted strings are equal\n    return len(s1) == len(s2) and s1 == s2",
    "tests": [
        "assert are_anagrams(\"listen\", \"silent\") == True",
        "assert are_anagrams(\"apple\", \"appel\") == True",
        "assert are_anagrams(\"hello\", \"world\") == False",
        "assert are_anagrams(\"example\", \"main\") == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}