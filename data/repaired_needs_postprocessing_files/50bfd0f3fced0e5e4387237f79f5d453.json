{
    "title": "Hard: Matrix Spiral Traversal",
    "description": "Given a matrix of integers, traverse it in a spiral order and return the elements as a list. \n#### Function Signature\n```python\ndef spiral_traversal(matrix):\n``` \n#### Input\n- `matrix` (list of lists of ints): A rectangular matrix of integers.\n#### Output\n- Returns a list of integers representing the elements of the matrix in spiral order.",
    "code": "def spiral_traversal(matrix):\n    m, n = len(matrix), len(matrix[0])\n    top, bottom = 0, m - 1\n    left, right = 0, n - 1\n    result = []\n    while top <= bottom and left <= right:\n        # Traverse right\n        for i in range(left, right + 1):\n            result.append(matrix[top][i])\n        top += 1\n        \n        # Traverse down\n        for i in range(top, bottom + 1):\n            result.append(matrix[i][right])\n        right -= 1\n        if top <= bottom and left <= right:\n            # Traverse left\n            for i in range(right, left - 1, -1):\n                result.append(matrix[bottom][i])\n            bottom -= 1\n            \n            # Traverse up\n            for i in range(bottom, top - 1, -1):\n                result.append(matrix[i][left])\n            left += 1\n    return result",
    "tests": [
        "assert spiral_traversal([[1,2,3],[4,5,6],[7,8,9]]) == [1,2,3,6,9,8,7,4,5]",
        "assert spiral_traversal([[1,2],[3,4]]) == [1,2,4,3]"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}