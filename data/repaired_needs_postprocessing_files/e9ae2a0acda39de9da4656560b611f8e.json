{
    "title": "Valid Sudoku Checker",
    "description": "Write a function `is_valid_sudoku` that checks if a given 9x9 grid represents a valid Sudoku puzzle. A valid Sudoku is a partially filled-in 9x9 grid, where each row, column and sub-grid (of size 3x3) contains the digits from 1 to 9 without repetition.",
    "code": "def is_valid_sudoku(grid: list[list[int]]) -> bool:\n    for i in range(9):\n        row = [cell for cell in grid[i]]\n        col = [grid[j][i] for j in range(9)]\n        box_row, box_col = 0, 0\n        for k in range(3):\n            box_row += grid[i][k*3:(k+1)*3]\n            box_col += [grid[j][k*3:(k+1)*3][i] for j in range(9)]\n        if not all(set(row) == set([1, 2, 3, 4, 5, 6, 7, 8, 9]) and len(set(row)) == 9):\n            return False\n        if not all(set(col) == set([1, 2, 3, 4, 5, 6, 7, 8, 9]) and len(set(col)) == 9):\n            return False\n        for k in range(3):\n            if not all(set(box_row[k*3:(k+1)*3]) == set([1, 2, 3, 4, 5, 6, 7, 8, 9]) and len(set(box_row[k*3:(k+1)*3])) == 9):\n                return False\n            if not all(set(box_col[k*3:(k+1)*3][i]) == set([1, 2, 3, 4, 5, 6, 7, 8, 9]) and len(set(box_col[k*3:(k+1)*3][i])) == 9):\n                return False\n    return True",
    "tests": [
        "assert is_valid_sudoku([[5,3],[6,0,9,8,7,4,2,1,3],[4,2,7,8,5,3,9,6,1],[1,9,8,3,4,2,5,6,7],[8,5,6,1,4,3,2,9,0],[4,2,6,5,3,7,8,1,9],[7,1,3,9,2,4,5,6,8],[9,6,1,7,5,3,4,2,8],[6,8,7,1,9,5,3,4,2]]) == True",
        "assert is_valid_sudoku([[5,3],[6,0,9,8,7,4,2,1,3],[4,2,7,8,5,3,9,6,1],[1,9,8,3,4,2,5,6,7],[8,5,6,1,4,3,2,9,0],[4,2,6,5,3,7,8,1,9],[7,1,3,9,2,4,5,6,8],[9,6,1,7,5,3,4,2,8],[6,8,7,1,9,5,3,4,99]]) == False"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}