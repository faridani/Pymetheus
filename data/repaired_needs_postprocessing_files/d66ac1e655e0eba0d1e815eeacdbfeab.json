{
    "title": "Maximum Increasing Subsequence",
    "description": "A subsequence of an array is a sequence that can be obtained by deleting some elements from the array without changing their order. Write a function `max_increasing_subsequence` that takes a list of integers as input and returns the maximum length of an increasing subsequence in the given array.\n\n#### Function Signature\n```python\ndef max_increasing_subsequence(arr: list[int]) -> int:\n```\n\n#### Input\n- `arr` (list[int]): A list of integers.\n\n#### Output\n- Returns the maximum length of an increasing subsequence in the input array.\n",
    "code": "def max_increasing_subsequence(arr: list[int]) -> int:\n    if not arr:\n        return 0\n    dp = [1] * len(arr)\n    for i in range(1, len(arr)):\n        for j in range(i):\n            if arr[i] > arr[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return max(dp)",
    "tests": [
        "assert max_increasing_subsequence([10, 22, 9, 33, 21, 50, 41, 60]) == 6",
        "assert max_increasing_subsequence([5, 2, 8, 3, 4, 1, 7, 6, 9]) == 6",
        "assert max_increasing_subsequence([]) == 0",
        "assert max_increasing_subsequence([1, 2, 3, 4, 5]) == 5"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}