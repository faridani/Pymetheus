{
    "title": "Medium Python Coding Question: Anagram Checker",
    "description": "An anagram is a word or phrase formed by rearranging the letters of another, such as 'cinema', formed from 'iceman'. Write a function `is_anagram` that checks if two given strings are anagrams of each other. The function should ignore spaces and be case-insensitive.\n\n#### Function Signature\n```python\ndef is_anagram(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1` (str): First string to compare.\n- `s2` (str): Second string to compare.\n\n#### Output\n- Returns `True` if the strings are anagrams of each other, `False` otherwise.\n\n#### Constraints\n- The length of both input strings will not exceed 500 characters.",
    "code": "def is_anagram(s1: str, s2: str) -> bool:\n    # Remove spaces and convert to lowercase for both strings\n    cleaned_str1 = ''.join(char.lower() for char in s1 if char not in string.whitespace)\n    cleaned_str2 = ''.join(char.lower() for char in s2 if char not in stringe.whitespace)\n    # Sort the characters of both strings and compare\n    return sorted(cleaned_str1) == sorted(cleaned_str2)",
    "tests": [
        "assert is_anagram('Listen', 'Silent') == True",
        "assert is_anagram('Astronomer', 'Moon starer') == True",
        "assert is_anagram('Hello World', 'World Hello') == True",
        "assert is_anagram('Pear tree', 'Spare Tree') == True",
        "assert is_anagram('Python Programming', 'Gram Ringing Omni Hot Pits') == False"
    ],
    "model": "phi3:14b-repaired by Llama 3"
}