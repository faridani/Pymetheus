{
    "title": "Elegant Euler's Totient Function",
    "description": "The Euler's totient function \u03c6(n) gives the number of positive integers less than or equal to n that are relatively prime to n. Write a function `totient` that calculates the Euler's totient function for a given integer n.\n\n#### Function Signature\n```python\ndef totient(n: int) -> int:\n``` \n\n#### Input\n- `n` (int): A positive integer for which the Euler's totient function is to be calculated.\n\n#### Output\n- Returns the Euler's totient function value for the given input `n`.\n",
    "code": "import math\ndef totient(n: int) -> int:\n    if n < 2:\n        return n\n    res = 1\n    p = 2\n    while p * p <= n:\n        if math.gcd(p, n) == 1:\n            res *= (p - 1)\n        p += 1\n    if math.gcd(n, p) == 1:\n        res *= (p - 1)\n    return int(res)",
    "tests": [
        "assert totient(1) == 1",
        "assert totient(2) == 1",
        "assert totient(3) == 2",
        "assert totient(4) == 2",
        "assert totient(5) == 4",
        "assert totient(6) == 2",
        "assert totient(7) == 6",
        "assert totient(8) == 4",
        "assert totient(9) == 6",
        "assert totient(10) == 4"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}