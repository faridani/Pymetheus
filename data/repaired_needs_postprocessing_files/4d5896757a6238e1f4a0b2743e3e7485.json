{
    "title": "Anagram Detector (Hard)",
    "description": "Write a function `are_anagrams` that checks if two given strings are anagrams of each other. Two words or phrases are anagrams of each other when the letters in one word can be rearranged to form the other word.\n\n#### Function Signature\n```python\ndef are_anagrams(str1: str, str2: str) -> bool:\n``` \n\n#### Input\n- `str1` (str): A non-empty string.\n- `str2` (str): Another non-empty string.\n\n#### Output\n- Returns `True` if the two input strings are anagrams, `False` otherwise.\n",
    "code": "def are_anagrams(str1: str, str2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    str1 = ''.join([char for char in str1.lower() if char not in [' ', '']])\n    str2 = ''.join([char for char in str2.lower() if char not in [' ', '']])\n    # Sort the strings alphabetically\n    sorted_str1 = sorted(list(str1))\n    sorted_str2 = sorted(list(str2))\n    # Check if the sorted strings are equal\n    return len(str1) == len(str2) and sorted_str1 == sorted_str2",
    "tests": [
        "assert are_anagrams(\"listen\", \"silent\") == True",
        "assert are_anagrams(\"actinium\", \"nicotine\") == True",
        "assert are_anagrams(\"hello\", \"world\") == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}