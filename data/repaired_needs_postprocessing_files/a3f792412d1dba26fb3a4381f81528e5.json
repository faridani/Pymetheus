{
    "title": "Maximizing Sum of Products",
    "description": "In a factory, there are n machines that can produce products. Each machine can produce different amounts of each product. Write a function `max_sum_of_products` that takes in the number of machines (n), and the production capacities of each machine as input.\n#### Function Signature\n```python\ndef max_sum_of_products(n: int, capacities: list) -> int:\n```\n\n#### Input\n- `n` (int): The number of machines.\n- `capacities` (list): A list of n integers representing the production capacities of each machine. Each integer represents the maximum amount of a product that can be produced by one machine.\n\n#### Output\n- Returns the maximum sum of products that can be produced using all machines, given their capacities.",
    "code": "def max_sum_of_products(n: int, capacities: list) -> int:\n    total_capacity = 0\n    for capacity in capacities:\n        total_capacity += capacity\n    return min(total_capacity // len(capacities), max(capacities)) * n",
    "tests": [
        "assert max_sum_of_products(3, [1, 2, 3]) == 6",
        "assert max_sum_of_products(4, [4, 5, 6, 7]) == 12",
        "assert max_sum_of_products(5, [8, 9, 10, 11, 12]) == 15",
        "assert max_sum_of_products(2, [1, 100]) == 101"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}