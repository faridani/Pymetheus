{
    "title": "Anagram Detection (Hard)",
    "description": "Determine if two strings are anagrams of each other. Anagrams are words or phrases that contain the same exact letters, but in a different order.\n#### Function Signature\n```python\ndef is_anagram(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1` (str): A string that may contain only letters.\n- `str2` (str): Another string that may contain only letters.\n\n#### Output\n- Returns `True` if the two input strings are anagrams, `False` otherwise.\n\n#### Constraints\n- Both `str1` and `str2` will have a length between 1 and 100.",
    "code": "def is_anagram(str1: str, str2: str) -> bool:\n    # Sort the characters in each string\n    sorted_str1 = sorted(list(str1))\n    sorted_str2 = sorted(list(str2))\n    \n    # Check if the sorted strings are equal\n    return sorted_str1 == sorted_str2",
    "tests": [
        "assert is_anagram('listen', 'silent') == True",
        "assert is_anagram('hello', 'world') == False",
        "assert is_anagram('Actinium', 'Mendacity') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}