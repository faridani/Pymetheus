{
    "title": "Medium: Longest Increasing Subsequence",
    "description": "A description of the problem in string form, the description may contain function signature, input format, output format, constraints and hints. Example: Given an array of n integers, write a function to find the length of the longest increasing subsequence (LIS). An increasing subsequence is a sequence of numbers that are increasing.\n\n#### Function Signature\n```\ndef lis(arr: list) -> int:\n``` \n\n#### Input\n- `arr` (list): A list of n integers.\n\n#### Output\n- Returns the length of the longest increasing subsequence in the input array.\n",
    "code": "from typing import List\n\ndef lis(arr: List[int]) -> int:\n    n = len(arr)\n    dp = [1] * n\n    \n    for i in range(1, n):\n        for j in range(i):\n            if arr[i] > arr[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n                \n    return max(dp)",
    "tests": [
        "assert lis([10, 22, 9, 33, 21, 50, 41, 60]) == 5",
        "assert lis([10]) == 1",
        "assert lis([1]) == 1",
        "assert lis([]) == 0"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}