{
    "title": "'Anagram Detection (Medium)'",
    "description": "Given two strings, write a function `anagram` that checks if the given strings are anagrams of each other. An anagram is a word or phrase that contains all the same letters as another word or phrase but in a different arrangement.\n#### Function Signature\n```python\ndef anagram(str1: str, str2: str) -> bool:\n``` \n\n#### Input\n- `str1` (str): A non-empty string containing only lowercase English letters.\n- `str2` (str): Another non-empty string containing only lowercase English letters.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\n",
    "code": "def anagram(str1: str, str2: str) -> bool:\n    # Remove spaces from the given strings\n    str1 = str1.replace(' ', '').lower()\n    str2 = str2.replace(' ', '').lower()\n    \n    # If lengths of the strings are not equal, they cannot be anagrams\n    if len(str1) != len(str2):\n        return False\n    \n    # Sort both strings and compare them\n    sorted_str1 = sorted(str1)\n    sorted_str2 = sorted(str2)\n    return sorted_str1 == sorted_str2",
    "tests": [
        "assert anagram('listen', 'silent') == True",
        "assert anagram('hello', 'world') == False",
        "assert anagram('act', 'cat') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}