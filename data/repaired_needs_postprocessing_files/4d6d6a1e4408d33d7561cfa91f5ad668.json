{
    "title": "Number Sequence Checker (Hard)",
    "description": "A number sequence is a series of numbers that are generated by applying a specific operation to the previous term. Write a function `is_arithmetic_sequence` that checks if a given list of integers represents an arithmetic sequence.\n\n#### Function Signature\n```python\ndef is_arithmetic_sequence(numbers: list) -> bool:\n``` \n\n#### Input\n- `numbers` (list): A list of integers that may represent an arithmetic sequence.\n\n#### Output\n- Returns `True` if the input list represents an arithmetic sequence, `False` otherwise.",
    "code": "import math\ndef is_arithmetic_sequence(numbers: list) -> bool:\n    # Check if the list has at least three elements\n    if len(numbers) < 3:\n        return False\n    # Calculate the difference between adjacent terms\n    differences = [numbers[i+1] - numbers[i] for i in range(len(numbers)-1)]\n    # Check if all differences are equal\n    return len(set(differences)) == 1\n",
    "tests": [
        "assert is_arithmetic_sequence([2, 4, 6, 8]) == True",
        "assert is_arithmetic_sequence([1, 3, 5, 7]) == True",
        "assert is_arithmetic_sequence([1, 2, 3, 4]) == False",
        "assert is_arithmetic_sequence([-2, -1, 0, 1]) == True"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}