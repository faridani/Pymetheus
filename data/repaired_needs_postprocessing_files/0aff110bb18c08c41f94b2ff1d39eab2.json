{
    "title": "Reverse Words Checker (Hard)",
    "description": "Write a function `is_reverse_words` that checks if a given string, after removing all spaces and punctuation, reads the same forwards as it does backwards, word by word. However, unlike traditional palindromes, the words in this case can be in any order.\n\n#### Function Signature\n```python\ndef is_reverse_words(s: str) -> bool:\n``` \n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns `True` if the sequence of words in the input string reads the same forwards as it does backwards, ignoring case and order, `False` otherwise.",
    "code": "import re\ndef is_reverse_words(s: str) -> bool:\n    # Remove non-alphanumeric characters and convert to lowercase\n    s = re.sub('[^a-zA-Z0-9]', '', s).lower()\n    # Split the string into words\n    words = s.split()\n    # Check if the sequence of words reads the same forwards and backwards\n    return words == words[::-1]",
    "tests": [
        "assert is_reverse_words(\"Listen, melon, men\") == True",
        "assert is_reverse_words(\"This is a test\") == False",
        "assert is_reverse_words(\"Wow, Madam\") == True",
        "assert is_reverse_words(\"A man, a plan, a canal, Panama\") == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}