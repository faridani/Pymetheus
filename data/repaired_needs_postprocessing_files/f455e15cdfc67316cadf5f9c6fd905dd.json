{
    "title": "Maximum Subarray Sum",
    "description": "Given an array of integers, find the contiguous subarray with the maximum sum.\n#### Function Signature\n```python\ndef maxSubArraySum(arr: List[int]) -> int:\n```\n\n#### Input\n- `arr` (List[int]): A list of integers representing an array.\n\n#### Output\n- Returns the maximum sum of a contiguous subarray in the given array.",
    "code": "def maxSubArraySum(arr: List[int]) -> int:\n    # Initialize variables for maximum subarray and current subarray sum\n    max_sum = arr[0]\n    current_sum = arr[0]\n    \n    # Iterate through the array\n    for num in arr[1:]:\n        # If the current sum becomes negative, reset it to 0 and continue\n        if current_sum <= 0:\n            current_sum = 0\n        \n        # Add the current number to the current sum and update maximum sum if necessary\n        current_sum += num\n        max_sum = max(max_sum, current_sum)\n    \n    # Return the maximum subarray sum\n    return max_sum",
    "tests": [
        "assert maxSubArraySum([1, -2, 3, 4, -5, 6]) == 7",
        "assert maxSubArraySum([-1, -2, -3]) == 0",
        "assert maxSubArraySum([5, -3, 8, 5, -2, 7]) == 18"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}