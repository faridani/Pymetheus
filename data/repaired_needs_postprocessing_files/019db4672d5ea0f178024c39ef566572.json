{
    "title": "Anagram Detector (Hard)",
    "description": "Given two strings, determine if they are anagrams of each other. Anagrams are words or phrases that contain the same letters in the same frequency. For example, 'listen' and 'silent' are anagrams.\n\n#### Function Signature\n```python\ndef are_anagrams(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1`, `s2` (str): Two strings that may contain letters and nothing else.\n\n#### Output\n- Returns `True` if the two input strings are anagrams, `False` otherwise.\n",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    # Ensure that both strings have the same length\n    if len(s1) != len(s2):\n        return False\n    \n    # Count the frequency of each letter in both strings\n    counts = Counter(s1) - Counter(s2)\n    \n    # If there are any letters that do not have the same count in both strings, return False\n    for char, count in counts.items():\n        if count != 0:\n            return False\n    \n    # If no letters had different counts, the strings are anagrams\n    return True",
    "tests": [
        "assert are_anagrams('listen', 'silent') == True",
        "assert are_anagrams('racecar', 'craecer') == True",
        "assert are_anagrams('hello', 'world') == False",
        "assert are_anagrams('a man a plan cane panama', 'amanaplanacanalpanama') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}