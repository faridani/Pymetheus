{
    "title": "Easy String Compression",
    "description": "Given a string, write a function `compress` that compresses it using the following rules:\n- Consecutive identical characters are replaced with the character followed by the number of times it appears. For example, 'aaa' becomes 'a3'.\n- If the compressed string is not smaller than the original string, return the original string.\n\n#### Function Signature\n```python\ndef compress(s: str) -> str:\n```\n\n#### Input\n- `s` (str): A string consisting of lowercase letters.\n\n#### Output\n- Returns the compressed string if it is smaller than the original string, otherwise returns the original string.",
    "code": "def compress(s: str) -> str:\n    if len(s) <= 1:\n        return s\n    compressed = ''\n    count = 1\n    prev_char = s[0]\n\n    for i in range(1, len(s)):\n        if s[i] == prev_char:\n            count += 1\n        else:\n            compressed += prev_char + (str(count) if count > 1 else '')\n            prev_char = s[i]\n            count = 1\n    compressed += prev_char + (str(count) if count > 1 else '')\n\n    return compressed if len(compressed) < len(s) else s",
    "tests": [
        "assert compress('aabcccccaaa') == 'a2b1c5a3'",
        "assert compress('abcdefg') == 'abcdefg'",
        "assert compress('') == ''"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}