{
    "title": "Fibonacci Sequence with Constraints",
    "description": "Write a function `fibonacci_sequence` that generates the Fibonacci sequence up to a given number, while ignoring any numbers in the sequence that are not prime. A prime number is a natural number greater than 1 that has no divisors other than 1 and itself.\n#### Function Signature\n```python\ndef fibonacci_sequence(n: int) -> list:\n``` \n#### Input\n- `n` (int): The maximum value up to which the Fibonacci sequence should be generated, including only prime numbers.\n#### Output\n- Returns a list of prime Fibonacci numbers up to `n`. \n",
    "code": "import math\ndef is_prime(num):\n    if num < 2:\n        return False\n    for i in range(2, int(math.sqrt(num)) + 1):\n        if num % i == 0:\n            return False\n    return True\ndef fibonacci_sequence(n: int) -> list:\n    sequence = [0, 1]\n    while sequence[-1] <= n and (sequence[-1] > 1 or sequence[-2] > 1):\n        next_num = sequence[-1] + sequence[-2]\n        if is_prime(next_num):\n            sequence.append(next_num)\n    return sequence",
    "tests": [
        "assert set(fibonacci_sequence(100)) == {0, 1, 1, 2, 3, 5, 8, 13, 21, 34}",
        "assert all(is_prime(num) for num in fibonacci_sequence(50))",
        "assert all(num > 1 for num in fibonacci_sequence(20))"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}