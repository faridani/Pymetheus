{
    "title": "Minimum Absolute Difference",
    "description": "Given a non-empty array of integers, find and return the minimum absolute difference between any two elements in the array. The array may contain duplicate values.\n\n#### Function Signature\n```python\ndef min_abs_difference(nums: List[int]) -> int:\n```\n\n#### Input\n- `nums` (List[int]): A list of integers which can have duplicates and may be unsorted.\n\n#### Output\n- Returns an integer representing the minimum absolute difference between any two elements in the array. If all numbers are identical, return 0.\n\nfrom typing import List\ndef min_abs_difference(nums: List[int]) -> int:\n    if len(nums) <= 1:\n        return 0\n    nums.sort()\n    min_diff = abs(nums[1] - nums[0])\n    for i in range(1, len(nums) - 1):\n        current_diff = abs(nums[i + 1] - nums[i])\n        if current_diff < min_diff:\n            min_diff = current_diff\n    return min_diff",
    "code": "from typing import List\ndef min_abs_difference(nums: List[int]) -> int:\n    if len(nums) <= 1:\n        return 0\n    nums.sort()\n    min_diff = abs(nums[1] - nums[0])\n    for i in range(1, len(nums) - 1):\n        current_diff = abs(nums[i + 1] - nums[i])\n        if current_diff < min_diff:\n            min_diff = current_diff\n    return min_diff",
    "tests": [
        "assert min_abs_difference([4, -2, 5, 3]) == 0",
        "assert min_abs_difference([-1, 5, 10, 9]) == 4",
        "assert min_abs_difference([1, 2, 3, 4, 5]) == 1",
        "assert min_abs_difference([7]) == 0"
    ],
    "model": "qwen2:7b-repaired by Llama 3"
}