{
    "title": "'Mirror Sequence Checker (Easy)'",
    "description": "A sequence of integers is considered a mirror sequence if it reads the same backward as forward. Write a function `is_mirror` that checks if a given list of integers forms a mirror sequence.\n\n#### Function Signature\n```python\ndef is_mirror(numbers: List[int]) -> bool:\n``` \n\n#### Input\n- `numbers` (List[int]): A list of integers, possibly with duplicates.\n\n#### Output\n- Returns `True` if the input list forms a mirror sequence, `False` otherwise.",
    "code": "def is_mirror(numbers: List[int]) -> bool:\n    # Check the length of the list to make sure it's even\n    if len(numbers) % 2 != 0:\n        return False\n    # Zip the input list with itself reversed\n    numbers, numbers_reversed = zip(*[numbers, reversed(numbers)])\n    # Check if each pair of elements is equal\n    for i in range(len(numbers) // 2):\n        if numbers[i] != numbers_reversed[i]:\n            return False\n    \n    return True",
    "tests": [
        "assert is_mirror([1, 2, 3, 2, 1]) == True",
        "assert is_mirror([1, 2, 2, 1]) == True",
        "assert is_mirror([1, 2, 3, 4, 3, 2, 1]) == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}