{
    "title": "'Anagram Checker (Easy)'",
    "description": "Given two strings, check if they are anagrams of each other. An anagram is a word or phrase that is formed by rearranging the letters of another word or phrase. For example: 'listen' and 'silent' are anagrams.\n#### Function Signature\n```python\ndef are_anagrams(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1`, `str2` (str): Two strings that may contain letters, numbers, spaces and punctuation.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\n",
    "code": "def are_anagrams(str1: str, str2: str) -> bool:\n    # Remove non-alphabetic characters and convert to lowercase\n    str1 = ''.join(char for char in str1 if char.isalpha()).lower()\n    str2 = ''.join(char for char in str2 if char.isalpha()).lower()\n    # Sort the strings\n    return sorted(str1) == sorted(str2)\n",
    "tests": [
        "assert are_anagrams('listen', 'silent') == True",
        "assert are_anagrams('hello', 'olleh') == True",
        "assert are_anagrams('racecar', 'caracerace') == True",
        "assert are_anagrams('book', 'cool') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}