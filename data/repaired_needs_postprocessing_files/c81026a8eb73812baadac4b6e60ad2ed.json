{
    "title": "'Anagram Detection (Hard)'",
    "description": "Given two strings, determine if they are anagrams of each other. Anagrams are words or phrases that contain the same letters with a different arrangement. For example, 'listen' and 'silent' are anagrams.\n\n#### Function Signature\n```python\ndef are_anagrams(str1: str, str2: str) -> bool:\n``` \n\n#### Input\n- `str1` (str): A string that may contain letters and spaces.\n- `str2` (str): Another string that may contain letters and spaces.\n\n#### Output\n- Returns `True` if the input strings are anagrams, `False` otherwise.\n",
    "code": "def are_anagrams(str1: str, str2: str) -> bool:\n    # Remove any non-alphabetic characters and convert to lowercase\n    cleaned_str1 = ''.join(char for char in str1 if char.isalpha()).lower()\n    cleaned_str2 = ''.join(char for char in str2 if char.isalpha()).lower()\n    \n    # If the lengths are not equal, they cannot be anagrams\n    if len(cleaned_str1) != len(cleaned_str2):\n        return False\n    \n    # Sort and compare the cleaned strings\n    return sorted(cleaned_str1) == sorted(cleaned_str2)",
    "tests": [
        "assert are_anagrams('listen', 'silent') == True",
        "assert are_anagrams('hello', 'olleh') == True",
        "assert are_anagrams('world', 'drtwol') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}