{
    "title": "Hard: Sum of Digits in Substrings",
    "description": "Write a function `sum_of_digits` that calculates the sum of all substrings of a given string. Each substring must be at least 2 characters long, and the sum is calculated by adding up the digits (0-9) in each substring.\n\n#### Function Signature\n```python\ndef sum_of_digits(s: str) -> int:\n``` \n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns the sum of all substrings of the input string.",
    "code": "import re\ndef sum_of_digits(s: str) -> int:\n    total_sum = 0\n    for i in range(len(s)):\n        for j in range(i+2, len(s)+1):\n            substring = s[i:j]\n            digits = re.findall('[0-9]', substring)\n            if digits:\n                total_sum += sum(map(int, digits))\n    return total_sum\n",
    "tests": [
        "assert sum_of_digits('abcdef') == 15",
        "assert sum_of_digits('12345') == 6",
        "assert sum_of_digits('abc123') == 9",
        "assert sum_of_digits('0a1b2c3') == 18"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}