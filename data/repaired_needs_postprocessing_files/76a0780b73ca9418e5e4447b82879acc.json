{
    "title": "'Radix Sort: A Medium Level Python Problem for ACM-ICPC Competition'",
    "description": "In computer science, Radix Sort is a sorting algorithm that sorts data based on number system digits. This algorithm is particularly efficient when the input values are in a large range, like telephone numbers or IP addresses.\n\n#### Function Signature\n```python\ndef radix_sort(arr: List[int]) -> List[int]:\n```\n\n#### Input\n- `arr` (List[int]): A list of non-negative integers.\n\n#### Output\n- Returns a sorted version of the input list in ascending order.",
    "code": "def radix_sort(arr: List[int]) -> List[int]:\n    max_digits = len(str(max(arr))) * 10\n    exponent = 1\n    for i in range(max_digits, -1, -1):\n        bucket = [[] for _ in range(10)]\n        # Place the elements into their respective buckets based on the current digit\n        for j in arr:\n            bucket[int(str(j)[i] or 0)].append(j)\n        # Reconstruct the array from the sorted buckets\n        arr = [elem for sublist in bucket for elem in sublist]\n        exponent *= 10\n    return arr",
    "tests": [
        "assert radix_sort([2, 43, 65, 87, 9]) == [2, 65, 87, 43, 9]",
        "assert radix_sort([1, 20, 35, 4, 5]) == [1, 4, 5, 20, 35]"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}