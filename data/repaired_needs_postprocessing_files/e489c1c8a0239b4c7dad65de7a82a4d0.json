{
    "title": "Palindromic Substrings Count",
    "description": "Write a function `count_palindromes` that takes a string as input and returns the number of palindromic substrings it contains.\n#### Function Signature\n```python\ndef count_palindromes(s: str) -> int:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n#### Output\n- Returns the number of palindromic substrings in the input string.",
    "code": "def count_palindromes(s: str) -> int:\n    # Initialize a 2D boolean matrix to store subproblems solved or not\n    dp = [[False] * len(s) for _ in range(len(s))]\n\ndef is_palindrome(start, end):\n    if dp[start][end]:\n        return True\n    # Base case: single character palindromes are always true\n    if start == end:\n        dp[start][end] = True\n        return True\n    # If the center is not a space or punctuation character,\n    elif s[start] == s[end] and (start + 1 < end - 1 or (start + 1 == end - 1 and s[start+1] != ' ')):\n        dp[start][end] = True\n        return True\n    return False\n\n    # Iterate through the string from left to right, expanding centers horizontally and diagonally\n    count = 0\n    for i in range(len(s)):\n        for j in range(i, -1, -1):\n            if is_palindrome(i, j):\n                count += 1\n    \n    return count",
    "tests": [
        "assert count_palindromes('racecar') == 6",
        "assert count_palindromes('abbba') == 4",
        "assert count_palindromes('aa') == 1",
        "assert count_palindromes(' ') == 0"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}