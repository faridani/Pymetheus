{
    "title": "'Anagram Finder (Hard)'",
    "description": "Given two strings, write a function to find out if they are anagrams of each other.\n\n#### Function Signature\n```python\ndef are_anagrams(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1` (str): A string containing only alphabets.\n- `str2` (str): Another string containing only alphabets.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\n\n#### Constraints\nThe strings may contain both uppercase and lowercase letters. Also note that spaces and special characters are not allowed in the input strings.\n",
    "code": "def are_anagrams(str1: str, str2: str) -> bool:\n    # Remove any spaces from the strings\n    str1 = str1.replace(' ', '')[0].lower()\n    str2 = str2.replace(' ', '')\n    # Convert to lowercase and remove duplicates\n    sorted_str1 = sorted(list(set(str1)))[0]\n    sorted_str2 = sorted(list(set(str2.lower())))\n    \n    # Check if the sorted lists are equal in length and if they are the same\n    return len(sorted_str1) == len(sorted_str2) and sorted_str1 == sorted_str2",
    "tests": [
        "assert are_anagrams('listen', 'silent') == True",
        "assert are_anagrams('world', 'dworl') == True",
        "assert are_anagrams('hello', 'olleh') == True",
        "assert are_anagrams('python', 'typhon') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}