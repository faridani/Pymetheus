{
    "title": "Reverse Sentence Checker (Hard)",
    "description": "Write a function `is_reverse_sentence` that checks if a given string is the reverse of another string (ignoring spaces, punctuation, and case sensitivity). The sentences may contain any characters except for backslashes or single quotes. The comparison between the original sentence and its reverse should be done at the character level.\n\n#### Function Signature\n```python\ndef is_reverse_sentence(s1: str, s2: str) -> bool:\n``` \n\n#### Input\n- `s1` (str): The original sentence to check.\n- `s2` (str): The reverse of the original sentence.\n\n#### Output\n- Returns `True` if both strings are identical at character level, ignoring spaces, punctuation, and case sensitivity. If either string contains backslashes or single quotes, an error will be raised.",
    "code": "import re\ndef is_reverse_sentence(s1: str, s2: str) -> bool:\n    # Remove non-alphanumeric characters and spaces from both strings\n    s1 = re.sub('[^a-zA-Z0-9]+', '', s1).lower().replace(' ', '')\n    s2 = re.sub('[^a-zA-Z0-9]+', '', s2).lower().replace(' ', '')\n    # Check if the cleaned strings are identical and have the same length\n    return len(s1) == len(s2) and s1 == s2",
    "tests": [
        "assert is_reverse_sentence(\"Hello, World!\", \"dlroW ,olleH\") == True",
        "assert is_reverse_sentence(\"I love Python\", \"tnopyt revol I\") == True",
        "assert is_reverse_sentence(\"My name is John Doe\", \"esoo dnoJ si nam ym\") == False",
        "assert is_reverse_sentence(\"This is a test.\", \" .setst etsi siht\") == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}