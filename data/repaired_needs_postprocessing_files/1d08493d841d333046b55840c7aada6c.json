{
    "title": "Prime Number Checker (Hard)",
    "description": "Write a function `is_prime` that checks if a given number is prime.\n\n#### Function Signature\n```\ndef is_prime(n: int) -> bool:\n``` \n\n#### Input\n- `n` (int): A positive integer.\n\n#### Output\n- Returns `True` if the input number is a prime, `False` otherwise.",
    "code": "def is_prime(n: int) -> bool:\n    # Check for edge cases\n    if n <= 1: return False\n    if n == 2 or n == 3: return True\n    # Check up to the square root of `n`\n    for num in range(2, int(n**0.5) + 1):\n        if n % num == 0: return False\n    return True",
    "tests": [
        "assert is_prime(2) == True",
        "assert is_prime(3) == True",
        "assert is_prime(4) == False",
        "assert is_prime(5) == True",
        "assert is_prime(6) == False",
        "assert is_prime(7) == True",
        "assert is_prime(10) == False",
        "assert is_prime(23) == True",
        "assert is_prime(41) == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}