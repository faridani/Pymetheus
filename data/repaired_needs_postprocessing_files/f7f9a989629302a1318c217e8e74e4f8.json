{
    "title": "'Anagram Detection (Hard)'",
    "description": "An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Write a function `is_anagram` that checks if two given strings are anagrams of each other.\n#### Function Signature\n```python\ndef is_anagram(s1: str, s2: str) -> bool:\n``` \n#### Input\n- `s1`, `s2` (str): Two strings that may contain letters and spaces, but no numbers or punctuation.\n#### Output\n- Returns `True` if the input strings are anagrams of each other, `False` otherwise.",
    "code": "def is_anagram(s1: str, s2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    s1 = ''.join(sorted(s1.lower().replace(' ', '')))\n    s2 = ''.join(sorted(s2.lower().replace(' ', '')))\n    \n    # Compare the sorted strings for equality\n    return s1 == s2",
    "tests": [
        "assert is_anagram('Listen', 'Silent') == True",
        "assert is_anagram('Racecar', 'Carcarer') == True",
        "assert is_anagram('Hello', 'world') == False",
        "assert is_anagram('Two anagrams', 'A ant on a log') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}