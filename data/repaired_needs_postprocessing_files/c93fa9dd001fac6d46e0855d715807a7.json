{
    "title": "Anagram Checker (Hard)",
    "description": "An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Write a function `anagram_checker` that checks if two given strings are anagrams of each other.#### Function Signature```pythonndef anagram_checker(str1: str, str2: str) -> bool:```\n\n#### Input\n- `str1` (str): A string that may contain letters, numbers, spaces, and punctuation.\n- `str2` (str): Another string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "import collections\ndef anagram_checker(str1: str, str2: str) -> bool:\n    # Remove non-alphanumeric characters and convert to lowercase\n    str1 = ''.join(char for char in str1.lower() if char in string.ascii_letters + string.digits)\n    str2 = ''.join(char for char in str2.lower() if char in string.ascii_letters + string.digits)\n    # Count the frequency of each letter in both strings\n    counter1 = collections.Counter(str1)\n    counter2 = collections.Counter(str2)\n    # Check if both counters have the same elements and same frequencies\n    return counter1 == counter2",
    "tests": [
        "assert anagram_checker('listen', 'silent') == True",
        "assert anagram_checker('motorcycle', 'cyclemotor') == True",
        "assert anagram_checker('hello', 'world') == False",
        "assert anagram_checker('A man, a plan, a canal, Panama', 'Panama canal: a plan a man a Panama') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}