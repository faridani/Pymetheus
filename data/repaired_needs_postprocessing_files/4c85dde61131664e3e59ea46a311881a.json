{
    "title": "Easiest FizzBuzz",
    "description": "Write a function `fizzbuzz` that takes an integer `n` as input and returns a list of strings, where each string is either 'Fizz', 'Buzz', or the string representation of the corresponding number from 1 to `n`. If the number is divisible by both 3 and 5, return 'FizzBuzz'. If the number is only divisible by 3, return 'Fizz'. If the number is only divisible by 5, return 'Buzz'. Otherwise, return the string representation of the number. This problem is equivalent to FizzBuzz, a classic coding interview question.\n\n#### Function Signature\ndef fizzbuzz(n: int) -> list[str]:\n\n#### Input\n- `n` (int): An integer representing the upper limit of the sequence.\n\n#### Output\n- A list of strings where each string is either 'Fizz', 'Buzz', or the string representation of a number from 1 to `n`. ",
    "code": "def fizzbuzz(n: int) -> list[str]:\n    result = []\n    for i in range(1, n+1):\n        if i % 3 == 0 and i % 5 == 0:\n            result.append('FizzBuzz')\n        elif i % 3 == 0:\n            result.append('Fizz')\n        elif i % 5 == 0:\n            result.append('Buzz')\n        else:\n            result.append(str(i))\n    return result",
    "tests": [
        "assert fizzbuzz(15) == ['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', '7', '8', 'Fizz', 'Buzz', '11', 'Fizz', '13', '14', 'FizzBuzz']",
        "assert fizzbuzz(3) == ['1', '2', 'Fizz']"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}