{
    "title": "Easy: Number of Islands",
    "description": "You are given a 2D binary matrix where 0 represents land and 1 represents water. Write a function `num_islands` that returns the number of islands in the given matrix.\n\n#### Function Signature\n```python\ndef num_islands(matrix: list[list[int]]) -> int:\n```\n\n#### Input\n- `matrix` (list[list[int]]): A 2D binary matrix where 0 represents land and 1 represents water.\n\n#### Output\n- Returns the number of islands in the given matrix.\n",
    "code": "def num_islands(matrix: list[list[int]]) -> int:\n    if not matrix or not matrix[0]:\n        return 0\n    count = 0\n    for i in range(len(matrix)):\n        for j in range(len(matrix[0])):\n            if matrix[i][j] == 1:\n                self._bfs(matrix, i, j)\n                count += 1\n    return count\n\ndef _bfs(self, matrix: list[list[int]], i: int, j: int):\n    if i < 0 or j < 0 or i >= len(matrix) or j >= len(matrix[0]) or matrix[i][j] == 0:\n        return\n    matrix[i][j] = 0\n    self._bfs(matrix, i-1, j)\n    self._bfs(matrix, i+1, j)\n    self._bfs(matrix, i, j-1)\n    self._bfs(matrix, i, j+1)",
    "tests": [
        "assert num_islands([[0, 0, 1, 0, 0],[0, 0, 1, 0, 0],[1, 1, 1, 1, 0],[0, 0, 0, 0, 0]]) == 1",
        "assert num_islands([[0, 0, 1, 0, 0],[0, 1, 1, 0, 0],[1, 1, 1, 1, 0],[0, 0, 0, 0, 0]]) == 2",
        "assert num_islands([[0, 0, 0, 0, 0],[0, 0, 0, 0, 0],[1, 1, 1, 1, 1],[0, 0, 0, 0, 0]]) == 1",
        "assert num_islands([[0, 0, 0, 0, 0],[0, 0, 0, 0, 0],[0, 0, 0, 0, 0],[0, 0, 0, 0, 0]]) == 0"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}