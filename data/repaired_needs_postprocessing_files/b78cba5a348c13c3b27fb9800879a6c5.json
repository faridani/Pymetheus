{
    "title": "Number of Islands",
    "description": "Given a 2D grid of size M x N containing only values 0 and 1, where 0 represents water and 1 represents land. An island is any connected group of 1s. Write a function `num_islands` that returns the number of islands in the given grid.\n\n#### Function Signature\n```python\ndef num_islands(grid: list[list[int]]) -> int:\n``` \n\n#### Input\n- `grid` (list[list[int]]): A 2D grid of size M x N containing only values 0 and 1, where 0 represents water and 1 represents land.\n\n#### Output\n- Returns the number of islands in the given grid.\n",
    "code": "def num_islands(grid: list[list[int]]) -> int:\n    if not grid or not grid[0]:\n        return 0\n    count = 0\n    for i in range(len(grid)):\n        for j in range(len(grid[i])):\n            if grid[i][j] == 1:\n                dfs(grid, i, j)\n                count += 1\n    return count\n\ndef dfs(grid: list[list[int]], i: int, j: int) -> None:\n    if i < 0 or j < 0 or i >= len(grid) or j >= len(grid[i]) or grid[i][j] != 1:\n        return\n    grid[i][j] = 0\n    dfs(grid, i - 1, j)\n    dfs(grid, i + 1, j)\n    dfs(grid, i, j - 1)\n    dfs(grid, i, j + 1)",
    "tests": [
        "assert num_islands([[0,0,1,0,0],[1,0,1,1,0],[0,1,0,0,0],[0,0,0,1,1],[0,1,0,0,0]]) == 1",
        "assert num_islands([[1,1,0,0,0],[1,1,0,0,0],[0,0,1,0,0],[0,0,0,1,1]]) == 3"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}