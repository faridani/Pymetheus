{
    "title": "Hardest Coding Problem Ever",
    "description": "Write a function `find_nth_fibonacci` that calculates the nth Fibonacci number.\n\n#### Function Signature\n```python\ndef find_nth_fibonacci(n: int) -> int:\n```  \n\n#### Input\n- `n` (int): The index of the Fibonacci number to be returned.\n\n#### Output\n- Returns the nth Fibonacci number.\n\n#### Constraints\n- The Fibonacci sequence starts with 0 and 1.\n- The nth Fibonacci number is defined recursively as F(n) = F(n-1) + F(n-2), where F(0) = 0 and F(1) = 1.\n- The input n is guaranteed to be a non-negative integer.\n",
    "code": "def find_nth_fibonacci(n: int) -> int:\n    if n <= 1:\n        return n\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b",
    "tests": [
        "assert find_nth_fibonacci(0) == 0",
        "assert find_nth_fibonacci(1) == 1",
        "assert find_nth_fibonacci(2) == 1",
        "assert find_nth_fibonacci(3) == 2",
        "assert find_nth_fibonacci(4) == 3",
        "assert find_nth_fibonacci(10) == 55",
        "assert find_nth_fibonacci(20) == 6765",
        "assert find_nth_fibonacci(30) == 832040"
    ],
    "model": "codegemma:7b-repaired by Llama 3"
}