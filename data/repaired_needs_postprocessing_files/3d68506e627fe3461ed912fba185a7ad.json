{
    "title": "Anagram Checker (Medium)",
    "description": "Two strings are anagrams if they contain the same characters, but not necessarily in the same order. Write a function `is_anagram` that checks whether two given strings are anagrams of each other.\n\n#### Function Signature\n```python\ndef is_anagram(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1` (str): First string to check for being an anagram.\n- `s2` (str): Second string to check against the first one for being an anagram.\n\n#### Output\n- Returns `True` if the strings are anagrams, `False` otherwise. Note that case and spaces should be ignored when determining whether two strings are anagrams.",
    "code": "def is_anagram(s1: str, s2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    s1 = ''.join(char.lower() for char in s1 if char.isalnum())\n    s2 = ''.join(char.lower() for char in s2 if char.isalnum())\n    # Compare sorted characters of both strings\n    return sorted(s1) == sorted(s2)\n",
    "tests": [
        "assert is_anagram('Listen', 'Silent') == True",
        "assert is_anagram('The Morse Code', 'Here come dots') == True",
        "assert is_anagram('Anagrams!', 'NagaramS!') == False"
    ],
    "model": "phi3:14b-repaired by Llama 3"
}