{
    "title": "Medium - String Transformation",
    "description": "Given a string `s` consisting of lowercase letters, you can perform the following operation any number of times: Choose two adjacent characters in `s`, and swap them. Write a function `min_swaps` that calculates the minimum number of swaps required to transform the input string `s` into a lexicographically sorted string.\n\n#### Function Signature\n```python\ndef min_swaps(s: str) -> int:\n```\n\n#### Input\n- `s` (str): A string consisting of lowercase letters.\n\n#### Output\n- Returns the minimum number of swaps required to sort the string lexicographically.",
    "code": "def min_swaps(s: str) -> int:\n    n = len(s)\n    count = 0\n    sorted_s = sorted(s)\n    for i in range(n):\n        if s[i] != sorted_s[i]:\n            j = i + 1\n            while j < n and s[j] != sorted_s[i]:\n                j += 1\n            count += j - i\n            s = list(s)\n            s[i], s[j] = s[j], s[i]\n            s = ''.join(s)\n    return count",
    "tests": [
        "'assert min_swaps(\"cab\") == 1'",
        "'assert min_swaps(\"abc\") == 0'",
        "'assert min_swaps(\"cba\") == 2'",
        "'assert min_swaps(\"dcba\") == 3'"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}