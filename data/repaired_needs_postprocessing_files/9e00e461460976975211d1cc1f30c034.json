{
    "title": "Maximum Sum of an Array (Medium)",
    "description": "Given an array of integers, write a function that returns the maximum sum of a subarray within the array. A subarray is any contiguous segment of the array.\n\n#### Function Signature\n```python\ndef max_subarray_sum(arr: list[int]) -> int:\n```\n\n#### Input\n- `arr` (list[int]): A list of integers representing the input array.\n\n#### Output\n- Returns the maximum sum of a subarray within the given array.",
    "code": "def max_subarray_sum(arr: list[int]) -> int:\n    if not arr:\n        return 0\n    current_sum = max_sum = arr[0]\n    for num in arr[1:]:\n        current_sum = max(num, current_sum + num)\n        max_sum = max(max_sum, current_sum)\n    return max_sum",
    "tests": [
        "assert max_subarray_sum([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6",
        "assert max_subarray_sum([1, -2, 3, 10, -4, 10, 2]) == 22",
        "assert max_subarray_sum([-1, -2, -3, 1, 1, 1]) == 3"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}