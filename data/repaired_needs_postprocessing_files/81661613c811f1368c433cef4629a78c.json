{
    "title": "'Anagram Checker (Hard)'",
    "description": "An anagram is a word or phrase that consists of the same letters as another word or phrase, but arranged differently. For example, 'listen' and 'silent' are anagrams of each other.\n#### Function Signature\n```python\ndef are_anagrams(word1: str, word2: str) -> bool:\n```\n#### Input\n- `word1` (str): A string that may contain only lowercase letters.\n- `word2` (str): Another string that may contain only lowercase letters.\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def are_anagrams(word1: str, word2: str) -> bool:\n    # Ensure both strings have the same length\n    if len(word1) != len(word2):\n        return False\n    \n    # Count the frequency of each letter in both words\n    count1 = {letter: 0 for letter in string.ascii_lowercase}\n    count2 = {letter: 0 for letter in string.ascii_lowercase}\n    for char in word1:\n        if char in count1:\n            count1[char] += 1\n        else:\n            continue\n    for char in word2:\n        if char in count1:\n            count1[char] -= 1\n        else:\n            return False\n    \n    # Check if all counts are zero\n    return all(count == 0 for count in count1.values())",
    "tests": [
        "assert are_anagrams('listen', 'silent') == True",
        "assert are_anagrams('racecar', 'carrace') == True",
        "assert are_anagrams('hello', 'world') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}