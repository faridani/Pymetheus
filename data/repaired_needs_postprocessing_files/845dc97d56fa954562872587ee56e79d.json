{
    "title": "Hard: Substring Count with Wildcards",
    "description": "Given a string `s` and a pattern `p` containing wildcards ('?' matches any single character, '*' matches any sequence of characters), count the number of times the pattern appears as a substring within the string.\n\n#### Function Signature\n```python\ndef count_substring_wildcards(s: str, p: str) -> int:\n```\n\n#### Input\n- `s` (str): The input string to search within.\n- `p` (str): The pattern containing wildcards ('?' and '*').\n\n#### Output\n- Returns the number of occurrences of the pattern within the string.",
    "code": "def count_substring_wildcards(s: str, p: str) -> int:\n    count = 0\n    for i in range(len(s) - len(p) + 1):\n        match = True\n        j = 0\n        while j < len(p) and match:\n            if p[j] == '?' or s[i + j] == p[j]:\n                j += 1\n            elif p[j] == '*':\n                while i + j < len(s) and (p[j + 1] == '?' or s[i + j] == p[j + 1]):\n                    j += 1\n            else:\n                match = False\n        if match:\n            count += 1\n    return count",
    "tests": [
        "'assert count_substring_wildcards(\"aaabbbaab\", \"a?b*a\") == 4'",
        "'assert count_substring_wildcards(\"abababa\", \"*baba*\") == 2'",
        "'assert count_substring_wildcards(\"mississippi\", \"*issi*\") == 3'",
        "'assert count_substring_wildcards(\"leetcode\", \"*e*t*ode*\") == 1'"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}