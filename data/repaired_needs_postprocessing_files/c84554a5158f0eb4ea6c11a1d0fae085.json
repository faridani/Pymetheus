{
    "title": "Maximum Sum of Subarray (Easy)",
    "description": "Given an array of integers, find the maximum sum of a subarray. A subarray is a contiguous portion of the array.\n#### Function Signature\n```python\ndef max_subarray_sum(arr: list[int]) -> int:\n```\n\n#### Input\n- `arr` (list[int]): An array of integers.\n#### Output\n- Returns the maximum sum of a subarray.",
    "code": "def max_subarray_sum(arr: list[int]) -> int:\n    if not arr:\n        return 0\n    current_max = max_so_far = arr[0]\n    for num in arr[1:]:\n        current_max = max(num, current_max + num)\n        max_so_far = max(max_so_far, current_max)\n    return max_so_far",
    "tests": [
        "assert max_subarray_sum([-2,1,-3,4,-1,2,1,-5,4]) == 6",
        "assert max_subarray_sum([1]) == 1",
        "assert max_subarray_sum([]) == 0"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}