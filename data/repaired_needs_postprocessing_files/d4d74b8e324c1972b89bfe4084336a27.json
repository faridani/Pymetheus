{
    "title": "Hard - Longest Consecutive Subsequence",
    "description": "Given an unsorted array of integers, find the length of the longest consecutive elements sequence. You must do it in O(n) time complexity.\n\n#### Function Signature\n```python\ndef longestConsecutive(nums: list[int]) -> int:\n```\n\n#### Input\n- `nums` (list[int]): A list of integers that may contain duplicates.\n\n#### Output\n- Returns the length of the longest consecutive elements sequence.\n",
    "code": "def longestConsecutive(nums: list[int]) -> int:\n    numSet = set(nums)\n    longestStreak = 0\n    for n in numSet:\n        if n - 1 not in numSet:\n            currentNum = n\n            currentStreak = 1\n            while currentNum + 1 in numSet:\n                currentNum += 1\n                currentStreak += 1\n            longestStreak = max(longestStreak, currentStreak)\n    return longestStreak",
    "tests": [
        "assert longestConsecutive([100, 4, 200, 1, 3, 2]) == 4",
        "assert longestConsecutive([0, 3, 7, 2, 5, 8, 4, 6, 0, 1]) == 9"
    ],
    "model": "gemma2:27b-instruct-q5_K_S-repaired by Llama 3"
}