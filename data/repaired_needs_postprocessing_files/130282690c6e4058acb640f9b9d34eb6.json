{
    "title": "Hard - Lexicographically Smallest Rotation",
    "description": "Given a string `s`, find the lexicographically smallest rotation of the string.\n\n#### Function Signature\n```python\ndef smallest_rotation(s: str) -> str:\n```\n\n#### Input\n- `s` (str): A string containing lowercase letters.\n\n#### Output\n- Returns the lexicographically smallest rotation of the string `s`. \n\n#### Constraints\n - 1 <= len(s) <= 10^5 ",
    "code": "def smallest_rotation(s: str) -> str:\n    smallest = s\n    for i in range(len(s)):\n        rotation = s[i:] + s[:i]\n        if rotation < smallest:\n            smallest = rotation\n    return smallest",
    "tests": [
        "assert smallest_rotation(\"abc\") == \"abc\"",
        "assert smallest_rotation(\"bac\") == \"abc\"",
        "assert smallest_rotation(\"cba\") == \"abc\"",
        "assert smallest_rotation(\"bbccaa\") == \"aabbcc\""
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}