{
    "title": "Easy: Maximum Sum of an Array",
    "description": "Write a function that takes an array of integers as input and returns the maximum sum of any contiguous subarray within the given array.\n\n#### Function Signature\n```python\ndef max_sum_subarray(arr: list[int)) -> int:\n``` \n\n#### Input\n- `arr` (list[int]): An array of integers.\n\n#### Output\n- Returns the maximum sum of any contiguous subarray within the input array.",
    "code": "def max_sum_subarray(arr: list[int]) -> int:\n    max_sum = float('-inf')\n    current_sum = 0\n\n    for num in arr:\n        current_sum += num\n        if current_sum > max_sum:\n            max_sum = current_sum\n        elif current_sum < 0:\n            current_sum = 0\n\n    return max_sum",
    "tests": [
        "assert max_sum_subarray([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6",
        "assert max_sum_subarray([1, -2, 3, 10, -4, 7, 2, -5]) == 12",
        "assert max_sum_subarray([-1, -2, -3, -4, -5]) == -1",
        "assert max_sum_subarray([]) == 0"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}