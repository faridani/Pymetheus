{
    "title": "Hard: Subarray Sum Closest to Zero",
    "description": "Given an array of integers, find the subarray whose sum is closest to zero. Return the sum of this subarray.\n\n#### Function Signature\n```python\ndef closest_to_zero(nums: list[int]) -> int:\n``` \n\n#### Input\n- `nums` (list[int]): A list of integers.\n\n#### Output\n- Returns the sum of the subarray whose sum is closest to zero.",
    "code": "def closest_to_zero(nums: list[int]) -> int:\n    min_sum = float('inf')\n    for i in range(len(nums)):\n        current_sum = 0\n        for j in range(i, len(nums)):\n            current_sum += nums[j]\n            if abs(current_sum) < abs(min_sum):\n                min_sum = current_sum\n    return min_sum",
    "tests": [
        "assert closest_to_zero([1, 2, -3, 4]) == -1",
        "assert closest_to_zero([-1, 1]) == 0",
        "assert closest_to_zero([10, -5, 3, -8]) == -2"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}