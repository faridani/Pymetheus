{
    "title": "Anagram Checker (Hard)",
    "description": "An anagram is a word or phrase that is formed by rearranging the letters of another word or phrase, typically using all the original letters exactly once. Write a function `is_anagram` that checks if two given strings are anagrams of each other.\n\n#### Function Signature\n```python\ndef is_anagram(str1: str, str2: str) -> bool:\n``` \n\n#### Input\n- `str1`, `str2` (str): Two strings that may contain letters, spaces, and punctuation.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "import collections\ndef is_anagram(str1: str, str2: str) -> bool:\n    # Remove non-alphabetic characters\n    str1 = ''.join(char for char in str1 if char.isalpha())\n    str2 = ''.join(char for char in str2 if char.isalpha())\n    \n    # Convert to frequency distribution using a dictionary\n    dist1 = collections.Counter(str1)\n    dist2 = collections.Counter(str2)\n    \n    # Check if the frequency distributions are equal\n    return dist1 == dist2",
    "tests": [
        "assert is_anagram('listen', 'silent') == True",
        "assert is_anagram('hello', 'world') == False",
        "assert is_anagram('A man, a plan, a canal: Panama', 'Panama canal: plan a mana') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}