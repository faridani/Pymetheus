{
    "title": "Anagram Detector (Hard)",
    "description": "Write a function `are_anagrams` that checks if two given strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef are_anagrams(str1: str, str2: str) -> bool:\n``` \n\n#### Input\n- `str1` (str): A string containing only lowercase alphabets without spaces.\n- `str2` (str): A string containing only lowercase alphabets without spaces.\n\n#### Output\n- Returns `True` if the two input strings are anagrams, `False` otherwise.\n",
    "code": "def are_anagrams(str1: str, str2: str) -> bool:\n    # Remove any spaces and convert to lowercase\n    str1 = ''.join(sorted(str1)).lower()\n    str2 = ''.join(sorted(str2)).lower()\n    # Check if the sorted strings are equal\n    return str1 == str2",
    "tests": [
        "assert are_anagrams(\"listen\", \"silent\") == True",
        "assert are_anagrams(\"java\", \"avis\") == True",
        "assert are_anagrams(\"hello\", \"world\") == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}