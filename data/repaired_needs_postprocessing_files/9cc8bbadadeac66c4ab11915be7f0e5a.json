{
    "title": "Anagram Detector (Hard)",
    "description": "Write a function `anagram_checker` that checks if two given strings are anagrams of each other.\n\n#### Function Signature\n```python\ndef anagram_checker(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1` (str): A string that may contain letters in any case and in any order.\n- `str2` (str): Another string that may contain letters in any case and in any order.\n\n#### Output\n- Returns `True` if the two strings are anagrams of each other, `False` otherwise.\n",
    "code": "def anagram_checker(str1: str, str2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    str1 = ''.join([char for char in str1.lower() if char.isalpha()]).replace(' ', '')\n    str2 = ''.join([char for char in str2.lower() if char.isalpha()]).replace(' ', '')\n    \n    # Check if the lengths of the two strings are equal (since anagrams have the same length)\n    if len(str1) != len(str2):\n        return False\n    \n    # Sort the characters in both strings and compare\n    sorted_str1 = sorted(list(str1))\n    sorted_str2 = sorted(list(str2))\n    return sorted_str1 == sorted_str2",
    "tests": [
        "assert anagram_checker(\"listen\", \"silent\") == True",
        "assert anagram_checker(\"actinium\", \"nicomaque\") == True",
        "assert anagram_checker(\"hello\", \"world\") == False",
        "assert anagram_checker(\"python\", \"typhon\") == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}