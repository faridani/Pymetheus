{
    "title": "Anagram Detection - Hard",
    "description": "Given two strings, write a function `are_anagrams` that checks if the input strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of another word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef are_anagrams(s1: str, s2: str) -> bool:\n``` \n\n#### Input\n- `s1` (str): A string that may contain letters and spaces.\n- `s2` (str): A string that may contain letters and spaces.\n\n#### Output\n- Returns `True` if the input strings are anagrams of each other, `False` otherwise.",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    s1 = ''.join(sorted(s1.lower().replace(' ', '')))\n    s2 = ''.join(sorted(s2.lower().replace(' ', '')))\n    # Compare the sorted strings\n    return len(s1) == len(s2) and s1 == s2",
    "tests": [
        "assert are_anagrams('listen', 'silent') == True",
        "assert are_anagrams('hello world', 'world hello') == True",
        "assert are_anagrams('apple', 'apples') == False",
        "assert are_anagrams('python', 'rtyphsn') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}