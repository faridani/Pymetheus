{
    "title": "Count of In-Bounds Cells",
    "description": "Write a function `count_in_bounds_cells` that takes two parameters, `row` and `column`, both integers. The function should return the count of cells within a rectangular grid that are in bounds for a given rectangle with top-left corner at `(0, 0)` and bottom-right corner at `(max_row, max_col)`. Note that cell `(i, j)` is out of bounds if either `i < 0` or `i >= max_row` or `j < 0` or `j >= max_col`.### Function Signature```pythonndef count_in_bounds_cells(max_row: int, max_col: int, row: int, column: int) -> int:    # Calculate the minimum and maximum possible values for row and column    min_row = 0    max_row_value = min(max_row - 1, row + 1)    min_col = 0    max_col_value = min(max_col - 1, column + 1)    # Count the cells that are in bounds    count = (max_row_value - min_row + 1) * (max_col_value - min_col + 1)    return count### Input- `max_row` (int): The maximum number of rows in the grid.- `max_col` (int): The maximum number of columns in the grid.- `row` (int): The row index for which we want to count cells.- `column` (int): The column index for which we want to count cells.### Output- Returns the count of cells within the grid that are in bounds for a given rectangle with top-left corner at `(0, 0)` and bottom-right corner at `(max_row, max_col)`.``",
    "code": "def count_in_bounds_cells(max_row: int, max_col: int, row: int, column: int) -> int:\n    # Calculate the minimum and maximum possible values for row and column\n    min_row = 0\n    max_row_value = min(max_row - 1, row + 1)\n    min_col = 0\n    max_col_value = min(max_col - 1, column + 1)\n    # Count the cells that are in bounds\n    count = (max_row_value - min_row + 1) * (max_col_value - min_col + 1)\n    return count",
    "tests": [
        "assert count_in_bounds_cells(5, 5, 0, 0) == 25",
        "assert count_in_bounds_cells(10, 15, 2, 7) == 12",
        "assert count_in_bounds_cells(3, 4, 1, 2) == 6"
    ],
    "model": "llama3.1:8b-repaired by Llama 3"
}