{
    "title": "'Sequence Repeater Checker (Easy)'",
    "description": "Write a function `is_repeating_sequence` that checks if a given sequence of characters repeats itself in the same order somewhere within it. The sequence can include spaces, punctuation, and numbers. For example, 'ABA', 'abcdeabcd', or 'a b c d e f g h i j k l m n o p q r s t u v w x y z a' are all repeating sequences.\n#### Function Signature\n```python\ndef is_repeating_sequence(s: str) -> bool:\n``` \n#### Input\n- `s` (str): A sequence of characters that may include spaces, punctuation, and numbers.\n#### Output\n- Returns `True` if the input sequence repeats itself in the same order somewhere within it, `False` otherwise.\n",
    "code": "def is_repeating_sequence(s: str) -> bool:\n    # Remove non-alphanumeric characters and spaces\n    s = ''.join(char for char in s if char.isalnum()).strip()\n    # Check if the shortened sequence has a repetition of at least 2 characters\n    return len(s) >= 2 and any(s[:len(sub)] == sub for sub in zip(s, s[1:]))",
    "tests": [
        "assert is_repeating_sequence('ABA') == True",
        "assert is_repeating_sequence('abcdeabcd') == True",
        "assert is_repeating_sequence('a b c d e f g h i j k l m n o p q r s t u v w x y z a') == True",
        "assert is_repeating_sequence('hello') == False",
        "assert is_repeating_sequence('abcdefghijklmnopqrstuvwxyz') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}