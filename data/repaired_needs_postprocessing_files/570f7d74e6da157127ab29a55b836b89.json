{
    "title": "Anagram Detection (Hard)",
    "description": "Given two strings, determine if they are anagrams of each other. Anagrams are words or phrases that contain the same letters, but not necessarily in the same order.\n#### Function Signature\n```python\ndef are_anagrams(s1: str, s2: str) -> bool:\n``` \nOutput - Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\n- `s1`, `s2` (str): Two strings containing only lowercase letters, with no spaces or special characters.\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    # Remove duplicates and sort the strings\n    s1 = sorted(list(set(s1.lower())))\n    s2 = sorted(list(set(s2.lower())))\n    # Check if both strings have the same length and are equal\n    return len(s1) == len(s2) and s1 == s2",
    "tests": [
        "assert are_anagrams('listen', 'silent') == True",
        "assert are_anagrams('hello', 'world') == False",
        "assert are_anagrams('act', 'cat') == True",
        "assert are_anagrams('apple', 'pear') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}