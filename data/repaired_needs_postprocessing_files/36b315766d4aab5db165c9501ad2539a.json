{
    "title": "Easy: Sum of Subarrays",
    "description": "Given a list of integers, write a function `sum_of_subarrays` that returns the sum of all subarrays within the input list. A subarray is any contiguous sequence of elements in the list.\n\n#### Function Signature```python\ndef sum_of_subarrays(arr: list) -> int:\n```python\n\n#### Input\n- `arr` (list): A list of integers.\n\n#### Output\n- Returns the sum of all subarrays within the input list.\n",
    "code": "def sum_of_subarrays(arr: list) -> int:\n    n = len(arr)\n    total_sum = 0\n    for i in range(n):\n        for j in range(i, n):\n            total_sum += sum(arr[i:j+1])\n    return total_sum",
    "tests": [
        "assert sum_of_subarrays([1, 2, 3, 4, 5]) == 35",
        "assert sum_of_subarrays([-1, 0, 1]) == -1",
        "assert sum_of_subarrays([10, 20, 30, 40, 50]) == 1500"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}