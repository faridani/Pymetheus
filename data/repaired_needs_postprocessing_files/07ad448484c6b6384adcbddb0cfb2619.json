{
    "title": "Anagram Checker (Hard)",
    "description": "Given two strings, write a function `anagram_check` that determines if the two strings are anagrams of each other. Two words or phrases are anagrams if they contain the exact same letters in the same frequency.\n\n#### Function Signature\n```python\ndef anagram_check(string1: str, string2: str) -> bool:\n```\n\n#### Input\n- `string1` (str): A string that may contain letters, numbers, and spaces.\n- `string2` (str): Another string that may contain letters, numbers, and spaces.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "import collections\ndef anagram_check(string1: str, string2: str) -> bool:\n    # Remove non-alphabetic characters from both strings\n    string1 = ''.join(char for char in string1 if char.isalpha()).lower()\n    string2 = ''.join(char for char in string2 if char.isalpha()).lower()\n    # Count the frequency of each letter in each string\n    count_string1 = collections.Counter(string1)\n    count_string2 = collections.Counter(string2)\n    \n    # Check if the frequencies of all letters are the same in both strings\n    return count_string1 == count_string2",
    "tests": [
        "assert anagram_check('Listen', 'Silent') == True",
        "assert anagram_check('love', 'evil') == False",
        "assert anagram_check('Congratulation', 'tacton gnuCC') == True",
        "assert anagram_check('abcdef', 'fedcba') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}