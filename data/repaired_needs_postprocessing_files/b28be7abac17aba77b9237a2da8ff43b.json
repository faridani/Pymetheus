{
    "title": "Maximum Sum of 3 Non-Adjacent Numbers (Easy)",
    "description": "The maximum sum of three non-adjacent numbers is a problem where we are given a list of integers and need to find the maximum sum that can be obtained by selecting at most three numbers from this list such that no two selected numbers are adjacent. \n#### Function Signature\n```python\ndef max_sum_of_3_non_adjacent(nums: list[int]) -> int:\n```\n\n#### Input\n- `nums` (list[int]): A list of integers.\n\n#### Output\n- Returns the maximum sum that can be obtained by selecting at most three numbers from this list such that no two selected numbers are adjacent. \n",
    "code": "def max_sum_of_3_non_adjacent(nums: list[int]) -> int:\n    if len(nums) < 3:\n        return sum(nums)\n    elif len(nums) == 3:\n        return max(sum(nums), nums[0] + nums[1] + nums[2])\n    else:\n        excl = max_sum_of_3_non_adjacent(nums[:-1])\n        incl = nums[-1] + max_sum_of_3_non_adjacent(nums[:-2])\n        return max(excl, incl)\n\nprint(max_sum_of_3_non_adjacent([5, 10, 20, 150]))\n# Output: 170",
    "tests": [
        "assert max_sum_of_3_non_adjacent([5, 10, 20, 150]) == 170",
        "assert max_sum_of_3_non_adjacent([1, 2, 3]) == 6",
        "assert max_sum_of_3_non_adjacent([1, 2]) == 3"
    ],
    "model": "llama3.1:8b-repaired by Llama 3"
}