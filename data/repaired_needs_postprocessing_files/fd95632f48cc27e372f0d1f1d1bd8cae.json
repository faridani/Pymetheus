{
    "title": "Sorting the Matrix",
    "description": "Given a square matrix of integers, sort its elements in descending order. The twist: you can only swap two adjacent elements at any point. Write a function `sort_matrix` that takes a 2D list as input and returns the sorted matrix.\n\n#### Function Signature\n```python\ndef sort_matrix(matrix: list[list[int]]) -> list[list[int]]:\n``` \n\n#### Input\n- `matrix` (list[list[int]]): A square 2D list of integers, where each inner list has the same length.\n\n#### Output\n- Returns the input matrix with its elements sorted in descending order.",
    "code": "",
    "tests": [
        "assert sort_matrix([[5,2,8], [3,6,7], [4,9,1]]) == [[9,8,7], [6,5,4], [3,2,1]]",
        "assert sort_matrix([[10,20], [30,40], [50,60]]) == [[60,60], [50,50], [30,30]]"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}