{
    "title": "Anagram Finder (Hard)",
    "description": "Given two strings, determine if they are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef are_anagrams(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1` (str): A string containing only lowercase alphabets.\n- `s2` (str): Another string containing only lowercase alphabets.\n\n#### Output\n- Returns `True` if the two input strings are anagrams, `False` otherwise.\n",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    # Ensure both strings have the same length\n    if len(s1) != len(s2):\n        return False\n    \n    # Sort the characters in each string and compare them\n    sorted_s1 = sorted(s1)\n    sorted_s2 = sorted(s2)\n    return sorted_s1 == sorted_s2",
    "tests": [
        "assert are_anagrams('listen', 'silent') == True",
        "assert are_anagrams('python', 'typhon') == False",
        "assert are_anagrams('act', 'cat') == True",
        "assert are_anigrams('hello', 'world') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}