{
    "title": "Anagram Finder (Hard)",
    "description": "Given two strings, write a function that checks if they are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of another word or phrase, typically using all the original letters exactly once.\n#### Function Signature\n```python\ndef is_anagram(str1: str, str2: str) -> bool:\n``` \n\n#### Input\n- `str1`, `str2` (str): Two strings that may contain only lowercase letters and no spaces.\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def is_anagram(str1: str, str2: str) -> bool:\n    # Sort the characters in both strings\n    sorted_str1 = sorted(list(str1))\n    sorted_str2 = sorted(list(str2))\n    # Check if the sorted strings are equal\n    return sorted_str1 == sorted_str2",
    "tests": [
        "assert is_anagram(\"listen\", \"silent\") == True",
        "assert is_anagram(\"hello\", \"world\") == False",
        "assert is_anagram(\"actors\", \"starco\") == True",
        "assert is_anagram(\"anagram\", \"nagarama\") == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}