{
    "title": "'Telephone Number Validation (Medium)'",
    "description": "Write a function `is_valid_telephone` that checks if a given string can be formatted as a valid 10-digit telephone number in the US. The telephone number can contain spaces, dashes, or parentheses, but must have exactly 10 digits and no other characters.\n\n#### Function Signature\n```python\ndef is_valid_telephone(s: str) -> bool:\n``` \n\n#### Input\n- `s` (str): A string that may contain spaces, dashes, or parentheses and up to 15 characters.\n\n#### Output\n- Returns `True` if the input string can be formatted as a valid 10-digit telephone number in the US, `False` otherwise.",
    "code": "def is_valid_telephone(s: str) -> bool:\n    # Remove non-numeric characters and spaces\n    s = ''.join(char for char in s if char.isdigit() or char in [' ', '-', '(', ')'])\n    # Check if the string has exactly 10 digits and no other characters\n    return len(s) == 10 and all(char in ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ' ', '-', '(', ')'] for char in s)\n",
    "tests": [
        "assert is_valid_telephone('123-456-7890') == True",
        "assert is_valid_telephone('(123) 456-7890') == True",
        "assert is_valid_telephone('1234567890') == True",
        "assert is_valid_telephone('123 456 7890') == True",
        "assert is_valid_telephone('123.456.7890') == False",
        "assert is_valid_telephone('123-a1b2c3d4e5') == False",
        "assert is_valid_telephone('(123) 456-789x') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}