{
    "title": "Prime Factorization (Hard)",
    "description": "Write a function `prime_factors` that takes an integer as input and returns a list of prime numbers that are the factors of the given number.\n\n#### Function Signature\n```python\ndef prime_factors(n: int) -> List[int]:\n``` \n\n#### Input\n- `n` (int): A positive integer.\n\n#### Output\n- Returns a list of prime numbers that are factors of the input integer.",
    "code": "def prime_factors(n: int) -> List[int]:\n    factors = []\n    i = 2\n    while i * i <= n:\n        if n % i == 0:\n            factors.append(i)\n            n //= i\n        else:\n            i += 1\n    if n > 1:\n        factors.append(n)\n    return list(set(factors))",
    "tests": [
        "assert prime_factors(12) == [2, 2, 3]",
        "assert prime_factors(17) == [17]",
        "assert prime_factors(40) == [2, 2, 5, 5]"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}