{
    "title": "Prime Sum Pairs (Hard)",
    "description": "Given a target number `n`, find all pairs of prime numbers that add up to this target. The order in which the primes appear does not matter.\n\n#### Function Signature\n```python\ndef prime_sum_pairs(n: int) -> list[list[int]]:\n```\n\n#### Input\n- `n` (int): A non-negative integer that represents the target sum.\n\n#### Output\n- Returns a list of lists, where each inner list contains two prime numbers that add up to the target number `n`.",
    "code": "def primes_below(n: int) -> list[int]:\n    # List to store all primes found so far\n    primes = [2]\n    # If 2 is already in the list, continue to next number\n    if 2 in primes:\n        i = 3\n    else:\n        i = 2\n    # Loop through all numbers up to n\n    while i * i <= n:\n        # If i is already a prime, continue to next number\n        if i in primes:\n            i += 1\n        else:\n            # Check if i*i is also a prime and add it to the list\n            j = 0\n            while i * primes[j] <= i * i:\n                j += 1\n            # If the square of i is greater than the next prime, add i as a new prime\n            if i * i > primes[j]:\n                primes.append(i)\n            i += 2\n    return primes\n\ndef prime_sum_pairs(n: int) -> list[list[int]]:\n    # List to store all pairs of prime numbers that add up to the target number\n    pairs = []\n    # Get a list of all primes below n\n    primes = primes_below(n)\n    # Loop through all pairs of primes in the list\n    for i, p1 in enumerate(primes):\n        for j in range(i+1, len(primes)):\n            p2 = primes[j]\n            # Check if the sum of the two primes equals the target number\n            if p1 + p2 == n:\n                pairs.append([p1, p2])\n    return pairs\n",
    "tests": [
        "assert prime_sum_pairs(5) == [[2,3],[3,2]]",
        "assert prime_sum_pairs(9) == [[3,6],[2,7]]",
        "assert prime_sum_pairs(10) == [[2,8], [3,7], [4,6]]",
        "assert prime_sum_pairs(25) == [[3,22], [5,20], [7,18], [11,14]]"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}