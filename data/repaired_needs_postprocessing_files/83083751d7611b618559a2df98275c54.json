{
    "title": "'Anagram Detector (Hard)'",
    "description": "Given two strings, determine if they are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef are_anagrams(str1: str, str2: str) -> bool:\n``` \n\n#### Input\n- `str1` (str): A string containing only lowercase English alphabets.\n- `str2` (str): A string containing only lowercase English alphabets.\n\n#### Output\n- Returns `True` if the given strings are anagrams of each other, otherwise returns `False`.",
    "code": "def are_anagrams(str1: str, str2: str) -> bool:\n    # Ensure both strings have the same length and are only composed of lowercase letters\n    if len(str1) != len(str2) or not all(c in string.ascii_lowercase for c in (str1 + str2)): return False\n    # Count the frequency of each character in both strings\n    char_counts = Counter(str1) & Counter(str2)\n    # Check if all characters have the same count in both strings\n    return len(char_counts) == 1 and list(char_counts.elements())[0] == 1",
    "tests": [
        "assert are_anagrams('listen', 'silent') == True",
        "assert are_anagrams('hello', 'world') == False",
        "assert are_anagrams('act', 'cat') == True",
        "assert are_anagrams('apple', 'peelap') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}