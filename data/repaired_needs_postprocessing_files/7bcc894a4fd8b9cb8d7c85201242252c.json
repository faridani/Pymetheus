{
    "title": "Anagram Checker (Hard)",
    "description": "An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Write a function `is_anagram` that checks if two given strings are anagrams of each other.#### Function Signature```pythonndef is_anagram(s1: str, s2: str) -> bool:return\n```\n\nInput\n- `s1`, `s2` (str): Two strings that may contain letters and spaces.\n\nOutput\n- Returns `True` if the input strings are anagrams of each other, `False` otherwise.\n\nConstraints\n- The input strings may contain only lowercase letters and spaces. Spaces are considered as a single character. For example, 'hello world' is treated as 'helloworld'.",
    "code": "def is_anagram(s1: str, s2: str) -> bool:\n    # Remove spaces from the strings\n    s1 = sorted(''.join(s1.split()).lower())\n    s2 = sorted(''.join(s2.split()).lower())\n    # Check if both lists are equal\n    return len(s1) == len(s2) and s1 == s2",
    "tests": [
        "assert is_anagram('listen', 'silent') == True",
        "assert is_anagram('hello world', 'world hello') == True",
        "assert is_anagram('apple', 'appel') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}