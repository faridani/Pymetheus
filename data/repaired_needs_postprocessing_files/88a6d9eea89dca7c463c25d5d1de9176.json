{
    "title": "'Palindromic Subsequence Count' - A Medium Problem",
    "description": "Given a string `s`, find and return the number of palindromic subsequences. A palindrome is a sequence that reads the same forwards and backwards.\n\n#### Function Signature\n```python\ndef count_palindromes(s: str) -> int:\n``` \n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns the number of palindromic subsequences in the input string.",
    "code": "import itertools\ndef count_palindromes(s: str) -> int:\n    # Generate all possible subsequences\n    subs = list(itertools.permutations(s, 2 * len(s)))\n    # Initialize counter for palindromic subsequences\n    count = 0\n    # Iterate over the generated subsequences\n    for sub in subs:\n        # Check if the sequence is a palindrome\n        if sub[0] == sub[-1:] and sub[1:-1]:\n            # If it is, increment the counter\n            count += 1\n    return count",
    "tests": [
        "assert count_palindromes(\"abcbcba\") == 5",
        "assert count_palindromes(\"aabbccddeeffg\") == 7",
        "assert count_palindromes(\"hello world\") == 2",
        "assert count_palindromes(\"A man, a plan, a canal, Panama\") == 14"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}