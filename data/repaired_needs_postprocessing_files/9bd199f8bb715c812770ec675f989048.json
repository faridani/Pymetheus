{
    "title": "'Anagram Detector (Hard)'",
    "description": "Given two strings, determine if they are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef are_anagrams(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1` (str): A non-empty string containing only lowercase letters.\n- `str2` (str): Another non-empty string containing only lowercase letters.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\n",
    "code": "def are_anagrams(str1: str, str2: str) -> bool:\n    # Sort both strings and compare them\n    return sorted(str1) == sorted(str2)",
    "tests": [
        "assert are_anagrams('listen', 'silent') == True",
        "assert are_anagrams('hello', 'world') == False",
        "assert are_anagrams('act', 'cat') == True",
        "assert are_anagrams('dog', 'god') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}