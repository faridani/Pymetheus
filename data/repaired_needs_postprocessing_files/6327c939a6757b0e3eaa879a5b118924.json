{
    "title": "Anagram Detector (Hard)",
    "description": "An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Write a function `are_anagrams` that determines if two given strings are anagrams of each other. #### Function Signature```python def are_anagrams(s1: str, s2: str) -> bool: ``` #### Input- `s1` (str): A string that may contain letters and spaces.- `s2` (str): Another string that may contain letters and spaces. #### Output- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    s1 = ''.join(char for char in s1.lower() if char in string.ascii_letters).replace(' ', '')\n    s2 = ''.join(char for char in s2.lower() if char in string.ascii_letters).replace(' ', '')\n    # If the lengths are not equal, they cannot be anagrams\n    if len(s1) != len(s2):\n        return False\n    # Sort the characters of both strings and compare them\n    sorted_s1 = sorted(list(s1))\n    sorted_s2 = sorted(list(s2))\n    return sorted_s1 == sorted_s2",
    "tests": [
        "assert are_anagrams('listen', 'silent') == True",
        "assert are_anagrams('act', 'cat') == True",
        "assert are_anagrams('hello', 'world') == False",
        "assert are_anagrams('racecar', 'carcarerace') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}