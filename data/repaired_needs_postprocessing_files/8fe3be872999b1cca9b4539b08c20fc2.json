{
    "title": "Medium: Binary Tree Depth",
    "description": "Given the root of a binary tree, return its depth. The depth of a binary tree is defined as the number of nodes along the longest path from the root node to a leaf node.\n\n#### Function Signature\n```python\ndef max_depth(root) -> int:\n    ```\n\n#### Input\n- `root` (TreeNode): The root node of the binary tree. TreeNode has two attributes: `val` (int) and `children` (list of TreeNode).\n\n#### Output\n- Returns an integer representing the depth of the binary tree.",
    "code": "class TreeNode:\n    def __init__(self, val=0, children=None):\n        self.val = val\n        self.children = children or []\n\ndef max_depth(root) -> int:\n    if not root:\n        return 0\n    max_depth_so_far = 1 \n    for child in root.children:\n        max_depth_so_far = max(max_depth_so_far, 1 + max_depth(child))\n    return max_depth_so_far",
    "tests": [
        "root = TreeNode(1, [TreeNode(2), TreeNode(3)])\nassert max_depth(root) == 2",
        "root = TreeNode(1, [TreeNode(2, [TreeNode(4)]), TreeNode(3)])\nassert max_depth(root) == 3"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}