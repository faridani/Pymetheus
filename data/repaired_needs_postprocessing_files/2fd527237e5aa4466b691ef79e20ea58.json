{
    "title": "Hard: Longest Common Subsequence",
    "description": "Given two strings, find the length of their longest common subsequence.\n#### Function Signature\n```python\ndef longest_common_subsequence(s1: str, s2: str) -> int:\n```\n#### Input\n- `s1` (str): The first string.\n- `s2` (str): The second string.\n#### Output\n- Returns the length of the longest common subsequence.\n#### Constraints\n- 0 <= len(s1), len(s2) <= 10^3\n#### Hints\n- You can use dynamic programming to solve this problem efficiently.",
    "code": "def longest_common_subsequence(s1: str, s2: str) -> int:\n    m = len(s1)\n    n = len(s2)\n    dp = [[0] * (n + 1) for _ in range(m + 1)]\n\n    for i in range(1, m + 1):\n        for j in range(1, n + 1):\n            if s1[i - 1] == s2[j - 1]:\n                dp[i][j] = dp[i - 1][j - 1] + 1\n            else:\n                dp[i][j] = max(dp[i - 1][j], dp[i][j - 1])\n    \n    return dp[m][n]",
    "tests": [
        "assert longest_common_subsequence('AGGTAB', 'GXTXAYB') == 4",
        "assert longest_common_subsequence('abc', 'abc') == 3",
        "assert longest_common_subsequence('abc', 'def') == 0"
    ],
    "model": "mistral-nemo:latest-repaired by Llama 3"
}