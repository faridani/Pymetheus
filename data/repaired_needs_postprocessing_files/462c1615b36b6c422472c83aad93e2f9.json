{
    "title": "'Palindromic Substrings' - Medium",
    "description": "Write a function `find_palindromes` that finds all the substrings of a given string which are palindromes.\n\n#### Function Signature\n```python\ndef find_palindromes(s: str) -> List[str]:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns a list of substrings in the given string which are palindromes.\n\n**Hint:** You can use nested loops to check all possible combinations of characters as substrings.",
    "code": "def find_palindromes(s: str) -> List[str]:\n    results = [substring for length in range(1, len(s)+1) for substring in itertools.product(s, repeat=length) if substring and substring == substring[::-1]]\n    return list(results)",
    "tests": [
        "assert find_palindromes('madam') == ['madam', 'ada']",
        "assert find_palindromes('racecar') == ['racecar', 'acecar', 'ccar', 'cace', 'rac', 'e', '']",
        "assert find_palindromes('hello world') == ['ello', 'll', 'world', 'drow', 'ro', 'olleh']"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}