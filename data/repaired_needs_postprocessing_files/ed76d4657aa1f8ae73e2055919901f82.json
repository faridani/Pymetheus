{
    "title": "Hard - Longest Consecutive Subsequence",
    "description": "Given an unsorted array of integers, find the length of the longest consecutive elements sequence.\n\n#### Function Signature\n```python\ndef longest_consecutive(nums: list[int]) -> int:\n```\n\n#### Input\n- `nums` (list[int]): A list of integers that may contain duplicates.\n\n#### Output\n- Returns the length of the longest consecutive elements sequence in the input list.\n\n**Example:\nInput: `nums = [100, 4, 200, 1, 3, 2]`\nOutput: `4`\nExplanation: The longest consecutive subsequence is `[1, 2, 3, 4]`.\n",
    "code": "def longest_consecutive(nums: list[int]) -> int:\n    num_set = set(nums)\n    longest_streak = 0\n    for num in nums:\n        if num - 1 not in num_set:\n            current_num = num\n            current_streak = 1\n            while current_num + 1 in num_set:\n                current_num += 1\n                current_streak += 1\n            longest_streak = max(longest_streak, current_streak)\n    return longest_streak",
    "tests": [
        "assert longest_consecutive([100, 4, 200, 1, 3, 2]) == 4",
        "assert longest_consecutive([0, 3, 7, 2, 5, 8, 4, 6, 0, 1]) == 9"
    ],
    "model": "gemma2:27b-instruct-q5_K_S-repaired by Llama 3"
}