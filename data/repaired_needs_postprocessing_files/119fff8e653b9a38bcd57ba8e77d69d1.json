{
    "title": "Medium: Counting Islands",
    "description": "Given a 2D grid, where '1' represents land and '0' represents water, count the number of islands. An island is a group of connected land cells. Two cells are connected if they are adjacent horizontally or vertically.\n\n```python\ndef count_islands(grid):\n    rows, cols = len(grid), len(grid[0])\n    count = 0\n\n    def dfs(row, col):\n        if row < 0 or row >= rows or col < 0 or col >= cols or grid[row][col] == '0':\n            return\n        grid[row][col] = '0'\n        dfs(row + 1, col)\n        dfs(row - 1, col)\n        dfs(row, col + 1)\n        dfs(row, col - 1)\n\n    for i in range(rows):\n        for j in range(cols):\n            if grid[i][j] == '1':\n                count += 1\n                dfs(i, j)\n\n    return count",
    "code": "def count_islands(grid):\n    rows, cols = len(grid), len(grid[0])\n    count = 0\n\n    def dfs(row, col):\n        if row < 0 or row >= rows or col < 0 or col >= cols or grid[row][col] == '0':\n            return\n        grid[row][col] = '0'\n        dfs(row + 1, col)\n        dfs(row - 1, col)\n        dfs(row, col + 1)\n        dfs(row, col - 1)\n\n    for i in range(rows):\n        for j in range(cols):\n            if grid[i][j] == '1':\n                count += 1\n                dfs(i, j)\n\n    return count",
    "tests": [
        "assert count_islands([['1', '1', '0', '0'], ['0', '1', '0', '0'], ['0', '0', '1', '1']]) == 3",
        "assert count_islands([['1', '1', '1'], ['0', '1', '0'], ['1', '1', '1']]) == 1",
        "assert count_islands([['0', '0'], ['0', '0']]) == 0"
    ],
    "model": "codegemma:7b-repaired by Llama 3"
}