{
    "title": "Medium: Flatten a Nested List",
    "description": "You are given a nested list. Write a function `flatten` that takes the nested list as input and returns a single flattened list containing all elements.\n#### Function Signature\n```python\ndef flatten(nested_list: list) -> list:\n``` \n#### Input\n- `nested_list` (list): A list which may contain integers, other lists, or a mixture of both.\n#### Output\n- Returns a single flattened list containing all elements from the nested input list. ",
    "code": "def flatten(nested_list: list) -> list:\n    flattened_list = []\n    for element in nested_list:\n        if isinstance(element, list):\n            flattened_list.extend(flatten(element))\n        else:\n            flattened_list.append(element)\n    return flattened_list\n",
    "tests": [
        "assert flatten([1, 2, [3, 4], [5, [6]]]) == [1, 2, 3, 4, 5, 6]",
        "assert flatten([1, [2, [3, 4], 5]]) == [1, 2, 3, 4, 5]",
        "assert flatten([[1],[2, [3]]]) == [1, 2, 3]",
        "assert flatten([]) == []"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}