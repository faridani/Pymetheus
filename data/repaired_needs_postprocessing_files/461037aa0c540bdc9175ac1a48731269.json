{
    "title": "Palindromic Substrings Count' - Hard",
    "description": "Write a function named `count_palindromes` that finds the number of non-overlapping palindromic substrings in a given string.\n\n#### Function Signature\n```python\ndef count_palindromes(s: str) -> int:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns the number of non-overlapping palindromic substrings found in the input string.",
    "code": "import re\ndef count_palindromes(s: str) -> int:\n    # Find all possible palindromes using regex (regular expression)\n    palindromes = len(re.findall('(([a-zA-Z0-9]+){1,}(\\b|\\b)){2,}', s))\n    # Subtract the count of overlapping palindromes (such as 'aba' in 'abcba') and return the result\n    return len(s) - palindromes + palindromes // 2",
    "tests": [
        "assert count_palindromes(\"racecar\") == 1",
        "assert count_palindromes(\"babad\") == 3",
        "assert count_palindromes(\"cbbddeeffgbggf\") == 8",
        "assert count_palindromes(\"A man, a plan, a canal, Panama\") == 9"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}