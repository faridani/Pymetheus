{
    "title": "'Is it anagram checker (Medium)'",
    "description": "An anagram is a word or phrase that is formed by rearranging the letters of another word or phrase, typically using all the original letters exactly once. Write a function `is_anagram` that checks if two given strings are anagrams. \n\n#### Function Signature\n```python\ndef is_anagram(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1` (str): A string containing only letters (no numbers or special characters).\n- `str2` (str): Another string containing only letters (no numbers or special characters).\n\n#### Output\n- Returns `True` if the two input strings are anagrams, `False` otherwise.\n",
    "code": "import collections\ndef is_anagram(str1: str, str2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    s1 = ''.join(str1.split()).lower()\n    s2 = ''.join(str2.split()).lower()\n    # If the two strings have different lengths, they are not anagrams\n    if len(s1) != len(s2):\n        return False\n    # Create dictionaries to count the frequencies of each letter in both strings\n    counts1 = collections.Counter(s1)\n    counts2 = collections.Counter(s2)\n    # Check if the two dictionaries are equal (meaning the same letters appear with the same frequency)\n    return counts1 == counts2",
    "tests": [
        "assert is_anagram('listen', 'silent') == True",
        "assert is_anagram('hello', 'world') == False",
        "assert is_anagram('act', 'cat') == True",
        "assert is_anagram('eagle', 'gleam') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}