{
    "title": "Fibonacci Series Sum Finder (Medium)",
    "description": "The Fibonacci sequence is a series of numbers in which each number is the sum of the two preceding ones, usually starting with 0 and 1. That is, the sequence goes: 0, 1, 1, 2, 3, 5, 8, 13, 21, and so forth.\nWrite a function `fibonacci_sum_find(n: int) -> int` that finds the sum of all Fibonacci numbers up to (and including) n. Note that the function should return the first 10,000 terms' sum when n is 10000.\n\n#### Function Signature\n```python\ndef fibonacci_sum_find(n: int) -> int:\n```\n\n#### Input\n- `n` (int): The number of terms to find the sum for, up to 10,000.\n\n#### Output\n- Returns the sum of all Fibonacci numbers up to and including n.",
    "code": "def fibonacci_sum_find(n: int) -> int:\n    if n <= 1: return 0\n    prev, curr = 0, 1\n    total = 0\n    for _ in range(2, n + 1):\n        next_fib = prev + curr\n        total += next_fib\n        prev, curr = curr, next_fib\n    return total",
    "tests": [
        "assert fibonacci_sum_find(7) == 8",
        "assert fibonacci_sum_find(10) == 55",
        "assert fibonacci_sum_find(20) == 377",
        "assert fibonacci_sum_find(10000) == 47638718698753"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}