{
    "title": "Easy: Maximal Square",
    "description": "A maximal square of a binary matrix is the largest square that can be formed from the elements of the matrix such that all elements within it are 1.\n\n#### Function Signature\n```python\ndef maximal_square(matrix: List[List[int]]) -> int:\n```\n\n#### Input\n- `matrix` (List[List[int]]): A binary matrix where each element is either 0 or 1. The matrix may be empty.\n\n#### Output\n- Returns the size of the maximal square that can be formed from the elements of the matrix.",
    "code": "from typing import List\ndef maximal_square(matrix: List[List[int]]) -> int:\n    if not matrix:\n        return 0\n    rows, cols = len(matrix), len(matrix[0])\n    dp = [[0] * cols for _ in range(rows)]\n    max_size = 0\n    for i in range(rows):\n        for j in range(cols):\n            if matrix[i][j] == 1:\n                dp[i][j] = min(dp[i-1][j], dp[i][j-1], dp[i-1][j-1]) + 1\n                max_size = max(max_size, dp[i][j])\n    return max_size",
    "tests": [
        "assert maximal_square([[0,0,0],[1,1,0],[0,0,0]]) == 1",
        "assert maximal_square([]) == 0",
        "assert maximal_square([[]]) == 0"
    ],
    "model": "llama3.1:8b-repaired by Llama 3"
}