{
    "title": "'Reversed Words Checker (Medium)'",
    "description": "Given a string, write a function `reversed_words` that checks if all the words in a given sentence are the same when read backwards. The string may contain letters, numbers, spaces, commas, and periods.\n\n#### Function Signature\n```python\ndef reversed_words(s: str) -> bool:\n``` \n\n#### Input\n- `s` (str): A string that contains one or more words separated by spaces, commas, or periods.\n\n#### Output\n- Returns `True` if every word in the input string is a palindrome when read backwards, `False` otherwise.",
    "code": "import re\ndef reversed_words(s: str) -> bool:\n    # Remove non-alphanumeric characters and split into words\n    words = [word.lower() for word in re.findall('\\w+', s)]\n    # Check if each word is a palindrome\n    for word in words:\n        if word != word[::-1]:\n            return False\n    \n    # If no word is found to be non-palindromic, return True\n    return True",
    "tests": [
        "assert reversed_words(\"A man, a plan, a canal, Panama\") == True",
        "assert reversed_words(\"racecar, racecar, racecar\") == True",
        "assert reversed_words(\"hello world\") == False",
        "assert reversed_words(\"., , o'madam\", \"o'madam ,. \") == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}