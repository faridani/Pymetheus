{
    "title": "Hard: Balanced Brackets",
    "description": "Given a string containing only parentheses, curly braces, and square brackets, write a function `is_balanced` that determines if the string has balanced brackets.  \n#### Function Signature\n```python\ndef is_balanced(s: str) -> bool:\n``` \n\n#### Input\n- `s` (str): A string containing only parentheses ('(' and ')'), curly braces ('{' and '}'), and square brackets ('[' and ']). \n\n#### Output\n- Returns `True` if the input string has balanced brackets, `False` otherwise. ",
    "code": "def is_balanced(s: str) -> bool:\n    stack = []\n    bracket_pairs = {')': '(', '}': '{', ']': '['}\n    for char in s:\n        if char in bracket_pairs.values():  # If it's an opening bracket\n            stack.append(char)\n        elif char in bracket_pairs.keys():  # If it's a closing bracket\n            if not stack or stack.pop() != bracket_pairs[char]:\n                return False\n    return not stack  # True if the stack is empty (all brackets matched) ",
    "tests": [
        "assert is_balanced('(){}[]') == True",
        "assert is_balanced('([{}])') == True",
        "assert is_balanced('(]') == False",
        "assert is_balanced('{[]}(') == False",
        "assert is_balanced('') == True"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}