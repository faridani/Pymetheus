{
    "title": "'Mirror Sequence Checker (Easy)'",
    "description": "Write a function `is_mirror` that checks if a given list of integers is a mirror sequence. A mirror sequence is a sequence where each element at an index 'i' is equal to the last element at the index 'n - i - 1', ignoring spaces and duplicates.\n\n#### Function Signature\n```python\ndef is_mirror(nums: List[int]) -> bool:\n``` \n\n#### Input\n- `nums` (List[int]): A list of integers that may contain duplicates and spaces.\n\n#### Output\n- Returns `True` if the input list is a mirror sequence, `False` otherwise.",
    "code": "def is_mirror(nums: List[int]) -> bool:\n    # Remove duplicates and spaces\n    nums = list(set(nums))\n    # Sort the list\n    nums.sort()\n    # Check if each element at index 'i' is equal to the last element at index 'n - i - 1'\n    n = len(nums)\n    for i in range(n):\n        if nums[i] != nums[-(i+1)]:\n            return False\n    return True",
    "tests": [
        "assert is_mirror([2, 4, 4, 2]) == True",
        "assert is_mirror([1, 7, 3, 0, 3, 7, 1]) == True",
        "assert is_mirror([1, 2, 3]) == False",
        "assert is_mirror([1, 1, 2, 3, 5, 2, 1]) == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}