{
    "title": "Longest Increasing Subsequence (Hard)",
    "description": "A subsequence of a given sequence is a sequence that can be derived from the original sequence by deleting some or no elements without changing the order of the remaining elements.\nConsider an array of integers where each element represents the height of buildings at different locations. Write a function `longest_increasing_subsequence` that returns the length of the longest increasing subsequence in the given array.\n\n#### Function Signature\n```python\ndef longest_increasing_subsequence(heights: list[int]) -> int:\n``` \n\n#### Input\n- `heights` (list[int]): A list of integers representing the heights of buildings at different locations.\n\n#### Output\n- Returns an integer representing the length of the longest increasing subsequence in the given array.\n",
    "code": "from typing import List\ndef longest_increasing_subsequence(heights: List[int]) -> int:\n    dp = [1] * len(heights)\n    for i in range(1, len(heights)):\n        for j in range(i):\n            if heights[i] > heights[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return max(dp)",
    "tests": [
        "assert longest_increasing_subsequence([5,4,3,2,1]) == 1",
        "assert longest_increasing_subsequence([1,3,6,7,9]) == 5",
        "assert longest_increasing_subsequence([10]) == 1",
        "assert longest_increasing_subsequence([1,2,3,4,5]) == 5"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}