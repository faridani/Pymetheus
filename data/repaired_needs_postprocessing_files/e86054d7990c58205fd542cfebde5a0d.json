{
    "title": "Medium - Find the Majority Element",
    "description": "Given an array of integers, find the element that appears more than n/2 times, where n is the length of the array. If no such element exists, return None.\n\n#### Function Signature\n```python\ndef find_majority_element(nums: list[int]) -> int or None:\n```\n\n#### Input\n- `nums` (list[int]): A list of integers.\n\n#### Output\n- Returns the majority element if it exists, otherwise returns `None`.",
    "code": "from collections import Counter\ndef find_majority_element(nums: list[int]) -> int or None:\n    counts = Counter(nums)\n    for num, count in counts.items():\n        if count > len(nums) // 2:\n            return num\n    return None",
    "tests": [
        "assert find_majority_element([2,2,1,1,1,2,2]) == 2",
        "assert find_majority_element([3,2,3]) == 3",
        "assert find_majority_element([1,2]) is None"
    ],
    "model": "gemma2:27b-repaired by Llama 3"
}