{
    "title": "Finding the Shortest Common Supersequence",
    "description": "Given two strings `str1` and `str2`, find the length of their shortest common supersequence. A supersequence is a sequence that contains all the elements of another sequence, possibly in a different order.\n\n#### Function Signature\n```python\ndef shortest_common_supersequence(str1: str, str2: str) -> int:\n```\n\n#### Input\n- `str1` (str), `str2` (str): Two strings that may contain letters and numbers.\n\n#### Output\n- Returns the length of their shortest common supersequence.",
    "code": "def shortest_common_supersequence(str1: str, str2: str) -> int:\n    m = len(str1)\n    n = len(str2)\n    dp = [[0] * (n + 1) for _ in range(m + 1)]\n    for i in range(1, m + 1):\n        for j in range(1, n + 1):\n            if str1[i - 1] == str2[j - 1]:\n                dp[i][j] = dp[i - 1][j - 1] + 1\n            else:\n                dp[i][j] = max(dp[i - 1][j], dp[i][j - 1])\n    return dp[m][n]",
    "tests": [
        "assert shortest_common_supersequence('abc', 'def') == 6",
        "assert shortest_common_supersequence('hello', 'world') == 7",
        "assert shortest_common_supersequence('', 'x') == 1",
        "assert shortest_common_supersequence('a', '') == 1"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}