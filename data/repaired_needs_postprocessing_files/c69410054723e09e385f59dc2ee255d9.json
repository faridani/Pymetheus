{
    "title": "Anagram Detector (Hard)",
    "description": "Given two strings, write a function `anagram_checker` that checks if the two strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of another word or phrase. For example, the words 'listen' and 'silent' are anagrams.\n\n#### Function Signature\n```python\ndef anagram_checker(str1: str, str2: str) -> bool:\n``` \n\n#### Input\n- `str1` (str): A non-empty string containing only lowercase letters.\n- `str2` (str): Another non-empty string containing only lowercase letters.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "import collections\ndef anagram_checker(str1: str, str2: str) -> bool:\n    # Count characters in both strings and compare\n    char_counts1 = collections.Counter(str1)\n    char_counts2 = collections.Counter(str2)\n    return char_counts1 == char_counts2",
    "tests": [
        "assert anagram_checker('listen', 'silent') == True",
        "assert anagram_checker('act', 'cat') == True",
        "assert anagram_checker('hello', 'world') == False",
        "assert anagram_checker('movie', 'evil') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}