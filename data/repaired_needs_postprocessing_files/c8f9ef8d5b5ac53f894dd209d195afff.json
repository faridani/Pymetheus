{
    "title": "'Checker of Mirrored Sequences (Easy)',",
    "description": "Given a string, write a function `is_symmetric` that checks if the given string is symmetric. A symmetric string is a string where reversing it results in the same sequence of characters. For example, 'level' is not symmetric but 'madam' and 'radar' are.\n\n#### Function Signature\n```python\ndef is_symmetric(s: str) -> bool:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns `True` if the input string is symmetric, `False` otherwise.\n",
    "code": "import string\ndef is_symmetric(s: str) -> bool:\n    # Remove non-alphanumeric characters\n    s = ''.join(char for char in s if char in string.ascii_letters + string.digits)\n    # Check if the string reads the same forwards and backwards after removing non-alphanumeric characters\n    return s == s[::-1]\n",
    "tests": [
        "assert is_symmetric('level') == False",
        "assert is_symmetric('madam') == True",
        "assert is_symmetric('radar') == True",
        "assert is_symmetric('A man, a plan, a canal, Panama') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}