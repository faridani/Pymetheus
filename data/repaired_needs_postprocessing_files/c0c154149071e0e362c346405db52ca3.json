{
    "title": "Medium: Substring Sum Checker",
    "description": "Given a string representing an integer and a target sum, write a function that checks if the string has a substring whose sum of characters equals the target. The input string may contain leading zeros.\n\n#### Function Signature\n```python\ndef has_substring_sum(s: str, target: int) -> bool:\n```\n\n#### Input\n- `s` (str): A string representing an integer that may contain leading zeros.\n- `target` (int): The target sum to search for in the substring.\n\n#### Output\nReturns `True` if the input string has a substring with a sum equal to the target, otherwise returns `False`.\n\n### Example:\n```python\nclass SubstringSumChecker {\n    def has_substring_sum(self, s: str, target: int) -> bool:\n        num = int(s)\n        return num >= target and (target in s or target - 9 * '0' in s)\n}\nhas_substring_sum('12345', 7)  # Returns True\nhas_substring_sum('000123', 3)  # Returns True\nhas_substring_sum('12345678', 15)  # Returns False\n```",
    "code": "def has_substring_sum(s: str, target: int) -> bool:\n    num = int(s)\n    return num >= target and (target in s or target - 9 * '0' in s)",
    "tests": [
        "assert has_substring_sum('12345', 7) == True",
        "assert has_substring_sum('000123', 3) == True",
        "assert has_substring_sum('12345678', 15) == False",
        "assert has_substring_sum('00001010', 18) == True"
    ],
    "model": "aya:35b-repaired by Llama 3"
}