{
    "title": "Easy: Maximum Sum of an Hourglass",
    "description": "Given a 2D array `grid` where each cell can contain either 0 or 1, write a function `max_hourglass_sum` that calculates the maximum sum of an hourglass in the grid. An hourglass is defined as any shape with three cells in the top row and three cells in the bottom row that contains only zeros on the sides.\n\n#### Function Signature\n```python\ndef max_hourglass_sum(grid: list[list[int]]) -> int:\n```\n\n#### Input\n- `grid` (list[list[int]]): A 2D array where each cell can contain either 0 or 1.\n\n#### Output\n- Returns the maximum sum of an hourglass in the grid.",
    "code": "def max_hourglass_sum(grid: list[list[int]]) -> int:\n    if not grid:\n        return 0\n    max_sum = float('-inf')\n    for i in range(len(grid) - 2):\n        for j in range(len(grid[0]) - 2):\n            hourglass_sum = (grid[i][j] + grid[i][j+1] + grid[i][j+2] + \n                             grid[i+2][j] + grid[i+2][j+1] + grid[i+2][j+2])\n            if hourglass_sum > max_sum:\n                max_sum = hourglass_sum\n    return max_sum",
    "tests": [
        "assert max_hourglass_sum([[0, 1, 0], [1, 1, 1], [0, 1, 0]]) == 4",
        "assert max_hourglass_sum([[0, 0, 0], [1, 1, 1], [0, 0, 0]]) == 3",
        "assert max_hourglass_sum([]) == 0"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}