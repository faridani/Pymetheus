{
    "title": "Easy: Number of Islands",
    "description": "Given a 2D binary grid, count the number of islands. An island is a group of 1s that are connected horizontally or vertically.\n\n#### Function Signature\n```python\ndef count_islands(grid: list[list[int]]) -> int:\n``` \n\n#### Input\n- `grid` (list[list[int]]): A 2D binary grid, where 0 represents water and 1 represents land.\n\n#### Output\n- Returns the number of islands in the input grid.",
    "code": "def count_islands(grid: list[list[int]]) -> int:\n    if not grid or not grid[0]:\n        return 0\n    def dfs(i, j):\n        if i < 0 or i >= len(grid) or j < 0 or j >= len(grid[0]) or grid[i][j] == 0:\n            return\n        grid[i][j] = 0\n        dfs(i-1, j)\n        dfs(i+1, j)\n        dfs(i, j-1)\n        dfs(i, j+1)\n    count = 0\n    for i in range(len(grid)):\n        for j in range(len(grid[0])):\n            if grid[i][j] == 1:\n                dfs(i, j)\n                count += 1\n    return count",
    "tests": [
        "assert count_islands([[0,0,0,0,0],[1,0,1,0,0],[0,0,1,0,0],[0,0,0,1,1]]) == 1",
        "assert count_islands([[1,1,0,0,0],[1,1,0,0,0],[0,0,1,0,0],[0,0,0,1,1]]) == 3",
        "assert count_islands([]) == 0",
        "assert count_islands([[]]) == 0"
    ],
    "model": "llama3:latest-repaired by Llama 3"
}