{
    "title": "Anagram Finder (Hard)",
    "description": "Given two strings, write a function `anagram_checker` that determines whether the two strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef anagram_checker(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1`, `str2` (str): Two strings that may contain only letters in lowercase and no spaces.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def anagram_checker(str1: str, str2: str) -> bool:\n    # Remove any non-alphabetic characters\n    cleaned_str1 = ''.join([char for char in str1 if char.isalpha()]).lower()\n    cleaned_str2 = ''.join([char for char in str2 if char.isalpha()]).lower()\n    # Sort the strings and compare them\n    return sorted(cleaned_str1) == sorted(cleaned_str2)",
    "tests": [
        "assert anagram_checker('listen', 'silent') == True",
        "assert anagram_checker('hello', 'olleh') == True",
        "assert anagram_checker('world', 'dragon') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}