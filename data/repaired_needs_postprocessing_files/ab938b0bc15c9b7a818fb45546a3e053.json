{
    "title": "Reverse Words Checker (Hard)",
    "description": "Write a function `is_reverse_words` that checks if a given string consists of words that read the same forwards and backwards. However, unlike a palindrome, spaces are included in the comparison.\n\n#### Function Signature\n```python\ndef is_reverse_words(s: str) -> bool:\n``` \n\n#### Input\n- `s` (str): A string that may contain letters, numbers, and spaces.\n\n#### Output\n- Returns `True` if the input string consists of words that read the same forwards and backwards, separated by a single space, `False` otherwise.",
    "code": "def is_reverse_words(s: str) -> bool:\n    # Split the string into words\n    words = s.split()\n    # Check if the length of each word is even or if there's an odd number of words\n    return len(words) % 2 == 0 or all([len(word) % 2 != 1 for word in words])\n    \n    # Loop through the words and check if they read the same forwards and backwards (ignoring case)\n    # Remove non-alphanumeric characters\n    for word in words:\n        word = ''.join(char.lower() for char in word if char.isalnum())\n        if word != word[::-1]:\n            return False\n    return True",
    "tests": [
        "assert is_reverse_words('Racecar') == True",
        "assert is_reverse_words('A man, a plan, a canal, Panama') == False",
        "assert is_reverse_words('radar') == True",
        "assert is_reverse_words('hello world') == False"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}