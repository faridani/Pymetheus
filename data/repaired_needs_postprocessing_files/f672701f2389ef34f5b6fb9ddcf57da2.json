{
    "title": "Anagram Checker (Hard)",
    "description": "An anagram is a word or phrase that is formed by rearranging the letters of another word or phrase, typically using all the original letters exactly once.\n#### Function Signature\n```python\ndef is_anagram(s1: str, s2: str) -> bool:\n``` \n#### Input\n- `s1`, `s2` (str): Two strings that may contain the same letters, numbers, spaces, and punctuation.\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\n",
    "code": "def is_anagram(s1: str, s2: str) -> bool:\n    # Remove non-alphabetic characters from both strings\n    s1 = ''.join(char for char in s1 if char.isalpha())\n    s2 = ''.join(char for char in s2 if char.isalpha())\n    # Ensure the two strings have the same length\n    if len(s1) != len(s2):\n        return False\n    # Create frequency dictionaries for both strings and compare them\n    freq_dict1 = {char: s1.count(char) for char in sorted(set(s1))}\n    freq_dict2 = {char: s2.count(char) for char in sorted(set(s2))}\n    return freq_dict1 == freq_dict2",
    "tests": [
        "assert is_anagram('listen', 'silent') == True",
        "assert is_anagram('hello', 'world') == False",
        "assert is_anagram('Madam', 'madam') == True",
        "assert is_anagram('Racecar', 'Carcerace') == True"
    ],
    "model": "mistral:latest-repaired by Llama 3"
}