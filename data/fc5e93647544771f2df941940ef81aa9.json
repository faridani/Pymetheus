{
    "title": "Anagram Detection (Hard)",
    "description": "Write a function `anagram_checker` that checks if two strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef anagram_checker(string1: str, string2: str) -> bool:\n```\n\n#### Input\n- `string1` (str): A string of alphabets that may contain duplicate letters.\n- `string2` (str): Another string of alphabets that may contain duplicate letters.\n\n#### Output\n- Returns `True` if the two strings are anagrams, `False` otherwise.\n",
    "code": "def anagram_checker(string1: str, string2: str) -> bool:\n    # Remove spaces and convert both strings to lowercase\n    cleaned_string1 = ''.join(sorted(string1.lower().replace(' ', '')))\n    cleaned_string2 = ''.join(sorted(string2.lower().replace(' ', '')))\n    # Check if both strings have the same length and are equal after sorting\n    return len(cleaned_string1) == len(cleaned_string2) and cleaned_string1 == cleaned_string2",
    "tests": [
        "assert anagram_checker('listen', 'silent') == True",
        "assert anagram_checker('actinium', 'nicomaque') == True",
        "assert anagram_checker('hello', 'world') == False",
        "assert anagram_checker('alpha', 'apple') == False"
    ],
    "difficulty": "super hard",
    "model": "mistral:latest"
}