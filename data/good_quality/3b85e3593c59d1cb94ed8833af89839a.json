{
    "title": "Number of Islands",
    "description": "Given a 2D binary matrix `grid` containing 0s and 1s, where 0 represents water and 1 represents land. Write a function `num_islands` that counts the number of islands in the grid.\n\n#### Function Signature\n```python\ndef num_islands(grid: list[list[int]]) -> int:\n```\n\n#### Input\n- `grid` (list[list[int]]): A 2D binary matrix where 0 represents water and 1 represents land.\n\n#### Output\n- Returns the number of islands in the grid.",
    "code": "def num_islands(grid: list[list[int]]) -> int:\n    if not grid or not grid[0]:\n        return 0\n    count = 0\n    for i in range(len(grid)):\n        for j in range(len(grid[0])):\n            if grid[i][j] == 1:\n                self._dfs(grid, i, j)\n                count += 1\n    return count\n\ndef _dfs(grid: list[list[int]], i: int, j: int):\n    if i < 0 or j < 0 or i >= len(grid) or j >= len(grid[0]):\n        return\n    if grid[i][j] == 0:\n        return\n    grid[i][j] = 0\n    self._dfs(grid, i-1, j)\n    self._dfs(grid, i+1, j)\n    self._dfs(grid, i, j-1)\n    self._dfs(grid, i, j+1)",
    "tests": [
        "assert num_islands([[0,0,1,0,0],[0,0,1,0,0],[0,0,1,0,0]]) == 1",
        "assert num_islands([[1,1,0,0,0],[1,1,0,0,0],[0,0,1,0,0]]) == 3",
        "assert num_islands([]) == 0",
        "assert num_islands([[]]) == 0"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "Codeforces"
}