{
    "title": "Number Letter Sequences",
    "description": "A number-letter sequence is a string that consists of alternating numbers and letters. Write a function `number_letter_sequence` that takes a string as input and returns the longest possible number-letter sequence that can be formed from the given string.\n\n#### Function Signature\n```python\ndef number_letter_sequence(s: str) -> str:\n```\n\n#### Input\n- `s` (str): A string that may contain numbers, letters, and spaces.\n\n#### Output\n- Returns the longest possible number-letter sequence that can be formed from the given input string.",
    "code": "import re\n\ndef number_letter_sequence(s: str) -> str:\n    # Initialize an empty list to store the sequences\n    sequences = []\n    # Use regular expression to split the string into sequences of numbers and letters\n    for match in re.finditer(r'[0-9]+|[a-zA-Z]+', s):\n        sequence = match.group().strip()\n        if not sequences or len(sequences[-1]) + len(sequence) + 1 <= len(sequence):\n            sequences.append(sequence)\n        else:\n            sequences[-1] += sequence\n    # Join the sequences into a single string and return it\n    return ''.join(sequences)",
    "tests": [
        "assert number_letter_sequence('a0b2c') == 'a0b2c'",
        "assert number_letter_sequence('abc123def456') == 'abc123def456'",
        "assert number_letter_sequence('1a2bc3') == '1a23bc'",
        "assert number_letter_sequence('0A1B2C3') == '0A1B2C3'"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "Exercism"
}