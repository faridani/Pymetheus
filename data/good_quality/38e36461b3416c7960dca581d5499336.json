{
    "title": "Divisor Sum Challenge",
    "description": "A positive integer n is said to be a perfect divisor sum if the sum of its proper divisors (excluding itself) is equal to n. For example, 28 is a perfect divisor sum because 1 + 2 + 4 + 7 + 14 = 28.\n\n#### Function Signature\n```python\ndef find_perfect_divisor_sum(n: int) -> bool:\n```\n\n#### Input\n- `n` (int): A positive integer.\n\n#### Output\n- Returns `True` if the input integer is a perfect divisor sum, `False` otherwise.",
    "code": "import math\ndef find_perfect_divisor_sum(n: int) -> bool:\n    # Initialize the sum of proper divisors to 0\n    total = 0\n    for i in range(1, n):\n        if n % i == 0:\n            total += i\n    return total == n",
    "tests": [
        "assert find_perfect_divisor_sum(28) == True",
        "assert find_perfect_divisor_sum(12345) == False",
        "assert find_perfect_divisor_sum(6) == True",
        "assert find_perfect_divisor_sum(496) == True"
    ],
    "difficulty": "insanely difficult",
    "model": "llama3:latest",
    "style": "Facebook Hacker Cup"
}