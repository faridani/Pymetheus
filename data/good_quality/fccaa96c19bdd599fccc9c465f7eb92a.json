{
    "title": "'Prime Sums Under Thousand (Hard)'",
    "description": "Given a number `n`, find all pairs of prime numbers that add up to exactly `n` and are both under 1000.\n\n#### Function Signature\n```python\ndef find_prime_pairs(n: int) -> list:\n```\n\n#### Input\n- `n` (int): A number between 3 and 996, inclusive.\n\n#### Output\n- Returns a list of pairs of prime numbers that add up to exactly `n`, both under 1000.",
    "code": "def find_prime_pairs(n: int) -> list:\n    primes = [2] + [i for i in range(3, 1000) if all([i % j != 0 for j in range(2, int(i**0.5) + 1)] )]\n    pairs = []\n    for prime1 in primes:\n        if n - prime1 < prime1:\n            continue\n        for prime2 in primes:\n            if prime2 > prime1 and (prime1 + prime2 > n):\n                break\n            if n - prime2 < prime1:\n                continue\n            if n == prime1 + prime2:\n                pairs.append((prime1, prime2))\n    return pairs",
    "tests": [
        "assert find_prime_pairs(5) == []",
        "assert find_prime_pairs(6) == [(2, 4)]",
        "assert find_prime_pairs(8) == [(2, 6), (3, 5)]",
        "assert find_prime_pairs(10) == [(2, 8), (4, 6)]",
        "assert find_prime_pairs(17) == []",
        "assert find_prime_pairs(9) == []",
        "assert find_prime_pairs(57) == [(3, 54), (5, 52)]"
    ],
    "difficulty": "super hard",
    "model": "mistral:latest",
    "style": "Project Euler"
}