{
    "title": "Hardest Perfect Number Checker",
    "description": "A perfect number is a positive integer that is equal to the sum of its proper divisors, excluding itself. Write a function `is_perfect_number` that checks if a given number is a perfect number.\n\n#### Function Signature\n``python\ndef is_perfect_number(n: int) -> bool:\n```\n\n#### Input\n- `n` (int): A positive integer that may be a perfect number or not.\n\n#### Output\n- Returns `True` if the input number is a perfect number, `False` otherwise.\n",
    "code": "import math\n\ndef is_perfect_number(n: int) -> bool:\n    if n < 1:\n        return False\n    sum_divisors = 0\n    for i in range(1, math.isqrt(n) + 1):\n        if n % i == 0:\n            sum_divisors += i + n // i\n    return sum_divisors == n\n",
    "tests": [
        "assert is_perfect_number(6) == True",
        "assert is_perfect_number(28) == True",
        "assert is_perfect_number(13) == False",
        "assert is_perfect_number(335) == True"
    ],
    "difficulty": "hard",
    "model": "llama3:latest"
}