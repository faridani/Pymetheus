{
    "title": "[Hard] Unique Paths",
    "description": "You are given a robot that can only move down or right. Given the number of rows and columns, calculate the total unique paths from the top-left corner to the bottom-right corner.\n\n#### Function Signature\n```python\ndef unique_paths(m: int, n: int) -> int:\n```\n\n#### Input\n- `m` (int): The number of rows in the grid.\n- `n` (int): The number of columns in the grid.\n\n#### Output\n- Returns an integer representing the total unique paths from the top-left corner to the bottom-right corner.",
    "code": "",
    "\ndef unique_paths(m: int, n: int) -> int:\n    # Create a 2D table to store results of subproblems\n    dp = [[1]*n for _ in range(m)]\n\n    # Calculate count of paths for other cells in bottom-up manner\n    for i in range(1, m):\n        for j in range(1, n):\n            # By uniques property, the result is sum of above and left cell\n            dp[i][j] = dp[i-1][j] + dp[i][j-1]\n    return dp[-1][-1]": "",
    "tests": [
        "assert unique_paths(3, 7) == 28",
        "assert unique_paths(3, 2) == 3",
        "assert unique_paths(7, 3) == 28"
    ],
    "difficulty": "hard",
    "model": "codestral:22b",
    "style": "Facebook Hacker Cup"
}