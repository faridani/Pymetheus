{
    "title": "Maximal Increasing Subsequence",
    "description": "Given a list of integers, find the length of the longest increasing subsequence.\n\n#### Function Signature\n```python\ndef max_increasing_subsequence(arr: list[int)) -> int:\n```\n\n#### Input\n- `arr` (list[int]): A list of positive integers.\n\n#### Output\n- Returns the length of the longest increasing subsequence in the input list.",
    "code": "\ndef max_increasing_subsequence(arr: list[int]) -> int:\n    if not arr:\n        return 0\n\n    dp = [1] * len(arr)\n    for i in range(1, len(arr)):\n        for j in range(i):\n            if arr[i] > arr[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n\n    return max(dp)",
    "tests": [
        "assert max_increasing_subsequence([10, 22, 9, 33, 21, 50, 41, 60]) == 5",
        "assert max_increasing_subsequence([1, 2, 3, 4, 5]) == 5",
        "assert max_increasing_subsequence([]) == 0"
    ],
    "difficulty": "insanely difficult",
    "model": "llama3:latest",
    "style": "Codeforces"
}