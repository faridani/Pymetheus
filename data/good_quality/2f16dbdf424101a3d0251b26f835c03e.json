{
    "title": "Hard: Finding the Maximum Sum of Subsequence",
    "description": "Given an array of integers and an integer k, find the maximum sum of a subsequence that has at most k distinct elements. A subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.\n\n#### Function Signature\n```python\ndef max_sum_subsequence(arr: list[int], k: int) -> int:\n```\n\n#### Input\n- `arr` (list[int]): A list of integers.\n- `k` (int): The maximum number of distinct elements allowed in the subsequence.\n\n#### Output\n- Returns the maximum sum of a subsequence that has at most k distinct elements.",
    "code": "",
    "\nfrom collections import defaultdict\n\ndef max_sum_subsequence(arr: list[int], k: int) -> int:\n    if not arr or k < 0:\n        return 0\n\n    dp = [defaultdict(int), [0] * (k + 1)]\n    for i, num in enumerate(arr):\n        for j in range(min(i, k), -1, -1):\n            dp[1][j] = max(dp[1][j], dp[0][i] + dp[1][j-1])\n        for j in range(k+1):\n            dp[0][i] = max(dp[0][i], num)\n    return max(dp[1])": "",
    "tests": [
        "assert max_sum_subsequence([1, 2, 3, 4, 5], 2) == 9",
        "assert max_sum_subsequence([-1, -2, -3, -4, -5], 0) == 0",
        "assert max_sum_subsequence([-1, -2, 3, 4, 5], 2) == 9",
        "assert max_sum_subsequence([1, 2, 3, 4, 5], 3) == 15"
    ],
    "difficulty": "super hard",
    "model": "llama3:latest",
    "style": "SPOJ"
}