{
    "title": "Finding the Maximum Sum of a Subarray",
    "description": "Given an array of integers, find the maximum sum of a contiguous subarray within it.\n\n#### Function Signature\n```python\ndef max_subarray_sum(arr: list[int]) -> int:\n```\n\n#### Input\n- `arr` (list[int]): A list of integers.\n\n#### Output\n- Returns the maximum sum of a contiguous subarray within the input array.",
    "code": "",
    "\ndef max_subarray_sum(arr: list[int]) -> int:\n    if not arr:\n        return 0\n    max_sum = current_sum = arr[0]\n    for num in arr[1:]:\n        current_sum = max(num, current_sum + num)\n        max_sum = max(max_sum, current_sum)\n    return max_sum": "",
    "tests": [
        "assert max_subarray_sum([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6",
        "assert max_subarray_sum([1]) == 1",
        "assert max_subarray_sum([]) == 0",
        "assert max_subarray_sum([-1, -2, -3, -4, -5]) == -1"
    ],
    "difficulty": "hard",
    "model": "llama3:latest",
    "style": "CodeWars"
}