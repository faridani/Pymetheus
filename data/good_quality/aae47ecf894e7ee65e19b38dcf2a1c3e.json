{
    "title": "Maximum Sum of Subarray",
    "description": "Given an array of integers, write a function `max_sum` that returns the maximum sum of any subarray within the given array.\n\n#### Function Signature\n```python\ndef max_sum(arr: list[int)) -> int:\n```\n\n#### Input\n- `arr` (list[int]): A list of integers.\n\n#### Output\n- Returns the maximum sum of any subarray within the input array.",
    "code": "",
    "\nimport itertools\n\ndef max_sum(arr: list[int]) -> int:\n    n = len(arr)\n    max_sum = float('-inf')\n    for k in range(1, n + 1):\n        for subarr in itertools.combinations_with_replacement(arr, k):\n            max_sum = max(max_sum, sum(subarr))\n    return max_sum": "",
    "tests": [
        "assert max_sum([-2, -3, 1, -5, -1]) == 6",
        "assert max_sum([1, -2, 3, 10, -4, 7, 2, -5]) == 12",
        "assert max_sum([-1, -2, -3, -4, -5]) == -1",
        "assert max_sum([1]) == 1"
    ],
    "difficulty": "hard",
    "model": "llama3:latest",
    "style": "Competitive Programming"
}