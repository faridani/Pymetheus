{
    "title": "Count Unique Substrings",
    "description": "Given a string s, write a function to count the number of unique substrings in it. For example, if the input string is 'abc', there are 6 substrings: 'a', 'ab', 'abc', 'b', 'bc', and 'c'. If the string contains only one character, the answer should be 1.\n\n#### Function Signature\n```python\ndef count_unique_substrings(s: str) -> int:\n```\n\n#### Input\n- `s` (str): A string that may contain any characters.\n\n#### Output\n- Returns an integer representing the number of unique substrings in the input string.",
    "code": "def count_unique_substrings(s: str) -> int:\n    n = len(s)\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            substring = s[i:j+1]\n            if not any(substring in x for x in [s[:i], s[i+1:j], s[j+1:]]):\n                count += 1\n    return count",
    "tests": [
        "assert count_unique_substrings('abc') == 6",
        "assert count_unique_substrings('a') == 1",
        "assert count_unique_substrings('abcabc') == 7"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "LeetCode"
}