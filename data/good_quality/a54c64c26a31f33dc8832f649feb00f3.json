{
    "title": "[Hard] Multithreaded File Processing",
    "description": "You are given a list of files that contain numbers, one number per line. Your task is to write a Python program that reads these files concurrently using multithreading and finds the sum of all numbers in them.\n\n#### Function Signature\n```python\ndef sum_numbers(files: List[str]) -> int:\n```\n\n#### Input\n- `files` (List[str]): A list of file paths. Each file contains a number on each line.\n\n#### Output\n- Returns an integer that is the sum of all numbers in all files.",
    "code": "",
    "from typing import List\nimport threading\n\ndef sum_numbers(files: List[str]) -> int:\n    total = 0\n    lock = threading.Lock()\n\n    def process_file(file):\n        nonlocal total\n        with open(file, 'r') as f:\n            for line in f:\n                num = int(line)\n                with lock:\n                    total += num\n\n    threads = []\n    for file in files:\n        thread = threading.Thread(target=process_file, args=(file,))\n        threads.append(thread)\n        thread.start()\n\n    for thread in threads:\n        thread.join()\n\n    return total": "",
    "tests": [
        "assert sum_numbers([\"file1.txt\", \"file2.txt\"]) == 50",
        "assert sum_numbers([\"file3.txt\", \"file4.txt\", \"file5.txt\"]) == 150"
    ],
    "difficulty": "insanely difficult",
    "model": "codestral:22b",
    "style": "Interview Query"
}