{
    "title": "Counting Islands",
    "description": "Given a 2D grid of size m x n, where each cell contains either 0 or 1. You are asked to count the number of islands in the grid.\n\n#### Function Signature\n```python\ndef count_islands(grid: list[list[int]]) -> int:\n```\n\n#### Input\n- `grid` (list[list[int]]): A 2D grid where each cell contains either 0 or 1, representing water and land respectively.\n\n#### Output\n- Returns the number of islands in the grid. Two adjacent cells are considered to be part of the same island if they have the same value.",
    "code": "",
    "\nimport copy\n\ndef count_islands(grid: list[list[int]]) -> int:\n    if not grid or not grid[0]:\n        return 0\n    count = 0\n    for i in range(len(grid)):\n        for j in range(len(grid[i])):\n            if grid[i][j] == 1 and grid[i][j-1] != 'D':\n                dfs(grid, i, j)\n                count += 1\n    return count\n\ndef dfs(grid: list[list[int]], i: int, j: int):\n    if i < 0 or j < 0 or i >= len(grid) or j >= len(grid[i]) or grid[i][j] == 'D':\n        return\n    grid[i][j] = 'D'\n    for x in range(-1, 2):\n        for y in range(-1, 2):\n            if abs(x) != 0 and abs(y) != 0:\n                dfs(grid, i + x, j + y)": "",
    "tests": [
        "assert count_islands([[0,0,0,0,0],[0,1,0,0,0],[0,1,1,1,0],[0,1,0,0,0],[0,0,0,0,0]]) == 1",
        "assert count_islands([[1,1,1],[1,1,0],[1,0,1]]) == 3",
        "assert count_islands([[0,0,0,0,0],[0,1,0,0,0],[0,0,0,1,0],[0,0,0,0,0]]) == 1",
        "assert count_islands([]) == 0"
    ],
    "difficulty": "hard",
    "model": "llama3:latest",
    "style": "Interview Query"
}