{
    "title": "Hard: Minimum Cost Path",
    "description": "You are given a 2D grid of size N x M where each cell contains a cost. The task is to find the minimum cost path from top-left to bottom-right using only right and down movements. Write a function `min_cost` that calculates the minimum cost.\n\n#### Function Signature\n```python\ndef min_cost(grid: List[List[int]]) -> int:\n```\n\n#### Input\n- `grid` (List[List[int]]): A 2D list of integers where each integer represents the cost of that cell.\n\n#### Output\n- Returns an integer representing the minimum cost to reach the bottom-right corner of the grid from the top-left corner using only right and down movements.",
    "code": "",
    "from typing import List\ndef min_cost(grid: List[List[int]]) -> int:\n    m, n = len(grid), len(grid[0])\n    dp = [[0] * (n + 1) for _ in range(m + 1)]\n    for i in range(1, m + 1):\n        dp[i][0] = float('inf')\n    for j in range(1, n + 1):\n        dp[0][j] = float('inf')\n    dp[1][1] = grid[0][0]\n    for i in range(1, m + 1):\n        for j in range(1, n + 1):\n            if i == 1 and j == 1:\n                continue\n            dp[i][j] = grid[i-1][j-1] + min(dp[i-1][j], dp[i][j-1])\n    return dp[-1][-1]": "",
    "tests": [
        "assert min_cost([[1, 3, 5], [2, 8, 4], [7, 6, 9]]) == 16",
        "assert min_cost([[1, 2, 3], [4, 5, 6]]) == 21"
    ],
    "difficulty": "hard",
    "model": "codestral:22b",
    "style": "ICPC"
}