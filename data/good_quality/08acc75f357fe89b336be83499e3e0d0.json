{
    "title": "Minimum Distance Between Identical Elements",
    "description": "Given a list of integers, find the minimum distance between any two identical elements. If there are no identical elements, return -1.\n\n#### Function Signature\n```python\ndef min_distance(arr: list[int]) -> int:\n```\n\n#### Input\n- `arr` (list[int]): A list of unique integers.\n\n#### Output\n- Returns the minimum distance between any two identical elements. If there are no identical elements, return -1.",
    "code": "\nimport math\n\ndef min_distance(arr: list[int]) -> int:\n    arr.sort()\n    min_dist = float('inf')\n    prev_val = None\n    for val in arr:\n        if val == prev_val:\n            dist = 0\n            i = 1\n            while i < len(arr) and arr[i] == val:\n                dist += 1\n                i += 1\n            min_dist = min(min_dist, dist)\n        prev_val = val\n    return -1 if min_dist == float('inf') else min_dist",
    "tests": [
        "assert min_distance([1, 2, 3, 4, 5]) == -1",
        "assert min_distance([1, 2, 1, 3, 1, 4, 1]) == 1",
        "assert min_distance([1, 1, 2, 3, 3, 4, 4]) == 1",
        "assert min_distance([5, 6, 7, 8, 9, 10]) == -1"
    ],
    "difficulty": "insanely difficult",
    "model": "llama3:latest",
    "style": "ICPC"
}