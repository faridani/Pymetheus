{
    "title": "Anagram Detector (Hard)",
    "description": "Write a function `anagram_checker` that checks if two given strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef anagram_checker(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1`, `str2` (str): Two strings that may contain letters, numbers, and spaces.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\n",
    "code": "from collections import Counter\n\ndef anagram_checker(str1: str, str2: str) -> bool:\n    # Ensure both strings have the same length\n    if len(str1) != len(str2):\n        return False\n    \n    # Count the frequency of each character in both strings\n    counter1 = Counter(str1)\n    counter2 = Counter(str2)\n    \n    # Check if both counts are equal\n    return counter1 == counter2",
    "tests": [
        "assert anagram_checker('listen', 'silent') == True",
        "assert anagram_checker('python', 'typhon') == False",
        "assert anagram_checker('Madam', 'ma' + 'dame') == True"
    ],
    "difficulty": "super hard",
    "model": "mistral:latest"
}