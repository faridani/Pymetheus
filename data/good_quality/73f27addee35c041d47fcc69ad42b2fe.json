{
    "title": "Divisor Sum Product",
    "description": "Given a list of integers, find the product of all divisors (except 1 and the number itself) for each integer. Return a new list where each element is the product of all divisors for the corresponding input integer.\n\n#### Function Signature\n```python\ndef divisor_sum_product(numbers: List[int]) -> List[int]:\n```\n\n#### Input\n- `numbers` (List[int]): A list of integers.\n\n#### Output\n- Returns a new list where each element is the product of all divisors for the corresponding input integer, except 1 and the number itself.",
    "code": "\nimport math\n\ndef divisor_sum_product(numbers):\n    result = []\n    for num in numbers:\n        product = 1\n        for i in range(2, int(math.sqrt(num)) + 1):\n            if num % i == 0:\n                j = num // i\n                product *= (i - 1) * (j - 1)\n        result.append(product)\n    return result",
    "tests": [
        "assert divisor_sum_product([2, 3, 4, 5]) == [0, 6, 7, 10]",
        "assert divisor_sum_product([12, 15, 20, 25]) == [48, 240, 280, 300]",
        "assert divisor_sum_product([1, 2, 3]) == [0, 0, 6]",
        "assert divisor_sum_product([]) == []"
    ],
    "difficulty": "insanely difficult",
    "model": "llama3:latest",
    "style": "Codeforces"
}