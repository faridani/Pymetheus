{
    "title": "Number of Islands",
    "description": "Given an m x n grid filled with non-negative numbers, find the number of islands. An island is a connected group of 1s that are not surrounded by 2s.\n\n#### Function Signature\n```\ndef count_islands(grid: list[list[int]]) -> int:\n```",
    "code": "\ndef count_islands(grid: list[list[int]]) -> int:\n    if not grid:\n        return 0\n\n    count = 0\n    for i in range(len(grid)):\n        for j in range(len(grid[0])):\n            if grid[i][j] == 1:\n                dfs(grid, i, j)\n                count += 1\n\n    return count\n\ndef dfs(grid: list[list[int]], i: int, j: int) -> None:\n    if i < 0 or i >= len(grid) or j < 0 or j >= len(grid[0]) or grid[i][j] != 1:\n        return\n    grid[i][j] = 2\n\n    dfs(grid, i - 1, j)\n    dfs(grid, i + 1, j)\n    dfs(grid, i, j - 1)\n    dfs(grid, i, j + 1)",
    "tests": [
        "assert count_islands([[0,0,1,0,0],[0,0,1,0,0],[0,0,1,0,0]]) == 1",
        "assert count_islands([[1,1,0,0,0],[1,1,0,0,0],[0,0,0,1,1]]) == 2",
        "assert count_islands([[1,1,1,1,1],[1,0,0,0,1],[1,0,0,0,1],[1,1,1,1,1]]) == 1",
        "assert count_islands([]) == 0"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "CodeWars"
}