{
    "title": "Maximum Area of Island",
    "description": "Given an n x n grid containing only values 0 and 1, where 1 represents land and 0 represents water. Find the maximum area of a connected group of islands.\n\n#### Function Signature\n```\ndef maxAreaOfIsland(grid: List[List[int]]) -> int:\n```",
    "code": "",
    "\nfrom typing import List\n\ndef maxAreaOfIsland(grid: List[List[int]]) -> int:\n    if not grid:\n        return 0\n\n    m, n = len(grid), len(grid[0])\n    directions = [(0, 1), (0, -1), (1, 0), (-1, 0)]\n    max_area = 0\n\n    def dfs(i: int, j: int) -> int:\n        if i < 0 or i >= m or j < 0 or j >= n or grid[i][j] == 0:\n            return 0\n        area = 1\n        grid[i][j] = 0\n        for d in directions:\n            ni, nj = i + d[0], j + d[1]\n            area += dfs(ni, nj)\n        return area\n\n    for i in range(m):\n        for j in range(n):\n            if grid[i][j] == 1:\n                max_area = max(max_area, dfs(i, j))\n\n    return max_area": "",
    "tests": [
        "assert maxAreaOfIsland([[0,0,1,0,0],[0,0,1,0,0],[0,0,1,0,0]]) == 4",
        "assert maxAreaOfIsland([[0,0,1,0,0,0,0,1],[1,0,0,0,1,1,1,1],[1,0,0,0,1,1,1,1]]) == 15"
    ],
    "difficulty": "super hard",
    "model": "llama3:latest",
    "style": "LeetCode"
}