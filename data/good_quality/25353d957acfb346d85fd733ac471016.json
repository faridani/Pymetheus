{
    "title": "Easy: Evenly Spaced Integers",
    "description": "Write a function `evenly_spaced_integers` that takes an integer `n` as input and returns the number of ways to arrange `n` evenly spaced integers from 1 to `n` in a line. For example, for `n = 3`, the possible arrangements are 1-2-3, 1-3-2, and so on. The function should return the total count of these arrangements.\n\n#### Function Signature\n```python\ndef evenly_spaced_integers(n: int) -> int:\n```\n\n#### Input\n- `n` (int): A positive integer representing the number of integers to arrange.",
    "code": "\nimport math\n\ndef evenly_spaced_integers(n: int) -> int:\n    # Calculate the total count using formula for permutations\n    return math.factorial(2 * n - 1) // (math.factorial(n) ** 2)",
    "tests": [
        "assert evenly_spaced_integers(3) == 3",
        "assert evenly_spaced_integers(4) == 6",
        "assert evenly_spaced_integers(5) == 10"
    ],
    "difficulty": "easy",
    "model": "llama3:latest",
    "style": "CodeWars"
}