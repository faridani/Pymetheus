{
    "title": "Medium: Maximum Sum of Subarray",
    "description": "Given an array of integers, find the maximum sum of a subarray within the given array. A subarray is a contiguous segment of an array.\n\n#### Function Signature\n```python\ndef max_sum_subarray(arr: list[int)) -> int:\n```\n\n#### Input\n- `arr` (list[int]): A list of integers representing the input array.\n\n#### Output\n- Returns the maximum sum of a subarray within the given array.",
    "code": "",
    "\nimport sys\n\ndef max_sum_subarray(arr: list[int]) -> int:\n    n = len(arr)\n    if n == 0:\n        return 0\n    \n    max_sum = arr[0]\n    current_sum = arr[0]\n    \n    for i in range(1, n):\n        current_sum = max(arr[i], current_sum + arr[i])\n        max_sum = max(max_sum, current_sum)\n    \n    return max_sum": "",
    "tests": [
        "assert max_sum_subarray([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6",
        "assert max_sum_subarray([0, 1, -2, 3, -1, 2]) == 4",
        "assert max_sum_subarray([-1, 2, -3, 4, -1, 2, 1]) == 5"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "Competitive Programming"
}