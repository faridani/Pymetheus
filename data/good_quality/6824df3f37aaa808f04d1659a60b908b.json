{
    "title": "Counting Islands",
    "description": "Given a 2D array of integers, count the number of islands. A cell with value 1 represents an island and a cell with value 0 represents water.\n\n#### Function Signature\n```python\ndef count_islands(grid: list[list[int]]) -> int:\n```\n\n#### Input\n- `grid` (list[list[int]]): A 2D array of integers where 1 represents an island and 0 represents water.\n\n#### Output\n- Returns the number of islands in the grid.",
    "code": "def count_islands(grid: list[list[int]]) -> int:\n    if not grid or not grid[0]:\n        return 0\n    count = 0\n    for i in range(len(grid)):\n        for j in range(len(grid[i])):\n            if grid[i][j] == 1:\n                # Perform DFS to mark all connected cells as visited\n                stack = [(i, j)]\n                while stack:\n                    x, y = stack.pop()\n                    if (0 <= x < len(grid)) and (0 <= y < len(grid[0])) and grid[x][y] == 1:\n                        grid[x][y] = 0\n                        if i > 0 or j > 0 or x + 1 >= len(grid) or y + 1 >= len(grid[0]):\n                            stack.extend([(i-1, j), (i+1, j), (i, j-1), (i, j+1), (x-1, y), (x+1, y), (x, y-1), (x, y+1)])\n                count += 1\n    return count",
    "tests": [
        "assert count_islands([[0,0,1,0,0],[1,0,1,1,0],[0,1,0,1,1],[1,1,1,1,1]]) == 1",
        "assert count_islands([[1,1,0,0,0],[1,1,0,0,0],[0,0,1,0,0],[0,0,0,1,1]]) == 3",
        "assert count_islands([[1,0,0,0,0],[1,0,1,1,0],[0,0,1,0,0],[0,0,0,1,1]]) == 4"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "CodeWars"
}