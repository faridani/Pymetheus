{
    "title": "Easy: Reverse Integer",
    "description": "Given an integer, reverse the digits of that integer. For example, given 12345, return 54321.\n\n#### Function Signature\n```python\ndef reverse_integer(x: int) -> int:\n```\n\n#### Input\n- `x` (int): An integer.\n\n#### Output\n- Returns the reversed integer. If reversing results in an overflow, return 0.",
    "code": "def reverse_integer(x: int) -> int:\n    sign = 1 if x >= 0 else -1\n    x = abs(x)\n    reversed_x = 0\n    while x > 0:\n        digit = x % 10\n        reversed_x = reversed_x * 10 + digit\n        x //= 10\n    reversed_x *= sign\n    if reversed_x < -2**31 or reversed_x > 2**31 - 1:\n        return 0\n    return reversed_x",
    "tests": [
        "assert reverse_integer(123) == 321",
        "assert reverse_integer(-456) == -654",
        "assert reverse_integer(1534236469) == 0"
    ],
    "difficulty": "easy",
    "model": "gemma2:27b",
    "style": "Daily Coding Problem"
}