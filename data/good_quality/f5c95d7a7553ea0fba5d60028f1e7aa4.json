{
    "title": "Hard: Minimum Deletions to Make Array Unordered",
    "description": "Given an array of integers, find the minimum number of deletions required to make the array unordered. An array is considered unordered if its elements are not in any sorted order (increasing or decreasing). \n\n#### Function Signature\n```python\ndef min_deletions(arr: list[int)) -> int:\n```\n\n#### Input\n- `arr` (list[int]): A list of integers.\n\n#### Output\n- Returns the minimum number of deletions required to make the array unordered.",
    "code": "",
    "\nfrom typing import List\n\ndef min_deletions(arr: List[int]) -> int:\n    n = len(arr)\n    total = sum(1 for x in arr if x % 2 == 0) + (n // 2) * (n % 2 != 0)\n    return max(0, total - n)": "",
    "tests": [
        "assert min_deletions([2,4]) == 3",
        "assert min_deletions([1,3,5]) == 0",
        "assert min_deletions([2,3,5]) == 3",
        "assert min_deletions([1,2,3,4,5]) == 3"
    ],
    "difficulty": "insanely difficult",
    "model": "llama3:latest",
    "style": "HackerEarth"
}