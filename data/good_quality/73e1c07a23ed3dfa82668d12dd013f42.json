{
    "title": "Easy: Prime Digit Sum",
    "description": "A prime number is a natural number greater than 1 that has no positive divisors other than 1 and itself. Write a function `is_prime` that takes an integer as input and returns `True` if the integer is prime, `False` otherwise.\n\n#### Function Signature\n```\ndef is_prime(n: int) -> bool:\n```\n\n#### Input\n- `n` (int): An integer to check for primality.\n\n#### Output\n- Returns `True` if the input integer is prime, `False` otherwise.",
    "code": "",
    "\nimport math\n\ndef is_prime(n: int) -> bool:\n    # Check if n is less than 2\n    if n < 2:\n        return False\n    \n    # Check if n is 2 or 3 (the only primes that are single-digit)\n    if n in [2, 3]:\n        return True\n    \n    # Check if n is divisible by any number up to its square root\n    for i in range(2, math.isqrt(n) + 1):\n        if n % i == 0:\n            return False\n    \n    return True": "",
    "tests": [
        "assert is_prime(11) == True",
        "assert is_prime(12) == False",
        "assert is_prime(37) == True",
        "assert is_prime(-5) == False"
    ],
    "difficulty": "easy",
    "model": "llama3:latest",
    "style": "Codeforces"
}