{
    "title": "'Checker of Inverse Sequences (Easy)'",
    "description": "A sequence of characters is said to be an inverse sequence if it reads the same forwards and backwards (ignoring spaces, punctuation, and capitalization). Write a function `is_inverse_sequence` that checks if a given string is an inverse sequence.\n\n#### Function Signature\n```python\ndef is_inverse_sequence(s: str) -> bool:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns `True` if the input string is an inverse sequence, `False` otherwise.",
    "code": "import string\ndef is_inverse_sequence(s: str) -> bool:\n    # Convert to lowercase\n    s = s.lower()\n    # Remove non-alphanumeric characters\n    s = ''.join(char for char in s if char in string.ascii_letters + string.digits)\n    # Reverse the string and compare with the original\n    return s == s[::-1]",
    "tests": [
        "assert is_inverse_sequence('A man, a plan, a canal, Panama') == True",
        "assert is_inverse_sequence('racecar') == True",
        "assert is_inverse_sequence('hello') == False",
        "assert is_inverse_sequence('No \\'x\\' in Nixon') == False"
    ],
    "difficulty": "easy",
    "model": "mistral:latest",
    "style": "Competitive Programming"
}