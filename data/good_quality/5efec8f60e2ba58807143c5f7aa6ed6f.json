{
    "title": "Max Sum Increasing Subsequence",
    "description": "A subsequence of an array is a sequence that can be derived from the array by deleting some or no elements without changing the order. Write a function `max_sum_is` that finds the maximum sum of a subsequence in which each element is greater than its previous one.\n\n#### Function Signature\n```python\ndef max_sum_is(nums: list[int]) -> int:\n```\n\n#### Input\n- `nums` (list[int]): A list of integers.\n\n#### Output\n- Returns the maximum sum of a subsequence in which each element is greater than its previous one.",
    "code": "def max_sum_is(nums: list[int]) -> int:\n    if len(nums) == 1:\n        return nums[0]\n    dp = [num for num in nums]\n    for i in range(1, len(nums)):\n        for j in range(i):\n            if nums[i] > nums[j]:\n                dp[i] = max(dp[i], dp[j] + nums[i])\n    return max(dp)",
    "tests": [
        "assert max_sum_is([10, 70, 60, 80, 40]) == 250",
        "assert max_sum_is([1, 2, 3, 4, 5]) == 15",
        "assert max_sum_is([-1, -2, -3, -4, -5]) == -1"
    ],
    "difficulty": "super hard",
    "model": "llama3:latest",
    "style": "HackerRank"
}