{
    "title": "Maximum Sum of Subarray",
    "description": "Given an array of integers, find the maximum sum of a subarray. A subarray is any contiguous segment of the original array.\n\n#### Function Signature\n```python\ndef max_subarray_sum(arr: list[int]) -> int:\n```\n\n#### Input\n- `arr` (list[int]): An array of integers.\n\n#### Output\n- Returns the maximum sum of a subarray.",
    "code": "",
    "\ndef max_subarray_sum(arr: list[int]) -> int:\n    n = len(arr)\n    if n == 0:\n        return 0\n    max_sum = arr[0]\n    current_sum = arr[0]\n    for i in range(1, n):\n        current_sum = max(arr[i], current_sum + arr[i])\n        max_sum = max(max_sum, current_sum)\n    return max_sum": "",
    "tests": [
        "assert max_subarray_sum([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6",
        "assert max_subarray_sum([1, 2, 3, 10, 5, 7, 8, 9]) == 24",
        "assert max_subarray_sum([-5, 0, -3, 2, -2, 2]) == 5",
        "assert max_subarray_sum([]) == 0"
    ],
    "difficulty": "insanely difficult",
    "model": "llama3:latest",
    "style": "Codeforces"
}