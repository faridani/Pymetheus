{
    "title": "Minimum Number of Operations to Make Array Equal",
    "description": "Given an array of integers `arr` and an integer `k`, write a function `min_operations` that calculates the minimum number of operations required to make all elements in the array equal. An operation is defined as either incrementing or decrementing an element by 1. \n\n#### Function Signature\n```python\ndef min_operations(arr: list[int], k: int) -> int:\n```\n\n#### Input\n- `arr` (list[int]): A list of integers.\n- `k` (int): The target value all elements in the array should be equal to.\n\n#### Output\n- Returns the minimum number of operations required to make all elements in the array equal.\n\n#### Constraints\n- All elements in the array are unique.\n- The length of the array is between 1 and 1000.",
    "code": "",
    "\nfrom math import gcd\n\ndef min_operations(arr: list[int], k: int) -> int:\n    total = sum(abs(num - k) for num in arr)\n    common_divisor = gcd(*arr)\n    return total // common_divisor": "",
    "tests": [
        "assert min_operations([1, 2, 3, 4, 5], 3) == 8",
        "assert min_operations([-1000, -500, -200, -50, 10], 15) == 1550",
        "assert min_operations([1, 3, 5, 7, 9], 5) == 20"
    ],
    "difficulty": "insanely difficult",
    "model": "llama3:latest",
    "style": "LeetCode"
}