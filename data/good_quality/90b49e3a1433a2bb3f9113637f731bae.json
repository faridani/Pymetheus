{
    "title": "Maximum Subarray Sum",
    "description": "Given an array of integers, write a function `max_subarray_sum` that finds the maximum sum of any subarray within the given array.\n\n#### Function Signature\n```python\ndef max_subarray_sum(nums: list[int]) -> int:\n```\n\n#### Input\n- `nums` (list[int]): A list of integers representing the input array.\n\n#### Output\n- Returns the maximum sum of any subarray within the given array.",
    "code": "def max_subarray_sum(nums: list[int]) -> int:\n    if not nums:\n        return 0\n    max_sum = current_sum = nums[0]\n    for num in nums[1:]:\n        current_sum = max(num, current_sum + num)\n        max_sum = max(max_sum, current_sum)\n    return max_sum",
    "tests": [
        "assert max_subarray_sum([-2,1,-3,4,-1,2,1,-5,4]) == 6",
        "assert max_subarray_sum([1]) == 1",
        "assert max_subarray_sum([]) == 0",
        "assert max_subarray_sum([-1, -2, -3, -4, -5]) == -1"
    ],
    "difficulty": "hard",
    "model": "llama3:latest",
    "style": "LeetCode"
}