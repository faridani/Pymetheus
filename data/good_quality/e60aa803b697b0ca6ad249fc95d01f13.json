{
    "title": "Maximum Number of Non-Overlapping Intervals",
    "description": "Given a list of intervals, where each interval is represented as a tuple (start, end) and start <= end, find the maximum number of non-overlapping intervals.\n\n#### Function Signature\n```\ndef max_non_overlapping_intervals(intervals: List[Tuple[int, int]]) -> int:\n```\n\n#### Input\n- `intervals` (List[Tuple[int, int]]): A list of intervals, where each interval is a tuple of two integers representing the start and end points.\n\n#### Output\n- Returns the maximum number of non-overlapping intervals.",
    "code": "from typing import List, Tuple\n\ndef max_non_overlapping_intervals(intervals: List[Tuple[int, int]]) -> int:\n    if not intervals:\n        return 0\n    intervals.sort(key=lambda x: x[1])\n    count = 1\n    end = intervals[0][1]\n    for interval in intervals[1:]:\n        if interval[0] >= end:\n            count += 1\n            end = interval[1]\n    return count",
    "tests": [
        "assert max_non_overlapping_intervals([(1,3), (5,8), (4,10)]) == 2",
        "assert max_non_overlapping_intervals([]) == 0",
        "assert max_non_overlapping_intervals([(1,2),(2,3),(3,4)]) == 1",
        "assert max_non_overlapping_intervals([(1,3), (2,6), (8,10), (15,18)]) == 3"
    ],
    "difficulty": "super hard",
    "model": "llama3:latest",
    "style": "TopCoder"
}