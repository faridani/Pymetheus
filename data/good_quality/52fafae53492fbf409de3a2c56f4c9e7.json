{
    "title": "Medium: Maximum Sum of Subarray",
    "description": "Given a list of integers, find the maximum sum of any subarray within that array. A subarray is any contiguous part of the array.\n\n#### Function Signature\n```python\ndef max_sum_subarray(arr: list[int)) -> int:\n```\n\n#### Input\n- `arr` (list[int]): A list of integers.\n\n#### Output\n- Returns the maximum sum of any subarray within the input array.",
    "code": "",
    "\ndef max_sum_subarray(arr: list[int)) -> int:\n    if not arr:\n        return 0\n    \n    max_sum = float('-inf')\n    current_sum = 0\n    \n    for num in arr:\n        current_sum = max(num, current_sum + num)\n        max_sum = max(max_sum, current_sum)\n    \n    return max_sum": "",
    "tests": [
        "assert max_sum_subarray([1, -3, 2, 3, -1]) == 4",
        "assert max_sum_subarray([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6",
        "assert max_sum_subarray([]) == 0"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "Competitive Programming"
}