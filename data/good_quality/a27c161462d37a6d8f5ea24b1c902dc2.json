{
    "title": "Easy: Check if Two Strings Are Anagrams",
    "description": "An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Write a function `are_anagrams` that takes two strings as input and returns `True` if they are anagrams of each other, and `False` otherwise.\n\n#### Function Signature\n```python\ndef are_anagrams(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1` (str): The first string to check for anagram.\n- `s2` (str): The second string to check for anagram.\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    return sorted(s1.lower()) == sorted(s2.lower())",
    "tests": [
        "assert are_anagrams('listen', 'silent') == True",
        "assert are_anagrams('hello', 'olleh') == True",
        "assert are_anagrams('abc', 'cab') == True",
        "assert are_anagrams('hello', 'goodbye') == False"
    ],
    "difficulty": "easy",
    "model": "llama3:latest",
    "style": "Interview Query"
}