{
    "title": "Hard: Maximum Sum of Divisors",
    "description": "Given a positive integer `n`, find the maximum sum of divisors for all integers from 1 to `n`. A divisor is an integer that can divide another integer exactly without leaving a remainder.\n\n#### Function Signature\n```python\ndef max_sum_of_divisors(n: int) -> int:\n```\n\n#### Input\n- `n` (int): A positive integer.\n\n#### Output\n- Returns the maximum sum of divisors for all integers from 1 to `n`.",
    "code": "import math\n\ndef max_sum_of_divisors(n: int) -> int:\n    def sum_of_divisors(i: int) -> int:\n        return sum(min(i, j) for j in range(2, int(math.sqrt(i)) + 1) if i % j == 0)\n\n    return max(sum_of_divisors(i) for i in range(1, n + 1))",
    "tests": [
        "assert max_sum_of_divisors(10) == 48",
        "assert max_sum_of_divisors(100) == 6482",
        "assert max_sum_of_divisors(1000) == 1231645"
    ],
    "difficulty": "super hard",
    "model": "llama3:latest",
    "style": "LeetCode"
}