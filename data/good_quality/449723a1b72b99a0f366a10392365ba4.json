{
    "title": "Maximum Sum Subarray (Medium)",
    "description": "Given an integer array `nums`, find the maximum sum of a subarray within it. A subarray is a contiguous sequence of elements within the array.\n\n#### Function Signature\n```python\ndef max_sum_subarray(nums: list[int]) -> int:\n```\n\n#### Input\n- `nums` (list[int]): A list of integers representing the input array.\n\n#### Output\n- Returns the maximum sum of a subarray within the input array.",
    "code": "",
    "\ndef max_sum_subarray(nums: list[int]) -> int:\n    if not nums:\n        return 0\n\n    max_sum = float('-inf')\n    current_sum = 0\n\n    for num in nums:\n        current_sum = max(num, current_sum + num)\n        max_sum = max(max_sum, current_sum)\n\n    return max_sum": "",
    "tests": [
        "assert max_sum_subarray([1]) == 1",
        "assert max_sum_subarray([-2,1,-3,4,-1,2,1,-5,4]) == 6",
        "assert max_sum_subarray([]) == 0",
        "assert max_sum_subarray([1, -2, 3, 10, -4, 7, 2, -5]) == 12"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "Interview Query"
}