{
    "title": "Easy: Fizz Buzz",
    "description": "Write a function `fizz_buzz` that takes an integer `n` as input and returns a list of strings representing the numbers from 1 to `n`, with special cases:\n\n* If the number is divisible by 3, append `\"Fizz\"` to the string.\n* If the number is divisible by 5, append `\"Buzz\"` to the string.\n* If the number is both divisible by 3 and 5, append `\"FizzBuzz\"` to the string.\n\n#### Function Signature\n```python\ndef fizz_buzz(n: int) -> list:\n```\n\n#### Input\n- `n` (int): An integer representing the upper limit of the sequence.\n\n#### Output\n- A list of strings, where each string represents a number from 1 to `n`, with special cases as described above.",
    "code": "def fizz_buzz(n: int) -> list:\n    result = []\n    for i in range(1, n+1):\n        if i % 3 == 0 and i % 5 == 0:\n            result.append('FizzBuzz')\n        elif i % 3 == 0:\n            result.append('Fizz')\n        elif i % 5 == 0:\n            result.append('Buzz')\n        else:\n            result.append(str(i))\n    return result",
    "tests": [
        "assert fizz_buzz(15) == ['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', '7', '8', 'Fizz', 'Buzz', '11', 'Fizz', '13', '14', 'FizzBuzz']",
        "assert fizz_buzz(3) == ['1', '2', 'Fizz']"
    ],
    "difficulty": "easy",
    "model": "llama3:latest",
    "style": "Interview Query"
}