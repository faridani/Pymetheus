{
    "title": "Hard: Shortest Path in a Weighted Directed Acyclic Graph",
    "description": "Given a weighted directed acyclic graph (DAG) with N vertices and M edges, find the shortest path from vertex S to vertex T. The weights of the edges are integers. Write a function `shortest_path` that calculates the shortest path using Bellman-Ford's algorithm.\n\n#### Function Signature\n```python\ndef shortest_path(N: int, M: int, graph: List[Tuple[int, int, int]], S: int, T: int) -> int:\n```\n\n#### Input\n- `N` (int): Number of vertices in the graph.\n- `M` (int): Number of edges in the graph.\n- `graph` (List[Tuple[int, int, int]]): List of edges with their weights. Each edge is represented as a tuple (u, v, w), where u and v are the vertices connected by the edge and w is the weight of the edge.\n- `S` (int): Starting vertex.\n- `T` (int): Ending vertex.\n\n#### Output\n- Returns the shortest path from vertex S to vertex T as an integer. If no path exists, return -1.",
    "code": "",
    "from typing import List, Tuple\n\ndef shortest_path(N: int, M: int, graph: List[Tuple[int, int, int]], S: int, T: int) -> int:\n    # Initialize distances array with infinite values except for the starting vertex\n    dist = [float('inf')] * N\n    dist[S] = 0\n\n    # Relax edges V-1 times\n    for _ in range(N - 1):\n        for u, v, w in graph:\n            if dist[u] + w < dist[v]:\n                dist[v] = dist[u] + w\n\n    # Check for negative weight cycles\n    for u, v, w in graph:\n        if dist[u] + w < dist[v]:\n            return -1\n\n    return dist[T] if dist[T] != float('inf') else -1": "",
    "tests": [
        "assert shortest_path(5, 6, [(0, 1, 3), (0, 2, 2), (1, 4, 3), (2, 1, 1), (2, 3, -4), (3, 4, 7)], 0, 4) == 4",
        "assert shortest_path(5, 6, [(0, 1, 3), (0, 2, 2), (1, 4, 3), (2, 1, -5), (2, 3, -4), (3, 4, 7)], 0, 4) == -1",
        "assert shortest_path(3, 2, [(0, 1, 1), (1, 2, 1)], 0, 2) == 2"
    ],
    "difficulty": "insanely difficult",
    "model": "codestral:22b",
    "style": "Facebook Hacker Cup"
}