{
    "title": "Medium: Tower of Hanoi",
    "description": "The classic Tower of Hanoi problem. We have three rods and n disks. The objective is to move the entire stack to another rod, obeying the following simple rules:\n\n1. Only one disk can be moved at a time.\n2. Each move consists of taking the uppermost disk from one of the stacks and placing it on top of another stack or on an empty rod.\n\nWrite a function `hanoi` that calculates the minimum number of moves required to solve this puzzle.",
    "code": "",
    "\nimport math\n\ndef hanoi(n: int) -> int:\n    return 2**n - 1": "",
    "tests": [
        "assert hanoi(1) == 1",
        "assert hanoi(2) == 3",
        "assert hanoi(3) == 7",
        "assert hanoi(4) == 15"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "ICPC"
}