{
    "title": "Divisor Sum",
    "description": "Given a natural number n, find the sum of all divisors (excluding 1 and itself) for all natural numbers up to n. Write a function `divisor_sum` that calculates this sum.\n\n#### Function Signature\n```python\ndef divisor_sum(n: int) -> list:\n```\n\n#### Input\n- `n` (int): A natural number.\n\n#### Output\n- Returns a list of sums of divisors for all natural numbers up to `n`.",
    "code": "import math\n\ndef divisor_sum(n: int) -> list:\n    result = []\n    for i in range(2, n):\n        divisor_sum_i = sum(j for j in range(1, math.isqrt(i)) if i % j == 0)\n        result.append(divisor_sum_i)\n    return result",
    "tests": [
        "assert len(divisor_sum(10)) == 8",
        "assert all(x >= 0 for x in divisor_sum(10))",
        "assert any(x > 0 for x in divisor_sum(10))",
        "assert sum(divisor_sum(10000)) > 500000"
    ],
    "difficulty": "insanely difficult",
    "model": "llama3:latest",
    "style": "Project Euler"
}