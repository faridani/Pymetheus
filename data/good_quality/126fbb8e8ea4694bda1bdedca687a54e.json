{
    "title": "Maximum Increasing Subsequence",
    "description": "Write a function `max_increasing_subsequence` that takes a list of integers as input and returns the maximum length of an increasing subsequence within the given list.\n\n#### Function Signature\n```python\ndef max_increasing_subsequence(nums: List[int]) -> int:\n```\n\n#### Input\n- `nums` (List[int]): A list of integers where each integer is in the range [0, 10^6].\n\n#### Output\n- Returns the maximum length of an increasing subsequence within the given list.",
    "code": "def max_increasing_subsequence(nums: List[int]) -> int:\n    n = len(nums)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i):\n            if nums[i] > nums[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return max(dp)",
    "tests": [
        "assert max_increasing_subsequence([1,2,3,4]) == 4",
        "assert max_increasing_subsequence([10,9,8,7,6,5,4,3,2,1]) == 1",
        "assert max_increasing_subsequence([1,3,5,4,3,2,3]) == 4",
        "assert max_increasing_subsequence([2,2,2,2]) == 1"
    ],
    "difficulty": "super hard",
    "model": "llama3:latest",
    "style": "Codewars"
}