{
    "title": "Easy: Number of Divisors",
    "description": "A number has many interesting properties and it is used extensively in various areas of computer science.\nWrite a function `num_of_divisors` that calculates the number of divisors for a given integer `n`. The function should return the total count of divisors, including 1 and the number itself. For example, for the number 12, there are four divisors: 1, 2, 3, and 12.\n\n#### Function Signature\n```python\ndef num_of_divisors(n: int) -> int:\n```\n\n#### Input\n- `n` (int): A positive integer.\n\n#### Output\n- Returns the total count of divisors for the input number, including 1 and the number itself.",
    "code": "def num_of_divisors(n: int) -> int:\n    count = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            count += 1\n    return count",
    "tests": [
        "assert num_of_divisors(12) == 6",
        "assert num_of_divisors(24) == 8",
        "assert num_of_divisors(36) == 9"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "AtCoder"
}