{
    "title": "Divisor Sum",
    "description": "Write a function `divisor_sum` that takes an integer as input and returns the sum of all its proper divisors. A proper divisor is a divisor that is not equal to the number itself.\n\n#### Function Signature\n```python\ndef divisor_sum(n: int) -> int:\n```\n\n#### Input\n- `n` (int): An integer for which you need to calculate the sum of its proper divisors.\n\n#### Output\n- Returns the sum of all proper divisors of the input number.",
    "code": "",
    "\ndef divisor_sum(n: int) -> int:\n    def find_divisors(i):\n        factors = []\n        for j in range(1, i + 1):\n            if i % j == 0 and j != i:\n                factors.append(j)\n        return sum(factors)\n\n    return find_divisors(n)\n    ": "",
    "tests": [
        "assert divisor_sum(28) == 30",
        "assert divisor_sum(36) == 48",
        "assert divisor_sum(42) == 60"
    ],
    "difficulty": "super hard",
    "model": "llama3:latest",
    "style": "AtCoder"
}