{
    "title": "Maximum Subarray Sum",
    "description": "Given a list of integers, find the maximum sum of a subarray (a contiguous segment) within that array.\n\n#### Function Signature\n```\ndef max_subarray_sum(arr: list[int)) -> int:\n```\n\n#### Input\n- `arr` (list[int]): A list of integers.\n\n#### Output\n- Returns the maximum sum of a subarray within the input array.",
    "code": "",
    "\ndef max_subarray_sum(arr: list[int)) -> int:\n    n = len(arr)\n    max_sum = float('-inf')\n    current_sum = 0\n    \n    for i in range(n):\n        current_sum += arr[i]\n        \n        if current_sum > max_sum:\n            max_sum = current_sum\n        \n        if current_sum < 0:\n            current_sum = 0\n    \n    return max_sum": "",
    "tests": [
        "assert max_subarray_sum([-2,1,-3,4,-1,2,1,-5,4]) == 6",
        "assert max_subarray_sum([1]) == 1",
        "assert max_subarray_sum([-1,-2,-3,-4,-5]) == -1"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "ACM-ICPC"
}