{
    "title": "[Hard] Counting Substrings with K Distinct Characters",
    "description": "",
    "\n        Given a string `s` and an integer `k`, return the number of substrings of `s` that have exactly `k` distinct characters. A substring is defined as a contiguous sequence of characters within a string.\n\n        #### Function Signature\n        ```python\n        def count_substrings(s: str, k: int) -> int:\n        ```\n\n        #### Input\n        - `s` (str): A string that may contain letters and numbers.\n        - `k` (int): An integer representing the number of distinct characters in each substring.\n\n        #### Output\n        - Returns an integer representing the count of substrings with exactly `k` distinct characters.\n    ": "",
    "code": "",
    "\n        from collections import Counter\n\n        def count_substrings(s: str, k: int) -> int:\n            count = 0\n            for i in range(len(s)):\n                counter = Counter()\n                for j in range(i, len(s)):\n                    counter[s[j]] += 1\n                    if len(counter) == k:\n                        count += 1\n                    elif len(counter) > k:\n                        break\n            return count\n    ": "",
    "tests": [
        "assert count_substrings(\"abcabc\", 2) == 3",
        "assert count_substrings(\"abacab\", 2) == 7",
        "assert count_substrings(\"aabbccdd\", 1) == 8"
    ],
    "difficulty": "insanely difficult",
    "model": "codestral:22b",
    "style": "Daily Coding Problem"
}