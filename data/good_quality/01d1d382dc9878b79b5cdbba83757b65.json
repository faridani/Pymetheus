{
    "title": "Hard: Divisible Sum Pairs",
    "description": "The problem is easy to understand, but requires a good understanding of number theory and programming. A prime is a natural number greater than 1 that has no positive divisors other than 1 and itself. Write a function `divisible_sum_pairs` that calculates the number of pairs in a given list of integers where the sum of each pair is divisible by a given prime number.\n\n#### Function Signature\n```python\ndef divisible_sum_pairs(numbers: list, prime: int) -> int:\n```\n\n#### Input\n- `numbers` (list): A list of integers.\n- `prime` (int): A prime number.\n\n#### Output\n- Returns the number of pairs in the input list where the sum of each pair is divisible by the given prime number.",
    "code": "import math\n\ndef divisible_sum_pairs(numbers: list, prime: int) -> int:\n    count = 0\n    for i in range(len(numbers)):\n        for j in range(i + 1, len(numbers)):\n            if (numbers[i] + numbers[j]) % prime == 0:\n                count += 1\n    return count",
    "tests": [
        "assert divisible_sum_pairs([5,10,15], 3) == 2",
        "assert divisible_sum_pairs([1,2,4,8,16], 7) == 0",
        "assert divisible_sum_pairs([1,3,6,9,12], 5) == 3",
        "assert divisible_sum_pairs([2,3,4,5,6], 3) == 3"
    ],
    "difficulty": "hard",
    "model": "llama3:latest",
    "style": "Project Euler"
}