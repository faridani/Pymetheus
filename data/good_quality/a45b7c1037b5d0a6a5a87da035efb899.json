{
    "title": "Easy: Validating Sudoku Grids",
    "description": "Write a function `is_valid_sudoku` that checks if a given 9x9 Sudoku grid is valid. A Sudoku grid is considered valid if each row, column, and 3x3 sub-grid contains the numbers 1-9 without repetition.\n\n#### Function Signature\n```python\ndef is_valid_sudoku(grid: list[list[int]]) -> bool:\n```\n\n#### Input\n- `grid` (list[list[int]]): A 9x9 Sudoku grid, where each cell contains a number from 0 to 9. Note that 0 represents an empty cell.\n\n#### Output\n- Returns `True` if the input Sudoku grid is valid, `False` otherwise.",
    "code": "\ndef is_valid_sudoku(grid: list[list[int]]) -> bool:\n    # Check rows\n    for row in grid:\n        seen = set()\n        for num in row:\n            if num == 0 or num not in seen:\n                seen.add(num)\n            else:\n                return False\n\n    # Check columns\n    for col in zip(*grid):\n        seen = set()\n        for num in col:\n            if num == 0 or num not in seen:\n                seen.add(num)\n            else:\n                return False\n\n    # Check sub-grids\n    for i in range(0, 9, 3):\n        for j in range(0, 9, 3):\n            seen = set()\n            for k in range(3):\n                for num in grid[i+k][j:j+3]:\n                    if num == 0 or num not in seen:\n                        seen.add(num)\n                    else:\n                        return False\n\n    return True",
    "tests": [
        "assert is_valid_sudoku([[5,3,4,6,7,8,9,1,2], [6,7,8,9,1,2,3,4,5], [1,9,8,3,4,2,5,6,7], [8,5,9,7,6,3,4,2,1], [4,2,6,8,5,1,7,3,9], [7,1,3,9,2,8,4,5,6], [9,6,1,5,3,4,2,8,7], [5,7,2,4,6,9,1,3,8], [2,1,8,3,9,5,7,4,6]]) == True",
        "assert is_valid_sudoku([[1,2,3],[4,5,6],[7,8,0]]) == False"
    ],
    "difficulty": "easy",
    "model": "llama3:latest",
    "style": "LeetCode"
}