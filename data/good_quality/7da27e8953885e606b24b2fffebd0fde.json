{
    "title": "Largest Divisible Subset",
    "description": "Given an array of distinct integers, find the largest subset where each pair of adjacent elements are divisible by a common integer greater than 1. If no such subset exists, return an empty list.\n\n#### Function Signature\n```python\ndef largest_divisible_subset(arr: List[int]) -> List[int]:\n```\n\n#### Input\n- `arr` (List[int]): An array of distinct integers.\n\n#### Output\n- Returns the largest subset where each pair of adjacent elements are divisible by a common integer greater than 1. If no such subset exists, return an empty list.",
    "code": "def largest_divisible_subset(arr: List[int]) -> List[int]:\n    arr.sort()\n    dp = [[num] for num in arr]\n    for i in range(len(arr)):\n        for j in range(i):\n            if arr[i] % arr[j] == 0 and len(dp[i]) < len(dp[j]) + 1:\n                dp[i] = dp[j] + [arr[i]]\n    return max(dp, key=len)",
    "tests": [
        "assert largest_divisible_subset([1,2,3,4,5,6]) == [1,2,3]",
        "assert largest_divisible_subset([1,3,6,8,10,12]) == [1,2,3,4,6,12]",
        "assert largest_divisible_subset([1,7,11,13,17]) == []",
        "assert largest_divisible_subset([1,5,20]) == [1,5]"
    ],
    "difficulty": "hard",
    "model": "llama3:latest",
    "style": "CodeSignal"
}