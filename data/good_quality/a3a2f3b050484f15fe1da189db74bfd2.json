{
    "title": "Number Chain",
    "description": "A number chain is a sequence of numbers such that each number is one more or one less than the previous number. For example, 1, 2, 3, and 4 form a number chain because each number is either one more or one less than the previous number.\n\n#### Function Signature\n```python\ndef get_longest_chain(n: int) -> list:\n```\n\n#### Input\n- `n` (int): The maximum value in the number chain.\n\n#### Output\n- Returns a list of integers representing the longest possible number chain that starts from 1 and does not exceed the given maximum value.",
    "code": "def get_longest_chain(n: int) -> list:\n    if n < 2:\n        return [1]\n    chain = [1]\n    prev_diff = 1\n    for i in range(2, n+1):\n        diff = abs(i - chain[-1])\n        if diff <= prev_diff or (diff == prev_diff + 1 and len(chain) < 3):\n            chain.append(i)\n            prev_diff = diff\n        else:\n            break\n    return chain",
    "tests": [
        "assert get_longest_chain(10) == [1, 2, 3, 4, 5]",
        "assert get_longest_chain(15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]",
        "assert get_longest_chain(20) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]",
        "assert get_longest_chain(1) == [1]"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "Google Code Jam"
}