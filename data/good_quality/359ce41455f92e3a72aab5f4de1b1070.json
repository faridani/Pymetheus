{
    "title": "'Anagram Detector (Hard)'",
    "description": "Given two strings, determine if they are anagrams of each other. An anagram is a word or phrase that consists of the same letters as another word or phrase, but in a different order.\n\n#### Function Signature\n```python\ndef are_anagrams(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1`, `s2` (str): Two strings that may contain letters (case insensitive).\n\n#### Output\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    # Remove non-alphabetic characters from both strings\n    s1 = ''.join(char for char in s1 if char.isalpha())\n    s2 = ''.join(char for char in s2 if char.isalpha())\n    # Sort the characters of each string and compare them\n    return sorted(s1) == sorted(s2)",
    "tests": [
        "assert are_anagrams('listen', 'silent') == True",
        "assert are_anagrams('apple', 'apples') == False",
        "assert are_anagrams('A man, a plan, a canal, Panama', 'amanaplanacanalpanama') == True"
    ],
    "difficulty": "super hard",
    "model": "mistral:latest",
    "style": "Google Code Jam"
}