{
    "title": "Maximum Subarray Sum",
    "description": "Given a list of integers, find the maximum sum that can be obtained by adding up all elements within a contiguous subarray. The function should return this maximum sum.\n\n#### Function Signature\n```python\ndef max_subarray_sum(arr: list[int]) -> int:\n```\n\n#### Input\n- `arr` (list[int]): A list of integers.\n\n#### Output\n- Returns the maximum sum that can be obtained by adding up all elements within a contiguous subarray.",
    "code": "def max_subarray_sum(arr: list[int]) -> int:\n    if not arr:\n        return 0\n    max_current = max_global = arr[0]\n    for num in arr[1:]:\n        max_current = max(num, max_current + num)\n        max_global = max(max_global, max_current)\n    return max_global",
    "tests": [
        "assert max_subarray_sum([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6",
        "assert max_subarray_sum([1]) == 1",
        "assert max_subarray_sum([]) == 0",
        "assert max_subarray_sum([-2, 1, -3, 4, 1, 2, 1, -5, 4]) == 6"
    ],
    "difficulty": "super hard",
    "model": "llama3:latest",
    "style": "Codecademy"
}