{
    "title": "Maximum Sum of Distinct Subarrays",
    "description": "A subarray of an array is a contiguous portion of the array. Write a function `max_sum_distinct_subarrays` that takes a list of integers as input and returns the maximum sum of distinct subarrays.\n\n#### Function Signature\n```python\ndef max_sum_distinct_subarrays(arr: List[int]) -> int:\n```\n\n#### Input\n- `arr` (List[int]): A list of integers.\n\n#### Output\n- Returns the maximum sum of distinct subarrays.",
    "code": "",
    "\nimport itertools\ndef max_sum_distinct_subarrays(arr):\n    n = len(arr)\n    max_sum = float('-inf')\n    \n    for i in range(n):\n        for j in range(i+1, n+1):\n            subarray = arr[i:j]\n            if len(set(subarray)) == len(subarray):  # check if the subarray is distinct\n                max_sum = max(max_sum, sum(subarray))\n                \n    return max_sum": "",
    "tests": [
        "assert max_sum_distinct_subarrays([1, 2, 3, 4]) == 10",
        "assert max_sum_distinct_subarrays([-1, -2, -3, -4]) == -6",
        "assert max_sum_distinct_subarrays([1, 2, 3, 0]) == 5",
        "assert max_sum_distinct_subarrays([1, 2, 3, 4, 5]) == 15"
    ],
    "difficulty": "hard",
    "model": "llama3:latest",
    "style": "LeetCode"
}