{
    "title": "Maximum Sum of Subarray",
    "description": "Given a list of integers, write a function that finds the maximum sum of a contiguous subarray within the given array. If there are multiple such subarrays with the same maximum sum, return any one.\n\n#### Function Signature\n```python\ndef max_sum_subarray(arr: list[int)) -> int:\n```\n\n#### Input\n- `arr` (list[int]): A list of integers.\n\n#### Output\n- Returns the maximum sum of a contiguous subarray within the given array.",
    "code": "",
    "\ndef max_sum_subarray(arr: list[int)) -> int:\n    if not arr:\n        return 0\n\n    current_max_sum = max_global_sum = arr[0]\n\n    for num in arr[1:]:\n        current_max_sum = max(num, current_max_sum + num)\n        max_global_sum = max(max_global_sum, current_max_sum)\n\n    return max_global_sum": "",
    "tests": [
        "assert max_sum_subarray([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6",
        "assert max_sum_subarray([1, 2, 3, 4, 5]) == 15",
        "assert max_sum_subarray([]) == 0"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "Codecademy"
}