{
    "title": "Maximum Sum of Subarray",
    "description": "Given a list of integers, find the maximum sum of a subarray within the list. A subarray is a contiguous part of the array.\n\n#### Function Signature\n```python\ndef max_sum_subarray(arr: list[int)) -> int:\n```\n\n#### Input\n- `arr` (list[int]): A list of integers.\n\n#### Output\n- Returns the maximum sum of a subarray within the input list.",
    "code": "\nimport itertools\n\ndef max_sum_subarray(arr: list[int]) -> int:\n    max_sum = float('-inf')\n    for window_size in range(1, len(arr) + 1):\n        for window_start in range(len(arr) - window_size + 1):\n            window = arr[window_start:window_start + window_size]\n            current_sum = sum(window)\n            if current_sum > max_sum:\n                max_sum = current_sum\n    return max_sum",
    "tests": [
        "assert max_sum_subarray([-2, 3, -4]) == 5",
        "assert max_sum_subarray([1, 2, 3, 4]) == 10",
        "assert max_sum_subarray([0, -1, 0, 9, 8, 7, 6, 5, 4, 3, 2, 1]) == 25"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "TopCoder"
}