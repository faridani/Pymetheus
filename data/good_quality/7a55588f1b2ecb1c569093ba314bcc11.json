{
    "title": "Maximum Sum of Rectangle",
    "description": "Given a 2D array `grid` of integers, find the maximum sum of a rectangle that can be formed by selecting any number of rows and columns. The grid contains only non-negative numbers.\n\n#### Function Signature\n```python\ndef max_sum_rectangle(grid: list[list[int]]) -> int:\n```\n\n#### Input\n- `grid` (list[list[int]]): A 2D array of integers where each element is a non-negative number.\n\n#### Output\n- Returns the maximum sum of a rectangle that can be formed by selecting any number of rows and columns.",
    "code": "from typing import List\n\ndef max_sum_rectangle(grid: List[List[int]]) -> int:\n    if not grid or not grid[0]:\n        return 0\n    m, n = len(grid), len(grid[0])\n    prefix_sum = [[0] * (n + 1) for _ in range(m + 1)]\n    max_sum = 0\n    for i in range(1, m + 1):\n        for j in range(1, n + 1):\n            prefix_sum[i][j] = grid[i - 1][j - 1] + prefix_sum[i - 1][j] + prefix_sum[i][j - 1] - prefix_sum[i - 1][j - 1]\n    for i in range(m, -1, -1):\n        for j in range(n, -1, -1):\n            for k in range(i):\n                for col_end in range(j, -1, -1):\n                    max_sum = max(max_sum, prefix_sum[i][j] - prefix_sum[k][j] - prefix_sum[i][col_end] + prefix_sum[k][col_end])\n    return max_sum",
    "tests": [
        "assert max_sum_rectangle([[1, 2], [3, 4]]) == 10",
        "assert max_sum_rectangle([[0, 0, 0], [0, 2, 3], [4, 5, 6]]) == 15",
        "assert max_sum_rectangle([[1, 0, 0], [2, 3, 0], [4, 5, 0]]) == 9"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "TopCoder"
}