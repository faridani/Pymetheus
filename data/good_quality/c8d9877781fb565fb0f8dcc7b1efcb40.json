{
    "title": "Counting Islands",
    "description": "Given a 2D grid of size n x m, where `0`s represent water and `1`s represent land, write a function that counts the number of islands. An island is any connected group of land cells.\n\n#### Function Signature\n```python\ndef count_islands(grid: list[list[int]]) -> int:\n```\n\n#### Input\n- `grid` (list[list[int]]): A 2D grid of size n x m, where each cell can be either water (`0`) or land (`1`).\n\n#### Output\n- Returns the number of islands in the given grid.",
    "code": "",
    "\ndef count_islands(grid: list[list[int]]) -> int:\n    if not grid or not grid[0]:\n        return 0\n\n    n, m = len(grid), len(grid[0])\n    visited = [[False] * m for _ in range(n)]\n\n    def dfs(r, c):\n        if r < 0 or r >= n or c < 0 or c >= m or visited[r][c] or grid[r][c] == 0:\n            return\n        visited[r][c] = True\n\n        directions = [(1, 0), (-1, 0), (0, 1), (0, -1)]\n        for dr, dc in directions:\n            nr, nc = r + dr, c + dc\n            dfs(nr, nc)\n\n    count = 0\n    for i in range(n):\n        for j in range(m):\n            if grid[i][j] == 1 and not visited[i][j]:\n                dfs(i, j)\n                count += 1\n\n    return count": "",
    "tests": [
        "assert count_islands([[0,0,1,0,0],[1,0,0,0,0],[0,1,1,1,0],[0,0,0,1,0]]) == 1",
        "assert count_islands([[0,0,0,1,0],[0,0,0,1,0],[0,0,0,1,0]]) == 4",
        "assert count_islands([[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]) == 0"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "Interview Query"
}