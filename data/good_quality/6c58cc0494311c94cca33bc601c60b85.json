{
    "title": "Maximum Rectangular Submatrix",
    "description": "Given a binary matrix where each row and column has at most one 1, find the maximum rectangular submatrix that contains only 0s. The size of the submatrix should be as large as possible.\n\n#### Function Signature\n```python\ndef max_rect_submatrix(matrix: list[list[int]]) -> tuple[int, int]:\n```\n\n#### Input\n- `matrix` (list[list[int]]): A binary matrix where each row and column has at most one 1. The size of the matrix is M x N.\n\n#### Output\n- Returns a tuple `(width, height)` representing the maximum rectangular submatrix that contains only 0s.\n",
    "code": "\nimport copy\n\ndef max_rect_submatrix(matrix: list[list[int]]) -> tuple[int, int]:\n    rows = len(matrix)\n    cols = len(matrix[0])\n    \n    # Initialize a 2D array to store the maximum width of rectangular submatrices ending at each cell\n    widths = [[0] * (cols + 1) for _ in range(rows + 1)]\n    \n    # Initialize a variable to store the maximum height\n    max_height = 0\n    \n    # Iterate over all cells in the matrix\n    for r in range(1, rows + 1):\n        for c in range(1, cols + 1):\n            if matrix[r - 1][c - 1] == 0:\n                # If the cell is a 0, update the width of rectangular submatrices ending at this cell\n                widths[r][c] = min(widths[r - 1][c], widths[r][c - 1])\n            else:\n                # If the cell is a 1, reset the width to 0 and update the height if necessary\n                widths[r][c] = 0\n                max_height = max(max_height, r)\n    \n    # Find the maximum rectangular submatrix that contains only 0s\n    max_width = max(w for w in widths[1:] if w > 0)\n    return max_width, max_height\n\n",
    "tests": [
        "assert max_rect_submatrix([[0, 0], [0, 1]]) == (2, 1)",
        "assert max_rect_submatrix([[0, 0, 0], [0, 1, 0], [0, 0, 0]]) == (3, 2)",
        "assert max_rect_submatrix([[0, 1], [1, 0]]) == (1, 1)"
    ],
    "difficulty": "insanely difficult",
    "model": "llama3:latest",
    "style": "SPOJ"
}