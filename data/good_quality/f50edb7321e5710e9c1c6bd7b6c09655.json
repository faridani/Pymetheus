{
    "title": "Reverse String with K-Length Substrings (Medium)",
    "description": "Given a string s and an integer k, write a function that returns a new string where each substring of length k of the original string is reversed. The function should also handle cases where the length of the string is not divisible by k.\n\n#### Function Signature\n```python\ndef reverse_substrings(s: str, k: int) -> str:\n```\n\n#### Input\n- `s` (str): A string containing letters and possibly other characters.\n- `k` (int): An integer indicating the length of substrings to be reversed.\n\n#### Output\n- Returns a new string where each substring of length k of the original string is reversed.\n",
    "code": "def reverse_substrings(s: str, k: int) -> str:\n    # Initialize an empty result string\n    result = ''\n    \n    # Iterate over the string in steps of k\n    for i in range(0, len(s), k):\n        substring = s[i:i + k]\n        reversed_substring = substring[::-1]\n        result += reversed_substring\n    \n    return result\n",
    "tests": [
        "assert reverse_substrings('abcde', 2) == 'decb'\n",
        "assert reverse_substrings('hello', 3) == 'olleh'\n",
        "assert reverse_substrings('racecar', 4) == 'racecar'\n",
        "assert reverse_substrings('This is a test', 4) == 'tnis si tseT'\n"
    ],
    "difficulty": "hard",
    "model": "aya:35b",
    "style": "Codeforces"
}