{
    "title": "Euler's Totient Function (Hard)",
    "description": "Euler's totient function, denoted by \u03c6(n), counts the positive integers up to a given number n that are relatively prime to n. In other words, it counts the numbers up to n that are coprime with n.\n\nWrite a function `euler_totient` that calculates Euler's totient function for a given integer `n`.\n\n#### Function Signature\n```python\ndef euler_totient(n: int) -> int:\n```\n\n#### Input\n- `n` (int): A positive integer.\n\n#### Output\n- Returns the value of Euler's totient function \u03c6(n).",
    "code": "import math\n\ndef euler_totient(n: int) -> int:\n    # Initialize the result\n    result = n\n    \n    # Iterate from 2 to sqrt(n)\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if i * i <= n and n % i == 0:\n            # While i is a factor of n\n            while n % i == 0:\n                # Divide n by i\n                n //= i\n            # Update the result\n            result -= result // i\n            \n    # If n is greater than 1, it means n is a prime number\n    if n > 1:\n        result -= 1\n    \n    return result",
    "tests": [
        "assert euler_totient(1) == 1",
        "assert euler_totient(2) == 1",
        "assert euler_totient(3) == 2",
        "assert euler_totient(4) == 2",
        "assert euler_totient(5) == 4",
        "assert euler_totient(6) == 2"
    ],
    "difficulty": "insanely difficult",
    "model": "llama3:latest",
    "style": "SPOJ"
}