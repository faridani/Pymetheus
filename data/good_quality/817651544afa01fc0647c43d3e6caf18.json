{
    "title": "Easy: Counting Duplicates",
    "description": "Given a list of integers, return the number of duplicates. For example, if the input list is [1, 2, 2, 3, 4], the output should be 2 because there are two duplicate elements (the two 2's).\n\n#### Function Signature\n```python\ndef count_duplicates(lst: List[int]) -> int:\n```\n\n#### Input\n- `lst` (List[int]): A list of integers.\n\n#### Output\n- Returns the number of duplicate elements in the input list.",
    "code": "",
    "\nimport collections\n\ndef count_duplicates(lst):\n    count = collections.Counter(lst)\n    return len([k for k, v in count.items() if v > 1])": "",
    "tests": [
        "assert count_duplicates([1, 2, 2, 3, 4]) == 2",
        "assert count_duplicates([1, 1, 1, 2, 2]) == 2",
        "assert count_duplicates([]) == 0",
        "assert count_duplicates([5, 6, 7, 8]) == 0"
    ],
    "difficulty": "easy",
    "model": "llama3:latest",
    "style": "Daily Coding Problem"
}