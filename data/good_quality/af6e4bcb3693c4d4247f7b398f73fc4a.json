{
    "title": "Maximum Sum of Subarray",
    "description": "Given a list of integers `nums`, find the maximum sum of any contiguous subarray within `nums`. \n\n#### Function Signature\n```python\ndef max_sum_subarray(nums: list[int)) -> int:\n```\n\n#### Input\n- `nums` (list[int]): A list of integers.\n\n#### Output\n- Returns the maximum sum of any contiguous subarray within `nums`.",
    "code": "def max_sum_subarray(nums: list[int]) -> int:\n    if not nums:\n        return 0\n\n    max_sum = float('-inf')\n    current_sum = 0\n\n    for num in nums:\n        current_sum = max(num, current_sum + num)\n        max_sum = max(max_sum, current_sum)\n\n    return max_sum",
    "tests": [
        "assert max_sum_subarray([-2,1,-3,4,-1,2,1,-5,4]) == 6",
        "assert max_sum_subarray([1]) == 1",
        "assert max_sum_subarray([]) == 0",
        "assert max_sum_subarray([-1, -2, -3, -4]) == -1"
    ],
    "difficulty": "super hard",
    "model": "llama3:latest",
    "style": "TopCoder"
}