{
    "title": "Maximal Increasing Subsequence",
    "description": "Given an array of integers, find the length of the longest subsequence that can be obtained by increasing the elements one by one.\n\n#### Function Signature\n```python\ndef max_increasing_subsequence(arr: list[int)) -> int:\n```\n\n#### Input\n- `arr` (list[int]): A list of integers.\n\n#### Output\n- Returns the length of the longest subsequence that can be obtained by increasing the elements one by one.",
    "code": "",
    "\nimport math\n\ndef max_increasing_subsequence(arr: list[int)) -> int:\n    n = len(arr)\n    \n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i):\n            if arr[i] > arr[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n                \n    return max(dp)": "",
    "tests": [
        "assert max_increasing_subsequence([1, 2, 3, 4]) == 4",
        "assert max_increasing_subsequence([5, 6, 8, 7]) == 3",
        "assert max_increasing_subsequence([1, 3, 5, 2]) == 3",
        "assert max_increasing_subsequence([9, 2, 3, 4]) == 3"
    ],
    "difficulty": "hard",
    "model": "llama3:latest",
    "style": "CodeSignal"
}