{
    "title": "Longest Common Subsequence",
    "description": "Given two sequences, find the length of their longest common subsequence.\n\n#### Function Signature\n```python\ndef lcs_length(s1: str, s2: str) -> int:\n```\n\n#### Input\n- `s1` (str): The first sequence.\n- `s2` (str): The second sequence.\n\n#### Output\n- Returns the length of their longest common subsequence.",
    "code": "def lcs_length(s1: str, s2: str) -> int:\n    m = [[0] * (len(s2) + 1) for _ in range(len(s1) + 1)]\n    for i in range(1, len(s1) + 1):\n        for j in range(1, len(s2) + 1):\n            if s1[i - 1] == s2[j - 1]:\n                m[i][j] = m[i - 1][j - 1] + 1\n            else:\n                m[i][j] = max(m[i - 1][j], m[i][j - 1])\n    return m[-1][-1]",
    "tests": [
        "assert lcs_length('abcba', 'bfcfa') == 3",
        "assert lcs_length('1234', '5678') == 0",
        "assert lcs_length('abcd', 'cdab') == 2",
        "assert lcs_length('abcdef', 'zbcdf') == 0"
    ],
    "difficulty": "hard",
    "model": "llama3:latest",
    "style": "Daily Coding Problem"
}