{
    "title": "'Anagram Detector (Hard)'",
    "description": "An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Write a function `is_anagram` that checks if two given strings are anagrams of each other.\n\n#### Function Signature\n```python\ndef is_anagram(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1`, `s2` (str): Two strings that may contain letters (only), in any case and with spaces.\n\n#### Output\n- Returns `True` if the input strings are anagrams of each other, `False` otherwise.",
    "code": "def is_anagram(s1: str, s2: str) -> bool:\n    # Remove spaces and convert to lowercase\n    s1 = ''.join(sorted(s1.replace(' ', '').lower()))\n    s2 = ''.join(sorted(s2.replace(' ', '').lower()))\n    # Check if both strings have the same length\n    return len(s1) == len(s2) and s1 == s2",
    "tests": [
        "assert is_anagram(\"listen\", \"silent\") == True",
        "assert is_anagram(\"hello\", \"olleh\") == True",
        "assert is_anagram(\"world\", \"drowl\") == False",
        "assert is_anagram(\"Apple\", \"Eelppa\") == False"
    ],
    "difficulty": "super hard",
    "model": "mistral:latest",
    "style": "ACM-ICPC"
}