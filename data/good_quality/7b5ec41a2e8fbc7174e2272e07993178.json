{
    "title": "Medium: Check for Consecutive Repeats",
    "description": "Given a list of integers, write a function that returns the number of sequences where each element appears consecutively at least once. For example, given the list [1, 2, 3, 2, 1], there are three such sequences: [1], [2, 2], and [1, 2, 1]. \n\n#### Function Signature\n```python\ndef count_sequences(lst: list) -> int:\n```\n\n#### Input\n- `lst` (list): A list of integers.\n\n#### Output\n- Returns the number of sequences where each element appears consecutively at least once.",
    "code": "def count_sequences(lst: list) -> int:\n    count = 0\n    current_sequence = [lst[0]]\n    for i in range(1, len(lst)):\n        if lst[i] == current_sequence[-1]:\n            current_sequence.append(lst[i])\n        else:\n            count += 1\n            current_sequence = [lst[i]]\n    if len(current_sequence) > 0:\n        count += 1\n    return count",
    "tests": [
        "assert count_sequences([1, 2, 3, 2, 1]) == 3",
        "assert count_sequences([1, 1, 1, 1]) == 4",
        "assert count_sequences([]) == 0"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "Codewars"
}