{
    "title": "Easy: Number of Islands",
    "description": "You are given a 2D binary matrix, where 0 represents water and 1 represents land. Write a function `count_islands` that counts the number of islands in the given matrix.\n\n#### Function Signature\n```python\ndef count_islands(matrix: list[list[int]]) -> int:\n```\n\n#### Input\n- `matrix` (list[list[int]]): A 2D binary matrix, where 0 represents water and 1 represents land.\n\n#### Output\n- Returns the number of islands in the given matrix.",
    "code": "",
    "\ndef count_islands(matrix: list[list[int]]) -> int:\n    if not matrix or not matrix[0]:\n        return 0\n\n    rows, cols = len(matrix), len(matrix[0])\n    visited = [[False for _ in range(cols)] for _ in range(rows)]\n\n    def dfs(r, c):\n        if r < 0 or c < 0 or r >= rows or c >= cols:\n            return\n        if matrix[r][c] == 0 or visited[r][c]:\n            return\n\n        visited[r][c] = True\n        for dr, dc in [(-1, 0), (1, 0), (0, -1), (0, 1)]:\n            dfs(r + dr, c + dc)\n\n    count = 0\n    for r in range(rows):\n        for c in range(cols):\n            if matrix[r][c] == 1 and not visited[r][c]:\n                dfs(r, c)\n                count += 1\n\n    return count": "",
    "tests": [
        "assert count_islands([[0,0,0],[1,0,0],[0,0,0]]) == 1",
        "assert count_islands([[0,0,0],[1,1,0],[0,0,0]]) == 1",
        "assert count_islands([[0,0,0],[1,1,1],[0,0,0]]) == 3",
        "assert count_islands([]) == 0"
    ],
    "difficulty": "easy",
    "model": "llama3:latest",
    "style": "AtCoder"
}