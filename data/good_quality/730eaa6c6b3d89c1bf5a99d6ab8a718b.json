{
    "title": "Number of Islands",
    "description": "Given an m x n binary grid where cells are either 0 (water) or 1 (land), count the number of islands. An island is a group of connected land cells.\n\n#### Function Signature\n```python\ndef count_islands(grid: list[list[int]]) -> int:\n```\n\n#### Input\n- `grid` (list[list[int]]): A binary grid where 0 represents water and 1 represents land.\n\n#### Output\n- Returns the number of islands in the given grid.",
    "code": "\nimport copy\n\ndef count_islands(grid: list[list[int]]) -> int:\n    if not grid:\n        return 0\n    \n    count = 0\n    for i in range(len(grid)):\n        for j in range(len(grid[0])):\n            if grid[i][j] == 1:\n                dfs(grid, i, j)\n                count += 1\n\n    def dfs(grid: list[list[int]], i: int, j: int):\n        if i < 0 or i >= len(grid) or j < 0 or j >= len(grid[0]) or grid[i][j] != 1:\n            return\n        grid[i][j] = -1\n        for dx in range(-1, 2):\n            for dy in range(-1, 2):\n                if abs(dx) == abs(dy) and (i + dx >= 0 and i + dx < len(grid) and j + dy >= 0 and j + dy < len(grid[0])):\n                    dfs(grid, i + dx, j + dy)\n                    \n    return count",
    "tests": [
        "assert count_islands([[1,1,1,1,0], [1,1,0,1,0], [1,1,0,0,0], [0,0,0,0,0]]) == 1",
        "assert count_islands([[0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0]]) == 0",
        "assert count_islands([[1,0,1], [0,0,0], [1,1,1]]) == 2"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "AtCoder"
}