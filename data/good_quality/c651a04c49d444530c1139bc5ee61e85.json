{
    "title": "'Palindromic Substrings in a String (Hard)'",
    "description": "Given a string, find all the palindromic substrings within it. A palindromic string is one that reads the same forwards and backwards.\n\n#### Function Signature\n```python\ndef find_palindromes(s: str) -> list:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns a list of palindromic substrings in the input string.",
    "code": "def find_palindromes(s: str) -> list:\n    # Initialize an empty list to store the results\n    result = []\n    # Iterate through all possible lengths of substrings\n    for length in range(1, len(s) + 1):\n        # Iterate through each position in the string\n        for start in range(len(s) - length + 1):\n            # Get the substring at the current position and check if it is a palindrome\n            substring = s[start:start+length]\n            if len(substring) > 0 and substring == substring[::-1]:\n                result.append(substring)\n    return result",
    "tests": [
        "assert find_palindromes('racecar') == ['r', 'a', 'c', 'a', 'r', 'e', 'c', 'c', 'a', 'r', 'r', 'c']",
        "assert find_palindromes('A man, a plan, a canal: Panama') == ['a', 'man', 'plan', 'canal', 'Panama']"
    ],
    "difficulty": "hard",
    "model": "mistral:latest",
    "style": "Codeforces"
}