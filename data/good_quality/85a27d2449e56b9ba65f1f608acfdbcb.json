{
    "title": "Longest Increasing Subsequence",
    "description": "Write a function `longest_increasing_subsequence` that takes as input a list of integers and returns the length of the longest increasing subsequence in the given list.\n\n#### Function Signature\n```python\ndef longest_increasing_subsequence(seq: list[int]) -> int:\n```\n\n#### Input\n- `seq` (list[int]): A list of integers.\n\n#### Output\n- Returns the length of the longest increasing subsequence in the input sequence.",
    "code": "def longest_increasing_subsequence(seq: list[int]) -> int:\n    n = len(seq)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i):\n            if seq[i] > seq[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return max(dp)",
    "tests": [
        "assert longest_increasing_subsequence([10,9,2,5,3,7,101,18]) == 4",
        "assert longest_increasing_subsequence([0,1,2,3,4,5]) == 6",
        "assert longest_increasing_subsequence([-1,-2,-3,-4,-5]) == 1"
    ],
    "difficulty": "hard",
    "model": "llama3:latest",
    "style": "Daily Coding Problem"
}