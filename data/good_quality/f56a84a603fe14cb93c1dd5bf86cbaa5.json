{
    "title": "'Check if a given list of numbers contains a perfect square within it (Easy)'",
    "description": "A perfect square is a number that can be obtained by squaring an integer. Write a function `has_perfect_square` that checks if a given list of non-negative integers contains a perfect square.\n\n#### Function Signature\n```python\ndef has_perfect_square(numbers: List[int]) -> bool:\n```\n\n#### Input\n- `numbers` (List[int]): A list of non-negative integers.\n\n#### Output\n- Returns `True` if the input list contains a perfect square, `False` otherwise.",
    "code": "def has_perfect_square(numbers: List[int]) -> bool:\n    for num in numbers:\n        sqrt = int(math.sqrt(num))\n        if sqrt**2 == num:\n            return True\n    return False",
    "tests": [
        "assert has_perfect_square([1, 4, 9, 16]) == True",
        "assert has_perfect_square([1, 3, 5]) == False",
        "assert has_perfect_square([25]) == True",
        "assert has_perfect_square([]) == False"
    ],
    "difficulty": "easy",
    "model": "mistral:latest",
    "style": "HackerRank"
}