{
    "title": "Minimum Window Substring",
    "description": "Given two strings `s1` and `s2`, write a function that returns the minimum window substring from `s1` that contains all characters of `s2`. If there are multiple such substrings, return the one with the smallest length. The characters in both strings are case-sensitive.\n\n#### Function Signature\n```python\ndef min_window_substring(s1: str, s2: str) -> str:\n```\n\n#### Input\n- `s1` (str): The string to search for the minimum window substring.\n- `s2` (str): The string containing characters that must be present in the minimum window substring.\n\n#### Output\n- Returns the minimum window substring from `s1` that contains all characters of `s2`. If no such substring exists, return an empty string.",
    "code": "from collections import Counter\n\ndef min_window_substring(s1: str, s2: str) -> str:\n    if not s2 or not s1:\n        return \"\"\n    s2_count = Counter(s2)\n    required_chars = len(s2_count)\n    left, right = 0, 0\n    formed_chars = 0\n    window_counts = Counter()\n    min_len = float('inf')\n    min_window = \"\"\n    while right < len(s1):\n        character = s1[right]\n        window_counts[character] += 1\n        if character in s2_count and window_counts[character] == s2_count[character]:\n            formed_chars += 1\n        while left <= right and formed_chars == required_chars:\n            character = s1[left]\n            if right - left + 1 < min_len:\n                min_len = right - left + 1\n                min_window = s1[left:right + 1]\n            window_counts[character] -= 1\n            if character in s2_count and window_counts[character] < s2_count[character]:\n                formed_chars -= 1\n            left += 1\n    return min_window",
    "tests": [
        "assert min_window_substring('ADOBECODEBANC', 'ABC') == 'BANC'",
        "assert min_window_substring('a', 'a') == 'a'",
        "assert min_window_substring('hello', 'world') == ''"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "Daily Coding Problem"
}