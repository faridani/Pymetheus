{
    "title": "Easy: Maximum Sum of an Hourglass",
    "description": "An hourglass is a 2D shape where each cell contains an integer. We can define two cells as adjacent if they share an edge. In this problem, we are given a 2D array `hourglass` representing the values in an hourglass and our task is to find the maximum sum of an hourglass.\n\n#### Function Signature\n```python\ndef max_sum_of_hourglass(hourglass: list) -> int:\n```\n\n#### Input\n- `hourglass` (list): A 2D list representing the values in an hourglass. The list will have at least three rows and three columns, but may be larger.\n\n#### Output\n- Returns the maximum sum of any hourglass that can be formed from the given array.",
    "code": "",
    "\ndef max_sum_of_hourglass(hourglass: list) -> int:\n    max_sum = float('-inf')\n    \n    for i in range(len(hourglass) - 2):\n        for j in range(1, len(hourglass[0]) - 1):\n            current_sum = hourglass[i][j-1] + hourglass[i][j] + hourglass[i][j+1]\n            current_sum += hourglass[i+1][j]\n            current_sum += hourglass[i+2][j-1] + hourglass[i+2][j] + hourglass[i+2][j+1]\n            max_sum = max(max_sum, current_sum)\n    \n    return max_sum": "",
    "tests": [
        "assert max_sum_of_hourglass([[-1,-8,0,6,-7,-4,-2,-3,-1], [-2,-5,20,15,25,15,22,14,19], [18,21,11,-12,-9,15,13,17,27], [-10, 16,28,20, 8,26,17,13,12], [-12,24, 3,23, 7,17, 5, 2,11]]) == 51",
        "assert max_sum_of_hourglass([[-1,-8,0,6,-7,-4,-2,-3,-1], [10,15,20,18,25,22,14,19,28], [-12,24, 3,23, 7,17, 5, 2,11]]) == 64"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "CodeWars"
}