{
    "title": "Hard: Maximum Subarray",
    "description": "Write a function `max_subarray` that takes an array of integers as input and returns the maximum sum of a contiguous subarray within the given array.\n\n#### Function Signature\n```python\ndef max_subarray(arr: list[int)) -> int:\n```\n\n#### Input\n- `arr` (list[int]): A list of integers.\n\n#### Output\n- Returns the maximum sum of a contiguous subarray within the given array.",
    "code": "",
    "\nimport sys\n\ndef max_subarray(arr: list[int]) -> int:\n    if not arr:\n        return 0\n    \n    current_sum = max_sum = arr[0]\n    \n    for num in arr[1:]:\n        current_sum = max(num, current_sum + num)\n        max_sum = max(max_sum, current_sum)\n    \n    return max_sum": "",
    "tests": [
        "assert max_subarray([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6",
        "assert max_subarray([1, -2, 3, 10, -4, 7, 2, -5]) == 18",
        "assert max_subarray([-1, 1]) == 1"
    ],
    "difficulty": "hard",
    "model": "llama3:latest",
    "style": "SPOJ"
}