{
    "title": "'Check if a Given String is a Palindrome with Special Characters (Easy)'",
    "description": "A palindrome is a sequence of characters that reads the same forward and backward. However, we will consider a string to be a palindrome even if it contains special characters, as long as the string excluding special characters reads the same forwards and backwards.\n\n#### Function Signature\n```python\ndef is_palindrome(s: str) -> bool:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, punctuation, or any other special characters.\n\n#### Output\n- Returns `True` if the input string is a palindrome, `False` otherwise.",
    "code": "import re\ndef is_palindrome(s: str) -> bool:\n    # Remove non-alphanumeric characters and spaces from the string\n    s = re.sub('[\\W ]', '', s)\n    # Check if the cleaned string reads the same forwards and backwards\n    return s == s[::-1]",
    "tests": [
        "assert is_palindrome('A man, a plan, a canal: Panama') == True",
        "assert is_palindrome('racecar') == True",
        "assert is_palindrome('hello') == False",
        "assert is_palindrome('No \\'x\\' in Nixon') == True",
        "assert is_palindrome('A1B2C3!@#$%^&*() A1B2C3!@#$%^&*()') == True"
    ],
    "difficulty": "easy",
    "model": "mistral:latest",
    "style": "LeetCode"
}