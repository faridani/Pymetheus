{
    "title": "Maximum Sum of Subarrays",
    "description": "Given an array of integers, write a function that finds the maximum sum of all possible subarrays. Note that the subarray can start anywhere within the original array and must be contiguous.\n\n#### Function Signature\n```python\ndef max_sum_subarray(arr: list[int)) -> int:\n```\n\n#### Input\n- `arr` (list[int]): A list of integers.\n\n#### Output\n- Returns the maximum sum of all possible subarrays in the input array.",
    "code": "\nimport math\n\ndef max_sum_subarray(arr: list[int]) -> int:\n    n = len(arr)\n    max_sum = float('-inf')\n    \n    for i in range(n):\n        current_sum = 0\n        for j in range(i, n):\n            current_sum += arr[j]\n            if current_sum > max_sum:\n                max_sum = current_sum\n    \n    return max_sum",
    "tests": [
        "assert max_sum_subarray([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6",
        "assert max_sum_subarray([1, -2, 3, 10, -4, 7, 2, -5]) == 12",
        "assert max_sum_subarray([-5, -3, -9]) == 0"
    ],
    "difficulty": "insanely difficult",
    "model": "llama3:latest",
    "style": "HackerEarth"
}