{
    "title": "'Palindromic Substrings Finder (Medium)'",
    "description": "Given a string `s`, find and return all the non-overlapping palindromic substrings. A palindrome is a word, phrase, number, or other sequence of characters that reads the same forward and backward (ignoring spaces, punctuation, and capitalization).\n\n#### Function Signature\n```python\ndef find_palindromes(s: str) -> List[str]:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns a list of all non-overlapping palindromic substrings found in the input string.",
    "code": "import re\ndef find_palindromes(s: str) -> List[str]:\n    # Find all possible palindromes, including overlapping ones\n    palindromes = list(re.findall('((?.))\\1*', s))\n    # Remove any non-palindromic substrings (single characters or strings that do not match themselves)\n    return [substr for substr in palindromes if len(substr) > 1 and substr[0] == substr[-1]]",
    "tests": [
        "assert find_palindromes(\"A man, a plan, a canal: Panama\") == [\"amanaplanacanalpanama\", \"man\"]",
        "assert find_palindromes(\"racecar\") == [\"racecar\", \"race\", \"carc\"]",
        "assert find_palindromes(\"hello\") == []",
        "assert find_palindromes(\"No 'x' in Nixon\") == [\"No\", \"'x'\", \"Nixon\"]"
    ],
    "difficulty": "medium",
    "model": "mistral:latest",
    "style": "CodeChef"
}