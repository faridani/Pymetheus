{
    "title": "Maximum Sum of Alternating Subarray",
    "description": "Given an array of integers, find the maximum sum of alternating subarrays.\n\n#### Function Signature\n```python\ndef max_alternating_sum(arr: list[int)) -> int:\n```\n\n#### Input\n- `arr` (list[int]): A list of integers.\n\n#### Output\n- Returns the maximum sum of alternating subarrays.",
    "code": "\ndef max_alternating_sum(arr: list[int]) -> int:\n    n = len(arr)\n    \n    # Initialize maximum sum\n    max_sum = float('-inf')\n    \n    for i in range(0, n, 2):\n        temp_sum = 0\n        for j in range(i, min(n, i+2)):\n            temp_sum += arr[j]\n        max_sum = max(max_sum, temp_sum)\n        \n    return max_sum",
    "tests": [
        "assert max_alternating_sum([1, -2, 3, 10, -4, 7, 6]) == 16",
        "assert max_alternating_sum([-5, 0, 6, 2, -1]) == 6",
        "assert max_alternating_sum([1, 1, 1, 1]) == 4"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "CodeChef"
}