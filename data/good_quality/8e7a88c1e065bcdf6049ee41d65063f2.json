{
    "title": "String Compression",
    "description": "Write a function `compress_string` that compresses a given string by replacing sequences of the same character with the character and its frequency. For example, the string `\"aaaabbb\"` would become `\"a4b3\"`. The function should handle strings of any length.\n\n#### Function Signature\n```python\ndef compress_string(s: str) -> str:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns the compressed version of the input string.",
    "code": "def compress_string(s: str) -> str:\n    if not s:\n        return ''\n    compressed = ''\n    i = 0\n    while i < len(s):\n        count = 1\n        while i + 1 < len(s) and s[i] == s[i+1]:\n            i += 1\n            count += 1\n        compressed += s[i] + str(count)\n        i += 1\n    return compressed",
    "tests": [
        "assert compress_string('abc') == 'abc'",
        "assert compress_string('aaaabbb') == 'a4b3'",
        "assert compress_string('') == ''",
        "assert compress_string('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "CodeSignal"
}