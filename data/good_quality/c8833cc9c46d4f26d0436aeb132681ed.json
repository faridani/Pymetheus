{
    "title": "Medium: Counting Islands",
    "description": "You are given a 2D grid of size M x N, where each cell can be either land ('L') or water ('W'). Write a function `count_islands` that counts the number of distinct islands in the grid.\n\n#### Function Signature\n```python\ndef count_islands(grid: list[list[str]]) -> int:\n```\n\n#### Input\n- `grid` (list[list[str]]): A 2D grid, where each cell is either 'L' or 'W'.\n\n#### Output\n- Returns the number of distinct islands in the grid.",
    "code": "",
    "\nimport copy\n\ndef count_islands(grid: list[list[str]]) -> int:\n    if not grid:\n        return 0\n    \n    def dfs(r, c):\n        if r < 0 or c < 0 or r >= len(grid) or c >= len(grid[0]) or grid[r][c] != 'L':\n            return\n        grid[r][c] = 'W'\n        for dr, dc in [(-1, 0), (1, 0), (0, -1), (0, 1)]:\n            dfs(r + dr, c + dc)\n\n    count = 0\n    for r in range(len(grid)):\n        for c in range(len(grid[0])):\n            if grid[r][c] == 'L':\n                dfs(r, c)\n                count += 1\n\n    return count": "",
    "tests": [
        "assert count_islands([['W', 'L', 'L'], ['L', 'W', 'W'], ['W', 'W', 'W']]) == 2",
        "assert count_islands([]) == 0",
        "assert count_islands([['W', 'W', 'W'], ['W', 'L', 'W'], ['W', 'W', 'W']]) == 1"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "TopCoder"
}