{
    "title": "Valid Sudoku",
    "description": "Write a function `isValidSudoku` that checks if a given 9x9 2D array represents a valid Sudoku. A valid Sudoku must contain the numbers 1-9 without repeating any number in each row, column or 3x3 sub-grid.\n\n#### Function Signature\n```\ndef isValidSudoku(board: List[List[int]]) -> bool:\n```\\n\n#### Input\n- `board` (List[List[int]]): A 2D array representing a Sudoku puzzle. The array contains integers from 1 to 9, and empty cells are represented by 0.\n\n#### Output\n- Returns `True` if the input board represents a valid Sudoku, `False` otherwise.",
    "code": "from typing import List\n\ndef isValidSudoku(board: List[List[int]]) -> bool:\n    for i in range(9):\n        row = [cell for cell in board[i] if cell != 0]\n        col = [board[j][i] for j in range(9) if board[j][i] != 0]\n\n        if len(set(row)) != 9 or len(set(col)) != 9:\n            return False\n\n    for i in range(0, 7, 3):\n        for j in range(0, 7, 3):\n            subgrid = [board[x][y] for x in range(i, i+3) for y in range(j, j+3) if board[x][y] != 0]\n\n            if len(set(subgrid)) != 9:\n                return False\n    return True",
    "tests": [
        "assert isValidSudoku([[5,3,4,6,7,8,9,1,2],[6,7,8,9,1,2,3,4,5],[2,1,9,8,4,3,5,6,7],[8,5,9,7,6,3,4,2,1],[4,2,6,8,5,1,3,9,7],[1,6,3,4,2,5,7,8,9],[3,4,2,5,1,9,7,6,8],[9,7,1,3,4,2,8,5,6],[7,9,8,6,3,4,2,1,5]])==True",
        "assert isValidSudoku([[1,2],[2,1]])==False",
        "assert isValidSudoku([[1,2,3,4,5,6,7,8,9]])==False",
        "assert isValidSudoku([[0,0,0,0,0,0,0,0,0]])==False"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "LeetCode"
}