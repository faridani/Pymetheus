{
    "title": "Easy: Maximum Subarray",
    "description": "Given an array of integers, find the maximum subarray sum. A subarray is a contiguous part of an array.\n\n#### Function Signature\n```python\ndef max_subarray_sum(arr: list[int)) -> int:\n```\n\n#### Input\n- `arr` (list[int]): An array of integers.\n\n#### Output\n- Returns the maximum sum of any subarray in the input array.",
    "code": "\ndef max_subarray_sum(arr: list[int]) -> int:\n    if not arr:\n        return 0\n    \n    max_sum = float('-inf')\n    current_sum = 0\n    \n    for num in arr:\n        current_sum = max(num, current_sum + num)\n        max_sum = max(max_sum, current_sum)\n    \n    return max_sum",
    "tests": [
        "assert max_subarray_sum([-2,1,-3,4,-1,2,1,-5,4]) == 6",
        "assert max_subarray_sum([1]) == 1",
        "assert max_subarray_sum([-1]) == -1",
        "assert max_subarray_sum([]) == 0"
    ],
    "difficulty": "easy",
    "model": "llama3:latest",
    "style": "AtCoder"
}