{
    "title": "Easy: Counting the Number of Islands",
    "description": "Given a 2D array `grid` where each cell can be either water (`0`) or land (`1`), write a function that counts the number of islands in the grid.\n\n#### Function Signature\n```python\ndef count_islands(grid: list[list[int]]) -> int:\n```\n\n#### Input\n- `grid` (list[list[int]]): A 2D array where each cell is either `0` (water) or `1` (land).\n\n#### Output\n- Returns the number of islands in the grid.",
    "code": "",
    "\ndef count_islands(grid: list[list[int]]) -> int:\n    if not grid:\n        return 0\n    \n    rows, cols = len(grid), len(grid[0])\n    visited = [[False] * cols for _ in range(rows)]\n    \n    def dfs(r, c):\n        if r < 0 or r >= rows or c < 0 or c >= cols or visited[r][c]:\n            return\n        visited[r][c] = True\n        if grid[r][c] == 1:\n            for dr, dc in [(-1, 0), (1, 0), (0, -1), (0, 1)]:\n                dfs(r + dr, c + dc)\n    \n    island_count = 0\n    for r in range(rows):\n        for c in range(cols):\n            if grid[r][c] == 1 and not visited[r][c]:\n                dfs(r, c)\n                island_count += 1\n    \n    return island_count": "",
    "tests": [
        "assert count_islands([[0, 0], [0, 1]]) == 1",
        "assert count_islands([[0, 0, 0], [0, 1, 0], [0, 0, 0]]) == 1",
        "assert count_islands([[1, 1, 0], [1, 1, 0], [0, 0, 0]]) == 2"
    ],
    "difficulty": "easy",
    "model": "llama3:latest",
    "style": "AtCoder"
}