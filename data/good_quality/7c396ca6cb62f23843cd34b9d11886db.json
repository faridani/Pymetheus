{
    "title": "Maximum Sum of Subarray",
    "description": "Given an integer array `nums`, write a function `max_sum_subarray` that finds the maximum sum of a contiguous subarray within the given array.\n\n#### Function Signature\n```python\ndef max_sum_subarray(nums: list[int]) -> int:\n```\n\n#### Input\n- `nums` (list[int]): A list of integers.\n\n#### Output\n- Returns the maximum sum of a contiguous subarray within the input array.",
    "code": "def max_sum_subarray(nums: list[int]) -> int:\n    if not nums:\n        return 0\n    current_max = max_ending_here = nums[0]\n    for num in nums[1:]:\n        ending_here = max(num, current_max + num)\n        current_max = max_ending_here = ending_here\n    return max_ending_here",
    "tests": [
        "assert max_sum_subarray([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6",
        "assert max_sum_subarray([1]) == 1",
        "assert max_sum_subarray([-1]) == -1",
        "assert max_sum_subarray([]) == 0"
    ],
    "difficulty": "hard",
    "model": "llama3:latest",
    "style": "Competitive Programming"
}