{
    "title": "Easy: Find the maximum sum of a subarray",
    "description": "Write a function `max_subarray_sum` that takes an array of integers as input and returns the maximum sum of any contiguous subarray within the array.\n\n#### Function Signature\n```python\ndef max_subarray_sum(arr: list[int]) -> int:\n```\n\n#### Input\n- `arr` (list[int]): An array of integers, not necessarily sorted.\n\n#### Output\n- Returns the maximum sum of any contiguous subarray within the input array.",
    "code": "def max_subarray_sum(arr: list[int]) -> int:\n    if not arr:\n        return 0\n    max_sum = current_sum = arr[0]\n    for num in arr[1:] :\n        current_sum = max(num, current_sum + num)\n        max_sum = max(max_sum, current_sum)\n    return max_sum",
    "tests": [
        "assert max_subarray_sum([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6",
        "assert max_subarray_sum([1, 2, 3, 4, 5]) == 15",
        "assert max_subarray_sum([]) == 0",
        "assert max_subarray_sum([-1, -2, -3]) == -1"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "TopCoder"
}