{
    "title": "Hard: Prime Number Chain",
    "description": "A prime number chain is a sequence of consecutive integers, each one being either a prime or not. Write a function `prime_chain` that generates a prime number chain of a given length.\n\n#### Function Signature\n```python\ndef prime_chain(n: int) -> list:\n```\n\n#### Input\n- `n` (int): The length of the prime number chain.\n\n#### Output\n- Returns a list of integers representing the prime number chain.",
    "code": "",
    "\nimport math\n\ndef is_prime(num):\n    if num < 2:\n        return False\n    for i in range(2, int(math.sqrt(num)) + 1):\n        if num % i == 0:\n            return False\n    return True\n\ndef prime_chain(n: int) -> list:\n    chain = [2]\n    last_prime = 2\n    while len(chain) < n:\n        for i in range(last_prime + 1, 2 * last_prime):\n            if is_prime(i):\n                chain.append(i)\n                last_prime = i\n                break\n    return chain": "",
    "tests": [
        "assert prime_chain(5) == [2, 3, 5, 7, 11]",
        "assert prime_chain(10) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]"
    ],
    "difficulty": "super hard",
    "model": "llama3:latest",
    "style": "Project Euler"
}