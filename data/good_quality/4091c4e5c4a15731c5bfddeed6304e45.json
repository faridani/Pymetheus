{
    "title": "'Palindrome with Special Characters Checker (Medium)'",
    "description": "Write a function `is_palindrome` that checks if a given string is a palindrome, considering that special characters are part of the sequence. The function should ignore spaces, punctuation and casing.\n\n#### Function Signature\n```python\ndef is_palindrome(s: str) -> bool:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, special characters, spaces, and punctuation.\n\n#### Output\n- Returns `True` if the input string is a palindrome, `False` otherwise.",
    "code": "import re\ndef is_palindrome(s: str) -> bool:\n    # Remove non-alphanumeric characters and spaces from both sides of the string\n    s = re.sub('[\\W\\s]', '', s).lower()\n    # Check if the cleaned string reads the same forwards and backwards\n    return s == s[::-1]",
    "tests": [
        "assert is_palindrome(\"A man, a plan, a canal, Panama\") == True",
        "assert is_palindrome(\"racecar\") == True",
        "assert is_palindrome(\"hello\") == False",
        "assert is_palindrome(\"No 'x' in Nixon\") == True",
        "assert is_palindrome(\"A1B2C3!3C2B1A\") == True"
    ],
    "difficulty": "medium",
    "model": "mistral:latest",
    "style": "HackerEarth"
}