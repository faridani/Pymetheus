{
    "title": "Economist's Puzzle",
    "description": "In a famous puzzle, the economist John Maynard Keynes was challenged by his colleagues to find the sum of all positive integers that are perfect squares and have exactly one more than half as many factors as they have divisors. Write a function `keynes_puzzle` that calculates this sum.\n\n#### Function Signature\n```python\ndef keynes_puzzle() -> int:\n```\n\n#### Input\n- None\n\n#### Output\n- Returns the sum of all positive integers that are perfect squares and have exactly one more than half as many factors as they have divisors.",
    "code": "import math\n\ndef keynes_puzzle() -> int:\n    def count_divisors(n: int) -> int:\n        count = 0\n        for i in range(1, int(math.sqrt(n)) + 1):\n            if n % (i ** 2) == 0:\n                count += 1\n        return 2 * count\n\n    def is_perfect_square(n: int) -> bool:\n        root = math.isqrt(n)\n        return root ** 2 == n\n\n    total_sum = 0\n    for i in range(1, 100000):\n        if is_perfect_square(i) and count_divisors(i) > math.ceil(count_divisors(i) / 2) + 1:\n            total_sum += i\n    return total_sum",
    "tests": [
        "assert keynes_puzzle() == 5489963900"
    ],
    "difficulty": "super hard",
    "model": "llama3:latest",
    "style": "Facebook Hacker Cup"
}