{
    "title": "Sum of Divisors",
    "description": "A divisor of an integer n is a number that divides n evenly, leaving no remainder. For example, the divisors of 12 are 1, 2, 3, 4, 6, and 12. The sum of these divisors is 1 + 2 + 3 + 4 + 6 + 12 = 28. Write a function `sum_of_divisors` that takes an integer n as input and returns the sum of all its divisors, including 1 and n.\n\n#### Function Signature\n```python\ndef sum_of_divisors(n: int) -> int:\n```\n\n#### Input\n- `n` (int): A positive integer.\n\n#### Output\n- Returns the sum of all divisors of n, including 1 and n.\n",
    "code": "def sum_of_divisors(n: int) -> int:\n    if n < 1:\n        raise ValueError(\"Input must be a positive integer\")\n    \n    # Initialize the sum to 0\n    sum = 0\n    \n    # Iterate through numbers from 1 to n and check if they are divisors\n    for i in range(1, n + 1):\n        if n % i == 0:\n            sum += i\n    \n    return sum\n",
    "tests": [
        "assert sum_of_divisors(12) == 28",
        "assert sum_of_divisors(6) == 17",
        "assert sum_of_divisors(25) == 51",
        "assert sum_of_divisors(30) == 91"
    ],
    "difficulty": "insanely difficult",
    "model": "aya:35b",
    "style": "Project Euler"
}