{
    "title": "Anagram Detection: Easy",
    "description": "Given two strings, determine if they are anagrams of each other. An anagram is a word or phrase that consists of the same letters as another word or phrase, but in a different order.\n\n#### Function Signature\n```python\ndef are_anagrams(str1: str, str2: str) -> bool:\n```\n\n#### Input\n- `str1` (str): A string containing only letters (no numbers or special characters)\n- `str2` (str): A string containing only letters (no numbers or special characters)\n\n#### Output\n- Returns `True` if the two input strings are anagrams, `False` otherwise.\n",
    "code": "def are_anagrams(str1: str, str2: str) -> bool:\n    # Remove any spaces and convert to lowercase\n    str1 = ''.join(char for char in str1.lower() if char in string.ascii_letters)\n    str2 = ''.join(char for char in str2.lower() if char in string.ascii_letters)\n    # Check if the sorted characters of both strings are the same\n    return sorted(str1) == sorted(str2)",
    "tests": [
        "assert are_anagrams(\"listen\", \"silent\") == True",
        "assert are_anagrams(\"hello\", \"world\") == False",
        "assert are_anagrams(\"actors\", \"scorers\") == True"
    ],
    "difficulty": "insanely difficult",
    "model": "mistral:latest"
}