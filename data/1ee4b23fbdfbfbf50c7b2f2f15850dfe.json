{
    "title": "Hard: Longest Increasing Subsequence",
    "description": "Given an integer array nums, return the length of the longest strictly increasing subsequence.\n\n#### Function Signature\n```python\ndef length_of_LIS(nums: List[int]) -> int:\n```\n\n#### Input\n- `nums` (List[int]): A list of integers.\n\n#### Output\n- Returns the length of the longest strictly increasing subsequence in the input list.\n",
    "code": "from typing import List\n\ndef length_of_LIS(nums: List[int]) -> int:\n    if not nums: return 0\n    dp = [1] * len(nums)\n    for i in range(len(nums)):\n        for j in range(i):\n            if nums[i] > nums[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return max(dp)\n",
    "tests": [
        "assert length_of_LIS([10,9,2,5,3,7,101,18]) == 4",
        "assert length_of_LIS([0,1,0,3,2,3]) == 4",
        "assert length_of_LIS([7,7,7,7,7,7,7]) == 1"
    ],
    "difficulty": "hard",
    "model": "codestral:latest"
}