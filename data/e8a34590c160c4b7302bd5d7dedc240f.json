{
    "title": "Anagram Detection (Hard)",
    "description": "Determine if two given strings are anagrams of each other. An anagram is a word or phrase that is formed by rearranging the letters of another word or phrase, typically using all the original letters exactly once.\n\n#### Function Signature\n```python\ndef are_anagrams(s1: str, s2: str) -> bool:\n```\n\n#### Input\n- `s1` (str): A string containing lowercase alphabets only.\n- `s2` (str): A string containing lowercase alphabets only.\n\n#### Output\n- Returns `True` if the two strings are anagrams of each other, `False` otherwise.\n",
    "code": "def are_anagrams(s1: str, s2: str) -> bool:\n    # Sort both strings and compare\n    return sorted(list(s1)) == sorted(list(s2))",
    "tests": [
        "assert are_anagrams('listen', 'silent') == True",
        "assert are_anagrams('hello', 'world') == False",
        "assert are_anagrams('anagram', 'nagaram') == True"
    ],
    "difficulty": "super hard",
    "model": "mistral:latest"
}