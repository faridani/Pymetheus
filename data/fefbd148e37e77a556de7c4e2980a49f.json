{
    "title": "Maximum Sum of Subarray",
    "description": "Write a function `max_sum_subarray` that takes an array of integers as input and returns the maximum sum of any subarray within the given array.\n\n#### Function Signature\n```python\ndef max_sum_subarray(arr: list[int]) -> int:\n```\n\n#### Input\n- `arr` (list[int]): A list of integers.\n\n#### Output\n- Returns the maximum sum of any subarray within the given array.\n",
    "code": "\nimport itertools\n\ndef max_sum_subarray(arr: list[int]) -> int:\n    max_sum = float('-inf')\n    for window_size in range(1, len(arr) + 1):\n        for window_start in range(len(arr) - window_size + 1):\n            window = arr[window_start:window_start + window_size]\n            current_sum = sum(window)\n            if current_sum > max_sum:\n                max_sum = current_sum\n    return max_sum\n\n",
    "tests": [
        "assert max_sum_subarray([-2, 3, -4]) == 5",
        "assert max_sum_subarray([1, 2, 3, 10, -4, 20, 50]) == 47",
        "assert max_sum_subarray([-1, 0, 1, 2, -1, -4]) == 6"
    ],
    "difficulty": "medium",
    "model": "llama3:latest",
    "style": "Competitive Programming"
}