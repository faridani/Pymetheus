{
    "title": "'Easy' Fibonacci Function with a Twist",
    "description": "Write a function called `fib_with_twist` that takes an integer `n` as input and returns the nth Fibonacci number. However, this time the sequence starts from 1, 2, 3, 5 instead of the traditional 0, 1, 1, 2.\n\n#### Function Signature\n```python\ndef fib_with_twist(n: int) -> int:\n```\n\n#### Input\n- `n` (int): The position in the Fibonacci sequence to return starting from 1.\n\n#### Output\n- Returns the nth Fibonacci number according to the given sequence.\n",
    "code": "def fib_with_twist(n: int) -> int:\n    # Base cases\n    if n == 1 or n == 2:\n        return 1\n    elif n == 3:\n        return 2\n    else:\n        # Calculate previous two Fibonacci numbers and return the sum\n        prev_prev = 1\n        prev = 2\n        for _ in range(4, n+1):\n            next = prev + prev_prev\n            prev_prev = prev\n            prev = next\n        return next",
    "tests": [
        "assert fib_with_twist(1) == 1",
        "assert fib_with_twist(2) == 1",
        "assert fib_with_twist(3) == 2",
        "assert fib_with_twist(4) == 3",
        "assert fib_with_twist(5) == 2",
        "assert fib_with_twist(6) == 5",
        "assert fib_with_twist(7) == 8",
        "assert fib_with_twist(8) == 13"
    ],
    "difficulty": "easy",
    "model": "mistral:latest"
}