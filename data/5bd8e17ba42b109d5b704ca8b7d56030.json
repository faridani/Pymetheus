{
    "title": "Permutation Palindromes",
    "description": "A permutation palindrome is a string that can be rearranged into a palindrome. Write a function `is_permutation_palindrome` that checks if a given string is a permutation palindrome.\n\n#### Function Signature\n```python\ndef is_permutation_palindrome(s: str) -> bool:\n```\n\n#### Input\n- `s` (str): A string that may contain letters, numbers, spaces, and punctuation.\n\n#### Output\n- Returns `True` if the input string is a permutation palindrome, `False` otherwise.\n",
    "code": "def is_permutation_palindrome(s: str) -> bool:\n    s = ''.join(char for char in s if char.isalnum()).lower()\n    return len(set(s)) <= 1 or all(s.count(c) % 2 == 0 for c in set(s))\n",
    "tests": [
        "assert is_permutation_palindrome('tact coa') == True",
        "assert is_permutation_palindrome('Abut False') == False",
        "assert is_permutation_palindrome('No x In Nixon') == True",
        "assert is_permutation_palindrome('Hello World!') == False"
    ],
    "difficulty": "super hard",
    "model": "codebooga:latest",
    "style": "Codeforces"
}