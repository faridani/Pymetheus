{
    "title": "Hard - String Compression",
    "description": "Implement a function `compress` that compresses a string by counting the repeated characters. If the compressed string is longer than the original, return the original string. Otherwise, return the compressed string.\n\n#### Function Signature\n```python\ndef compress(s: str) -> str:\n```\n\n#### Input\n- `s` (str): A string of uppercase and lowercase letters.\n\n#### Output\n- Returns the compressed string if it is shorter than or equal to the original, otherwise returns the original string.\n",
    "code": "def compress(s: str) -> str:\n    # Initialize an empty list to store the compressed characters\n    compressed = []\n    count = 1\n\n    for i in range(1, len(s)):\n        if s[i] == s[i-1]:\n            count += 1\n        else:\n            # Append the character and its count to the compressed list\n            compressed.append(s[i-1])\n            compressed.append(str(count))\n            count = 1\n    # Add the last character and its count\n    compressed.append(s[-1])\n    compressed.append(str(count) if count > 1 else '')\n\n    return ''.join(compressed) if len(compressed) < len(s) else s\n",
    "tests": [
        "assert compress('aaabbbcc') == 'a3b3c2'",
        "assert compress('aabbbaa') == 'a2b3a2'",
        "assert compress('abc') == 'abc'",
        "assert compress('aaaAAAbbbbCccc') == 'a3A3b4C1c3'"
    ]
}