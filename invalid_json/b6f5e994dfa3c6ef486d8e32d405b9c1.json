"{\n\"title\": \"Medium: Maximum Subarray Sum\",\n\"description\": \"You are given an array of integers representing the daily stock prices of a company. Your task is to find the maximum sum of any non-empty contiguous subarray within this list of prices.\\n\\n#### Function Signature\\n```python\\ndef max_subarray_sum(arr: List[int]) -> int:\\n```\\n\\n#### Input\\n- `arr` (List[int]): A list of integers representing daily stock prices.\\n\\n#### Output\\n- Returns the maximum sum of any contiguous subarray within the input list.\",\n\"code\": \"from typing import List\\n\\ndef max_subarray_sum(arr: List[int]) -> int:\\n    max_sum = current_sum = arr[0]\\n    for num in arr[1:]:\\n        current_sum = max(num, current_sum + num)\\n        max_sum = max(max_sum, current_sum)\\n    return max_sum\\n\",\n\"tests\": [\n'assert max_subarray_sum([34, -50, 42, 14, -5, 86]) == 137',\n'assert max_subarray_sum([-2, -3, 4, -1, -2, 1, 5, -3]) == 7',\n'assert max_subarray_sum([0, -1, -2, -3]) == -1',\n'assert max_subarray_sum([2, 3, -7, -5, 9, 6, -8, -4]) == 15'\n]\n}"