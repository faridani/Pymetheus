"{\"title\": \"Medium: Unique Element Finder\", \"description\": \"The problem asks to find the element that appears exactly once in an array. All other elements appear twice or not at all. Write a function `find_unique_element` which takes an array of integers and returns the integer that occurs only once.\n\n#### Function Signature\n```python\ndef find_unique_element(nums: List[int]) -> int:\n```\n\n#### Input\n- nums (List[int]): A list of integers with each element appearing exactly twice, except for one element that appears exactly once.\n\n#### Output\n- Returns an integer which is the unique element in `nums` or None if no such element exists.\n\n#### Constraints and Hints\n- The input array size ranges from 2 to 10^5.\n- Each number in the array falls within the range [-10^9, 10^9].\n- There are always exactly two numbers that occur more than once. \n\n#### Example\nassert find_unique_element([4, 1, 2, 1, 2]) == 4 \nassert find_unique_element([-3, -3, -5]) == -5\",\n\"code\": \"from typing import List\\n\\ndef find_unique_element(nums: List[int]) -> int:\\n    # Count the occurrence of each number using a dictionary\\n    count_dict = {}\\n    for num in nums:\\n        if num in count_dict:\\n            count_dict[num] += 1\\n        else:\\n            count_dict[num] = 1\\n    \\n    # Find and return the unique element\\n    for key, value in count_dict.items():\\n        if value == 1:\\n            return key\\n\",\n\"tests\": [\"assert find_unique_element([4, 1, 2, 1, 2]) == 4\", \"assert find_unique_element([-3, -3, -5]) == -5\", \"assert find_unique_element([7, 8, 9, 8, 9]) == 7\", \"assert find_unique_element([0, 0, -1, 2, 2]) == -1\"]}"