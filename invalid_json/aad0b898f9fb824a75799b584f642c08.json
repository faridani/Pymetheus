"Here is your new Python coding question:\n\n{\"title\": \"Finding the Shortest War\", \"description\": \"Write a function `shortest_war` that takes as input two lists of integers representing years. The first list represents the start year and end year for each war, and the second list represents the duration (in days) of each war.\\n\\n#### Function Signature\\n```python\\ndef shortest_war(wars_start: list[int], wars_duration: list[int]) -> int:\\n```\\n\\n#### Input\\n- `wars_start` (list[int]): A list of integers representing the start year for each war.\\n- `wars_duration` (list[int]): A list of integers representing the duration (in days) of each war.\\n\\n#### Output\\n- Returns the index of the shortest war, or -1 if there are no wars.\\n\", \"code\": \"\nimport heapq\n\ndef shortest_war(wars_start: list[int], wars_duration: list[int]) -> int:\n    # Create a heap to store the end year for each war\n    end_year_heap = []\n    \n    # Initialize the index of the shortest war to -1\n    shortest_war_index = -1\n    \n    # Iterate over the start and end years for each war\n    for i in range(len(wars_start)):\n        # Calculate the end year for the current war\n        end_year = wars_start[i] + (wars_duration[i] / 365)\n        \n        # Add the end year to the heap\n        heapq.heappush(end_year_heap, end_year)\n        \n        # Check if this is the shortest war so far\n        if i == 0 or end_year < end_year_heap[0]:\n            # Update the index of the shortest war\n            shortest_war_index = i\n    \n    # Return the index of the shortest war\n    return shortest_war_index\n\n\", \"tests\": [\"assert shortest_war([2020, 2021, 2030], [365, 730, 1095]) == 2\", \"assert shortest_war([2010, 2015, 2020], [1461, 1826, 2193]) == 0\", \"assert shortest_war([], []) == -1\", \"assert shortest_war([2000, 2001], [365, 730]) == 0\"]}"