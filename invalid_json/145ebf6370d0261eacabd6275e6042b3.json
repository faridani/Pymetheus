"Here is a new problem for you: \n\n{\"title\": \"String Compression (Hard)\", \"description\": \"Implement a function `compress_string` that takes as input an uncompressed string and returns the compressed version of the string. The compression should be in the form of 'length of the character' + 'character'. For example, the string 'aabcccccaaa' would be compressed to '2a1b5c3a'.\\n\\n#### Function Signature\\n```python\\ndef compress_string(s: str) -> str:\\n```\", \"code\": \"def compress_string(s: str) -> str:\\n    result = ''\\n    current_char = s[0]\\n    count = 1\\n    for char in s[1:]:\\n        if char == current_char:\\n            count += 1\\n        else:\\n            result += f'{count}{current_char}'\\n            current_char = char\\n            count = 1\\n    result += f'{count}{current_char}'\\n    return result\\n\", \"tests\": [\"assert compress_string('aabcccccaaa') == '2a1b5c3a'\", \"assert compress_string('abcde') == '1a1b1c1d1e'\", \"assert compress_string('aabbcc') == '2a2b2c'\", \"assert compress_string('aaabbbcccdddeeefff') == '3a3b3c3d3e3f'\"]}"