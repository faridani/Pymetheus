" {\n      \"title\": \"Anagram Finder (Hard)\",\n      \"description\": \"Write a function `find_anagrams` that finds all anagrams of a given string within a list of strings.\\n\\n#### Function Signature\\n```python\\ndef find_anagrams(word: str, words: List[str]) -> List[str]:\\n```\\n\\n#### Input\\n- `word` (str): The word to find anagrams of. This can contain letters and spaces.\\n- `words` (List[str]): A list of strings that may contain anagrams of the input word.\\n\\n#### Output\\n- Returns a list of strings that are anagrams of the input word.\\n\\n#### Constraints\\n- Words can contain only lowercase letters and spaces.\\n\",\n      \"code\": \"import collections\\ndef find_anagrams(word: str, words: List[str]) -> List[str]:\\n    # Count the frequency of each letter in the input word\\n    word_freq = collections.Counter(word)\\n    \\n    # Initialize an empty list to store the results\\n    anagrams = []\\n    \\n    # Iterate over all words in the given list\\n    for w in words:\\n        # Check if the current word has the same frequency of letters as the input word\\n        if collections.Counter(w) == word_freq:\\n            # If it does, add the word to the results and continue\\n            anagrams.append(w)\\n    \\n    return anagrams\",\n      \"tests\": [\n          'assert find_anagrams(\"listen\", [\"silent\", \"enlist\", \"google\", \"world\"]) == [\"enlist\"]',\n          'assert find_anagrams(\"actinium\", [\"mendicant\", \"anatomy\", \"cinematics\"]) == [\"anatomy\", \"cinematics\"]',\n          'assert find_anagrams(\"abacus\", [\"sabcaba\", \"cabbage\", \"basket\"]) == [\"sabcaba\"]'\n      ]\n   }"