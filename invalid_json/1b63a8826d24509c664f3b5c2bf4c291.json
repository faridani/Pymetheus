"Here's your requested medium Python coding question.\n\n```json\n{\n  \"title\": \"Largest Island\",\n  \"description\": \"You are given a 2D grid of integers where each cell represents the height of a point on an island. The grid is filled with water and has only one island, represented by the grid cells. Your task is to find the maximum area of land that can be covered by flooding all the adjacent water cells from any point in the island.\\n\\n#### Function Signature\\n```python\\ndef max_area_of_island(grid: List[List[int]]) -> int:\\n```\\n\\n#### Input\\n- `grid` (List[List[int]]): A 2D grid of integers where each cell represents the height of a point on an island.\\n\\n#### Output\\n- Returns the maximum area of land that can be covered by flooding all the adjacent water cells from any point in the island.\\n\",\n  \"code\": \"\nfrom typing import List\n\ndef max_area_of_island(grid: List[List[int]]) -> int:\n    if not grid:\n        return 0\n    max_area = 0\n    visited = [[False for _ in range(len(grid[0]))] for _ in range(len(grid))]\n    \n    def dfs(i, j):\n        nonlocal max_area\n        if i < 0 or i >= len(grid) or j < 0 or j >= len(grid[0]) or grid[i][j] == -1 or visited[i][j]:\n            return 0\n        visited[i][j] = True\n        area = 1\n        for x in range(-1, 2):\n            for y in range(-1, 2):\n                if (x != 0 or y != 0) and grid[i + x][j + y] >= grid[i][j]:\n                    area += dfs(i + x, j + y)\n        return area\n    \n    for i in range(len(grid)):\n        for j in range(len(grid[0])):\n            if grid[i][j] != -1:\n                max_area = max(max_area, dfs(i, j))\n    \n    return max_area\n\",\n  \"tests\": [\n    \"assert max_area_of_island([[0,0,1,1],[0,0,1,1],[0,0,0,0]]) == 4\",\n    \"assert max_area_of_island([[0,0,1,0],[0,0,1,0],[0,0,0,0]]) == 2\",\n    \"assert max_area_of_island([[-1,-1,-1,-1],[ -1,-1,-1,-1], [-1,-1,-1,-1] ]) == 0\",\n    \"assert max_area_of_island([[1]] * 5) == 25\"\n  ]\n}\n```"