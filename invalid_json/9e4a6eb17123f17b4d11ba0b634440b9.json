" {\n     \"title\": \"Anagram Detection (Hard)\",\n     \"description\": \"Determine if two given strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Write a function `are_anagrams` that checks if two given strings are anagrams.\\n\\n#### Function Signature\\n```python\\ndef are_anagrams(s1: str, s2: str) -> bool:\\n```\\n\\n#### Input\\n- `s1` (str): A string that may contain letters (uppercase or lowercase), numbers, and spaces.\\n- `s2` (str): Another string that may contain letters (uppercase or lowercase), numbers, and spaces.\\n\\n#### Output\\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\\n\",\n     \"code\": \"import collections\\n\\ndef are_anagrams(s1: str, s2: str) -> bool:\\n    # Remove spaces and convert to lowercase\\n    s1 = ''.join(sorted(s1.lower().replace(' ', '')))\\n    s2 = ''.join(sorted(s2.lower().replace(' ', '')))\\n    # Compare the sorted strings using a dictionary to ensure each character occurs exactly once in both strings\\n    if len(s1) != len(s2):\\n        return False\\n    counter = collections.Counter(s1)\\n    for char, count in counter.items():\\n        if count != s2.count(char):\\n            return False\\n    return True\",\n     \"tests\": [\"assert are_anagrams('Listen', 'Silent') == True\", \"assert are_anagrams('Madam', 'Damn') == True\", \"assert are_anagrams('hello world', 'world hello') == True\", \"assert are_anagrams('racecar', 'No \\'x\\' in Nixon') == False\"]\n   }"