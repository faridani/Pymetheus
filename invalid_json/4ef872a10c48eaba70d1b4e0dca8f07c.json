" {\n    \"title\": \"'Anagram Detection (Hard)'\",\n    \"description\": \"An anagram is a word or phrase that is formed by rearranging the letters of another word or phrase, usually using all the original letters exactly once. Write a function `find_anagrams` that takes a list of words as input and returns a dictionary where the keys are the original words and the values are the lists of anagrams found.\\n\\n#### Function Signature\\n```python\\ndef find_anagrams(words: List[str]) -> Dict[str, List[str]]:\\n```\\n\\n#### Input\\n- `words` (List[str]): A list of strings containing words.\\n\\n#### Output\\n- Returns a dictionary where the keys are the original words and the values are the lists of anagrams found. For example, if the input is `['listen', 'silent', 'enlist', 'lined', 'intense']`, the output would be: `{'listen': ['enlist'], 'silent': [], 'enlist': ['listen'], 'lined': [], 'intense': []}\\n\",\n    \"code\": \"from collections import Counter\\n\\ndef find_anagrams(words: List[str]) -> Dict[str, List[str]]:\\n    # Create a counter for each word\\n    count_dict = Counter(sum([c for c in w if c.isalpha()], '') for w in words)\\n    \\n    # Initialize an empty dictionary to store the results\\n    result = {\\n        w: [w for w in words if count_dict[sum(c for c in w if c.isalpha())] == 1]\\n        for w in words\\n    }\\n    \\n    # Iterate through the counter dictionary and add anagrams to their respective lists\\n    for word, counts in count_dict.items():\\n        for word2 in result:\\n            if sum(count_dict[c] for c in word2 if c in word) == len(word):\\n                result[word2].append(word)\\n    \\n    return result\",\n    \"tests\": [\n        'assert find_anagrams([\"listen\", \"silent\", \"enlist\", \"lined\", \"intense\"]) == {\"listen\": [\"enlist\"], \"silent\": [], \"enlist\": [\"listen\"], \"lined\": [], \"intense\": []}',\n        'assert find_anagrams([\"hello\", \"olleh\", \"world\", \"dlrow\"]) == {\"hello\": [\"olleh\"], \"world\": [\"dlrow\"]}',\n        'assert find_anagrams([\"cars\", \"racecar\", \"actors\", \"rotorca\"]) == {\"cars\": [], \"racecar\": [\"racecar\"], \"actors\": [\"rotorca\"], \"rotorca\": [\"actors\"]}'\n    ]\n}"