"{'title': 'Shortest Path Between Two Points in a Grid', 'description': 'Write a function `shortest_path` that finds the shortest path between two points in a grid. The grid is represented as a 2D list of integers, where each integer represents the height of a cell. The function should return the minimum cost to move from the top-left cell to the bottom-right cell.\\n\\n#### Function Signature\\n```python\\ndef shortest_path(grid: list[list[int]]) -> int:\\n```\\n\\n#### Input\\n- `grid` (list[list[int]]): A 2D list of integers representing the grid heights. The grid is guaranteed to be rectangular and non-empty.\\n\\n#### Output\\n- Returns the minimum cost to move from the top-left cell to the bottom-right cell.\\n', 'code': \"def shortest_path(grid: list[list[int]]) -> int:\\n    rows, cols = len(grid), len(grid[0])\\n    dp = [[0] * cols for _ in range(rows)]\\n\\n    # Initialize the first row and column of the DP table\\n    dp[0][0] = grid[0][0]\\n    for i in range(1, rows):\\n        dp[i][0] = dp[i-1][0] + grid[i][0]\\n    for j in range(1, cols):\\n        dp[0][j] = dp[0][j-1] + grid[0][j]\\n\\n    # Fill the rest of the DP table\\n    for i in range(1, rows):\\n        for j in range(1, cols):\\n            dp[i][j] = min(dp[i-1][j], dp[i][j-1]) + grid[i][j]\\n\\n    return dp[rows-1][cols-1]\", 'tests': ['assert shortest_path([[1, 3, 1]]) == 4', 'assert shortest_path([[1, 2, 3], [4, 5, 6], [7, 8, 9]]) == 15']}"