"Here is a new Python coding question for you:\n\n```\n{\n    \"title\": \"Maximum Sum of Non-Adjacent Elements (Hard)\",\n    \"description\": \"Given an array `nums` containing `n` integers, find the maximum sum of non-adjacent elements in the array. A non-adjacent element is an element that is not next to another chosen element.\\n\\n#### Function Signature\\n```python\\ndef max_sum_of_non_adjacent_elements(nums: list[int]) -> int:\\n```\\n\\n#### Input\\n- `nums` (list[int]): A list of integers, where each integer represents the value of a non-adjacent element.\\n\\n#### Output\\n- Returns the maximum sum of non-adjacent elements in the input array.\\n\",\n    \"code\": \"\"\"\ndef max_sum_of_non_adjacent_elements(nums: list[int]) -> int:\n    if not nums:\n        return 0\n    if len(nums) <= 2:\n        return max(0, max(nums))\n\n    dp = [0] * (len(nums) + 1)\n    dp[0] = 0\n    dp[1] = max(0, nums[0])\n    for i in range(2, len(nums) + 1):\n        dp[i] = max(dp[i-1], dp[i-2] + nums[i-1])\n\n    return dp[-1]\n\"\"\",\n    \"tests\": [\n        \"assert max_sum_of_non_adjacent_elements([2,7,9,3,1]) == 12\",\n        \"assert max_sum_of_non_adjacent_elements([-5,-3,5,0,9,7,4,2,1,-2]) == 18\",\n        \"assert max_sum_of_non_adjacent_elements([1, 2]) == 2\",\n        \"assert max_sum_of_non_adjacent_elements([]) == 0\"\n    ]\n}\n```"