" {\n       \"title\": \"Hard: Longest Increasing Subsequence\",\n       \"description\": \"Given an integer array nums, find the length of the longest strictly increasing subsequence.\\n\\n#### Function Signature\\n```python\\ndef longest_increasing_subsequence(nums: List[int]) -> int:\\n```\\n\\n#### Input\\n- `nums` (List[int]): A list of integers.\\n\\n#### Output\\n- Returns the length of the longest strictly increasing subsequence in nums.\\n\",\n       \"code\": \"\"\"from typing import List\n\ndef longest_increasing_subsequence(nums: List[int]) -> int:\n    if not nums:\n        return 0\n\n    dp = [1] * len(nums)\n    for i in range(len(nums)):\n        for j in range(i):\n            if nums[i] > nums[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n\n    return max(dp)\"\"\",\n       \"tests\": ['assert longest_increasing_subsequence([10,9,2,5,3,7,101,18]) == 4', 'assert longest_increasing_subsequence([0,1,0,3,2,3]) == 4', 'assert longest_increasing_subsequence([7,7,7,7,7,7,7]) == 1']\n   }"