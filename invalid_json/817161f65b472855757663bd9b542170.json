"Here's the new Python coding question:\n\n{\"title\": \"Easy: Validating Sudoku Grid\", \n\"description\": \"Write a function `is_valid_sudoku` that takes a list of lists representing a 9x9 Sudoku grid as input. The function should return `True` if the input is a valid Sudoku puzzle, and `False` otherwise.\\n\\n#### Function Signature\\n```python\\ndef is_valid_sudoku(grid: list[list[int]]) -> bool:\\n```\\n\\n#### Input\\n- `grid` (list of lists): A 9x9 grid representing a Sudoku puzzle. Each cell contains an integer from 0 to 9, or 0 if the cell is empty.\\n\\n#### Output\\n- Returns `True` if the input grid is valid, and `False` otherwise.\\n\", \n\"code\": \"\"\"\nimport copy\n\ndef is_valid_sudoku(grid: list[list[int]]) -> bool:\n    # Check rows\n    for row in grid:\n        seen = set()\n        for num in row:\n            if num == 0 or (num != 0 and str(num) in seen):\n                return False\n            seen.add(str(num))\n\n    # Check columns\n    for col_idx in range(len(grid[0])):\n        seen = set()\n        for row in grid:\n            num = row[col_idx]\n            if num == 0 or (num != 0 and str(num) in seen):\n                return False\n            seen.add(str(num))\n\n    # Check boxes\n    box_size = int(len(grid)**0.5)\n    for i in range(0, len(grid), box_size):\n        for j in range(0, len(grid[0]), box_size):\n            seen = set()\n            for k in range(box_size):\n                for num in grid[i + k][j:j+box_size]:\n                    if num == 0 or (num != 0 and str(num) in seen):\n                        return False\n                    seen.add(str(num))\n\n    return True\n\n\"\"\", \n\"tests\": [\"assert is_valid_sudoku([[], [], [1, 2, 3], [4, 5, 6], [7, 8, 9]]) == True\",\n          \"assert is_valid_sudoku([[0, 1, 2], [3, 4, 0], [6, 0, 9]]) == False\",\n          \"assert is_valid_sudoku([[], [], [1, 2, 3], [4, 5, 6], [7, 8, 10]]) == False\",\n          \"assert is_valid_sudoku([[1, 2, 3], [0, 5, 0], [9, 8, 7]]) == True\"]}"