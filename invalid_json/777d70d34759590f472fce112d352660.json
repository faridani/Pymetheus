"Here is a new Python coding question:\n\n{\"title\": \"Maximum Sum of Non-Adjacent Elements\", \"description\": \"Given a list of integers, find the maximum sum that can be obtained by selecting some elements and not selecting any adjacent elements. For example, given the list [2, 7, 9, 3, 1], the maximum sum is 12, which can be obtained by selecting 2, 9, and 1. Write a function `max_sum` that solves this problem.\\n\\n#### Function Signature\\n```python\\ndef max_sum(arr: list[int]) -> int:\\n```\\n\\n#### Input\\n- `arr` (list[int]): A list of integers.\\n\\n#### Output\\n- Returns the maximum sum that can be obtained by selecting some elements and not selecting any adjacent elements.\", \"code\": \"\nimport functools\n\ndef max_sum(arr: list[int]) -> int:\n    if len(arr) <= 2:\n        return max(0, max(arr))\n\n    @functools.lru_cache(None)\n    def dp(i):\n        if i < 0:\n            return 0\n        if i == 0:\n            return arr[0]\n        if i == 1:\n            return max(arr[0], arr[1])\n        return max(dp(i-1), dp(i-2) + arr[i])\n\n    return dp(len(arr)-1)\n\", \"tests\": [\"assert max_sum([2, 7, 9, 3, 1]) == 12\", \"assert max_sum([5, 3, 2, 8, 4, 6]) == 14\", \"assert max_sum([1, 2, 3]) == 4\", \"assert max_sum([]) == 0\"]}"