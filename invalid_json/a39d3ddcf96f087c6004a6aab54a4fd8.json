"Here is an insanely difficult Python coding question for you:\n\n{\n\"title\": \"Sudoku Solver (Hard)\",\n\"description\": \"Write a function `solve_sudoku` that takes a 2D list of integers as input, representing a partially filled Sudoku grid. The function should return the completed grid if it's possible to solve it, or `None` otherwise.\\n\\n#### Function Signature\\n```python\\ndef solve_sudoku(grid: List[List[int]]) -> List[List[int]] | None:\\n```\\n\\n#### Input\\n- `grid` (List[List[int]]): A 2D list of integers representing a partially filled Sudoku grid. The grid is guaranteed to be square and have size between 4x4 and 9x9.\\n\\n#### Output\\n- Returns the completed grid if it's possible to solve it, or `None` otherwise.\\n\",\n\"code\": \"\"\"\nimport itertools\nfrom typing import List\n\ndef solve_sudoku(grid: List[List[int]]) -> List[List[int]] | None:\n    def is_valid_value(row: int, col: int, value: int) -> bool:\n        for i in range(9):\n            if grid[row][i] == value or grid[i][col] == value:\n                return False\n        box_row = row // 3 * 3\n        box_col = col // 3 * 3\n        for i in range(3):\n            for j in range(3):\n                if grid[box_row + i][box_col + j] == value:\n                    return False\n        return True\n\n    def solve():\n        for row in range(len(grid)):\n            for col in range(len(grid[row])):\n                if grid[row][col] == 0:\n                    for value in itertools.count(1):\n                        if is_valid_value(row, col, value):\n                            grid[row][col] = value\n                            if solve():\n                                return True\n                            else:\n                                grid[row][col] = 0\n                    return False\n        return True\n\n    if not solve():\n        return None\n    return grid\n\"\"\",\n\"tests\": [\n    \"assert solve_sudoku([[5,3,0,0,7,0,0,0,0], [6,0,0,1,9,5,0,0,0], [0,9,8,0,0,0,0,6,0], [1,0,0,0,5,0,0,3,4], [0,5,0,0,0,7,9,0,0], [0,0,0,4,3,0,0,1,0], [0,9,8,0,0,6,3,0,0], [0,0,0,1,2,0,0,8,5], [0,0,0,8,5,0,0,4,0]]) == [[5, 3, 4, 6, 7, 8, 9, 1, 2], [6, 7, 2, 1, 9, 5, 3, 4, 8], [1, 9, 8, 3, 4, 2, 5, 6, 7], [4, 5, 3, 8, 1, 6, 7, 2, 9], [7, 6, 1, 9, 5, 7, 9, 3, 4], [8, 9, 4, 4, 3, 1, 6, 7, 2], [9, 7, 7, 5, 6, 3, 1, 8, 5], [4, 3, 5, 2, 8, 1, 4, 9, 6], [2, 1, 6, 7, 4, 5, 3, 3, 9]]\",\n    \"assert solve_sudoku([[0,0,0,0,0,0,0,0,0]]) == [[1,2,3,4,5,6,7,8,9]]\"\n]\n}\n\nPlease note that the difficulty level of this question is indeed hard."