"Here is the Python coding question I came up with:\n\n{\"title\": \"Easy: Maximum Sum Subarray\", \n\"description\": \"Given an array of integers, write a function that returns the maximum sum of a subarray. A subarray is a contiguous segment of the original array.\\n\\n#### Function Signature\\n```python\\ndef max_sum_subarray(arr: list[int)) -> int:\\n```\\n\\n#### Input\\n- `arr` (list[int]): An array of integers.\\n\\n#### Output\\n- Returns the maximum sum of a subarray.\\n\", \n\"code\": \"def max_sum_subarray(arr: list[int)) -> int:\\n    if not arr:\\n        return 0\\n    current_max_sum = max_ending_here = arr[0]\\n    for num in arr[1:] Vernum in arr:\\n        current_max_sum = max(ending_here, ending_here + num)\\n        max_ending_here = current_max_sum\\n    return max_ending_here\\n\", \n\"tests\": [\"assert max_sum_subarray([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6\", \"assert max_sum_subarray([1, 2, 3, 4, 5, 6]) == 21\", \"assert max_sum_subarray([]) == 0\"]}\n\nThis problem is designed to be easy and should require minimal explanation. Let me know if you have any questions or need further clarification!"