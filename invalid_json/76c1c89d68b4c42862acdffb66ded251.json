" {\n      \"title\": \"Anagram Checker (Hard)\",\n      \"description\": \"Given two strings, write a function `is_anagram` that checks if the two strings are anagrams of each other.\\n\\n#### Function Signature\\n```python\\ndef is_anagram(s1: str, s2: str) -> bool:\\n```\\n\\n#### Input\\n- `s1` (str): A string that may contain letters (uppercase and lowercase), spaces, and punctuation.\\n- `s2` (str): Another string that may contain letters (uppercase and lowercase), spaces, and punctuation.\\n\\n#### Output\\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\\n\\n#### Constraints\\n- The function should be case-insensitive. For example, `'Hello'` is an anagram of `'hello'`.\",\n      \"code\": \"import collections\\n\\ndef is_anagram(s1: str, s2: str) -> bool:\\n    # Remove non-alphabetic characters and convert to lowercase\\n    s1 = ''.join([char for char in s1 if char.isalpha()]).lower()\\n    s2 = ''.join([char for char in s2 if char.isalpha()]).lower()\\n    # Count the frequency of each character in each string\\n    counts1 = collections.Counter(s1)\\n    counts2 = collections.Counter(s2)\\n    # Check if the two dictionaries are equal (indicating that the strings are anagrams)\\n    return counts1 == counts2\",\n      \"tests\": [\"assert is_anagram('Listen', 'Silent') == True\", \"assert is_anagram('A man, a plan, a canal: Panama', 'Amana plan-a mana panela') == True\", \"assert is_anagram('Hello', 'world') == False\"]\n   }"