"```json\n{\n    \"title\": \"Flood Fill Hard\",\n    \"description\": \"Imagine you are given a 2D grid where each cell can contain a number from 0 to 4. You want to flood fill the cells with value 1 inside a rectangle that is defined by four points (x1, y1), (x1, y2), (x2, y1) and (x2, y2). The value of each cell will be replaced by the values from the top-left corner of the rectangle. If there are any cells with value 4 in the rectangle, replace them with 0 instead.\\n\\n#### Function Signature\\n```python\\ndef flood_fill(grid: list[list[int]], x1: int, y1: int, x2: int, y2: int) -> None:\\n```\\n\\n#### Input\\n- `grid` (list[list[int]]): A 2D grid where each cell can contain a number from 0 to 4.\\n- `x1` (int), `y1` (int), `x2` (int), `y2` (int):\\n    The four points that define the rectangle for flood filling. `x1` and `y1` are the top-left corner, `x2` and `y2` are the bottom-right corner.\\n\\n#### Output\\n- Modify the input grid in-place such that all cells inside the rectangle with value 4 become 0, and all other cells inside the rectangle get a flood fill from the top-left cell's value.\",\n    \"code\": \"\nimport copy\n\ndef flood_fill(grid: list[list[int]], x1: int, y1: int, x2: int, y2: int) -> None:\n    grid_copy = copy.deepcopy(grid)\n    \n    # Find the minimum and maximum values in the grid\n    min_val = float('inf')\n    max_val = float('-inf')\n    \n    for row in grid_copy:\n        for val in row:\n            if 0 <= val <= 4:\n                min_val = min(min_val, val)\n                max_val = max(max_val, val)\n\n    # Replace all cells with value 4 by the minimum value\n    for i in range(len(grid)):\n        for j in range(len(grid[0])):\n            if grid[i][j] == 4 and (i < x1 or j < y1 or i > x2 or j > y2):\n                grid[i][j] = min_val\n                \n    # Flood fill the cells inside the rectangle with value from top-left cell\n    for i in range(x1, x2+1):\n        for j in range(y1, y2+1):\n            grid[i][j] = grid_copy[x1][y1]\n\",\n    \"tests\": [\n        \"assert flood_fill([[1, 1, 1, 4], [1, 0, 1, 4], [1, 0, 1, 4], [1, 4, 4, 4]], 3, 2, 6, 7) == None\",\n        \"assert flood_fill([[0, 0, 0, 4], [0, 0, 0, 4], [0, 0, 0, 4], [0, 4, 4, 4]], 2, 2, 5, 6) == None\",\n        \"assert flood_fill([[1, 3, 8, 9], [10, 11, 12, 13], [14, 15, 16, 17], [18, 19, 20, 21]], 0, 0, 2, 2) == None\"\n    ]\n}\n```"