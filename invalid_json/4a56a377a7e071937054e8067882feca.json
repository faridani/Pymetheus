"Here is your super hard Python coding question:\n\n{\"title\": \"Hard: Maximal Sum of Non-Adjacent Elements in a List\", \n\"description\": \"Given a list of integers, write a function that returns the maximum sum of non-adjacent elements. For example, given the list [2, 7, 9, 3, 1], the function should return 12 because 2 + 9 is the maximum sum of non-adjacent elements.\\n\\n#### Function Signature\\n```python\\ndef maximal_non_adjacent_sum(lst: list[int]) -> int:\\n```\\n\\n#### Input\\n- `lst` (list[int]): A list of integers.\\n\\n#### Output\\n- Returns the maximum sum of non-adjacent elements in the input list.\\n\", \n\"code\": \"def maximal_non_adjacent_sum(lst: list[int]) -> int:\\n    if len(lst) <= 2:\\n        return max(0, max(lst))\\n    dp = [0] * (len(lst) + 1)\\n    dp[1] = max(0, lst[0])\\n    for i in range(2, len(lst) + 1):\\n        dp[i] = max(dp[i-1], dp[i-2] + lst[i-1])\\n    return dp[-1]\\n\", \n\"tests\": [\"assert maximal_non_adjacent_sum([2, 7, 9, 3, 1]) == 12\", \"assert maximal_non_adjacent_sum([5]) == 5\", \"assert maximal_non_adjacent_sum([-2, -3, 1, -2]) == 1\"]}"