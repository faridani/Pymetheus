"Here is a Python coding challenge for you, presented in the format that you specified:\n\n{'title': 'Reverse a Linked List (Medium)', \n 'description': 'Given the head of a singly linked list, reverse the list and return the reversed list.\\n\\n#### Function Signature\\n```python\\ndef reverse_linked_list(head) -> ListNode:\\n```\\n\\n#### Input\\n- `head` (ListNode): The head of a singly linked list.\\n\\n#### Output\\n- Returns (ListNode): The head of the reversed linked list.\\n\\n#### Hint\\nYou may want to use a recursive function for this problem.\\n', \n 'code': '''python\nclass ListNode:\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = next\n\ndef reverse_linked_list(head: ListNode) -> ListNode:\\n    # Base case: If the head is None, return None\\n    if not head:\\n        return None\\n\\n    # Recursive case: Reverse the rest of the list and add the current node to the beginning\\n    new_head = reverse_linked_list(head.next)\\n    new_head.next = head\\n    head.next = None\\n    return new_head\\n''', \n 'tests': ['assert reverse_linked_list(ListNode(1, ListNode(2, ListNode(3)))).val == 3', 'assert reverse_linked_list(ListNode(1, ListNode(2, ListNode(3, ListNode(4))))) == 4', 'assert reverse_linked_list(None) is None']}"