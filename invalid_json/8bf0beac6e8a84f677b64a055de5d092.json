" {\n     \"title\": \"'Anagram Detector (Hard Level)',\n     \"description\": 'Write a function `anagram_detector` that takes two strings as input and checks if they are anagrams of each other. Anagrams are words or phrases that contain the same letters, but in a different order.\\n\\n#### Function Signature\\n```python\\ndef anagram_detector(str1: str, str2: str) -> bool:\\n```\\n\\n#### Input\\n- `str1` (str): A string containing lowercase letters only.\\n- `str2` (str): Another string containing lowercase letters only.\\n\\n#### Output\\n- Returns `True` if the two input strings are anagrams, `False` otherwise.\\n',\n     \"code\": \"def anagram_detector(str1: str, str2: str) -> bool:\\n    # Ensure both strings have the same length\\n    if len(str1) != len(str2):\\n        return False\\n    \\n    # Create a dictionary to store character counts for each string\\n    char_counts = {char: 0 for char in string.ascii_lowercase}\\n    \\n    # Iterate through characters of the first string and increment their count in the dictionary\\n    for char in str1:\\n        if char in char_counts:\\n            char_counts[char] += 1\\n        else:\\n            continue\\n    \\n    # Iterate through characters of the second string and decrement their count in the dictionary\\n    for char in str2:\\n        if char in char_counts:\\n            char_counts[char] -= 1\\n        else:\\n            return False\\n    \\n    # If all characters have a count of 0, then the two strings are anagrams\\n    for _ in char_counts.values():\\n        if _ != 0:\\n            return False\\n    return True\",\n     \"tests\": ['assert anagram_detector(\"listen\", \"silent\") == True', 'assert anagram_detector(\"python\", \"typhon\") == True', 'assert anagram_detector(\"hello\", \"world\") == False']\n   }"