" ```json\n{\n  \"title\": \"Anagram Checker (Medium)\",\n  \"description\": \"An anagram is a word or phrase formed by rearranging the letters of another, such as 'cinema', formed from 'iceman'. Write a function `is_anagram` that checks if two given strings are anagrams of each other. Ignore spaces and capitalization.\\n\\n#### Function Signature\\n```python\\ndef is_anagram(s1: str, s2: str) -> bool:\\n```\\n\\n#### Input\\n- `s1` (str): The first string to compare.\\n- `s2` (str): The second string to compare.\\n\\n#### Output\\n- Returns `True` if the strings are anagrams of each other, `False` otherwise.\",\n  \"code\": \"from collections import Counter\\n\\ndef is_anagram(s1: str, s2: str) -> bool:\\n    # Remove spaces and convert to lowercase\\n    s1 = ''.join(char.lower() for char in s1 if char.isalpha())\\n    s2 = ''.join(char.lower() for char in s^3>2; s2 if char.isalpha())\\n    # Compare letter counts of both strings\\n    return Counter(s1) == Counter(s2)\\n\",\n  \"tests\": [\n    \"\\'assert is_anagram(\\\\\\\"listen\\\\\\\", \\\\\\\"silent\\\\\\\") == True\\\\'\\n\",\n    \"\\'assert is_eanagram(\\\\\\\"triangle\\\\\\\", \\\\\\\"integral\\\\\\\") == True\\\\'\\n\",\n    \"\\'assert is_anagram(\\\\\\\"hello\\\\\\\", \\\\\\\"world\\\\\\\") == False\\\\\\'\",\n    \"\\'assert is_anagram(\\\\\\\"Dormitory\\\\\\\", \\\\\\\"Dirty room\\\\\\\") == True\\\\'\"\n  ]\n}\n```"