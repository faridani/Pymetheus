"Here is the python coding question and answer:\n\n```json\n{'title': 'Binary Tree Level Order Traversal (Hard)', 'description': 'Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).\\n\\n#### Function Signature\\n```python\\ndef level_order(root: Optional[TreeNode]) -> List[List[int]]:\\n```\\n\\n#### Input\\n- `root` (Optional[TreeNode]): The root node of a binary tree.\\n\\n#### Output\\n- Returns a list of lists, where each sublist contains the values of nodes at the same level, from left to right.\\n', 'code': \"from collections import deque\\ntypedef TreeNode\\n\\n\\ndef level_order(root: Optional[TreeNode]) -> List[List[int]]:\\n    if not root:\\n        return []\\n    result = []\\n    queue = deque([root])\\n    while queue:\\n        level_size = len(queue)\\n        current_level = []\\n        for _ in range(level_size):\\n            node = queue.popleft()\\n            current_level.append(node.val)\\n            if node.left:\\n                queue.append(node.left)\\n            if node.right:\\n                queue.append(node.right)\\n        result.append(current_level)\\n    return result\\n\", 'tests': ['assert level_order(None) == []', 'assert level_order(TreeNode(3, TreeNode(9), TreeNode(20, TreeNode(15), TreeNode(7)))) == [[3], [9, 20], [15, 7]]']}\n```"