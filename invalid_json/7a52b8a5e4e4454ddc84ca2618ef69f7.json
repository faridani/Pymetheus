"Here is a new Python coding question for you:\n\n{\"title\": \"Counting Islands\", \"description\": \"Given an 8x8 grid of integers representing the values on a chessboard, write a function that counts the number of islands. An island is defined as a group of adjacent cells (horizontally, vertically, or diagonally) with a value greater than zero.\\n\\n#### Function Signature\\n```python\\ndef count_islands(grid: list[list[int]]) -> int:\\n```\\n\\n#### Input\\n- `grid` (list[list[int]]): An 8x8 grid of integers representing the values on a chessboard, where 0 represents an empty cell and any positive integer represents a cell with a value greater than zero.\\n\\n#### Output\\n- Returns the number of islands in the given grid.\", \"code\": \"def count_islands(grid: list[list[int]]) -> int:\\n    if not grid or not grid[0]:\\n        return 0\\n    visited = [[False for _ in range(8)] for _ in range(8)]\\n    def dfs(r, c):\\n        if r < 0 or c < 0 or r >= 8 or c >= 8 or visited[r][c] or grid[r][c] == 0:\\n            return\\n        visited[r][c] = True\\n        for dr, dc in [(-1, -1), (-1, 0), (-1, 1), (0, -1), (0, 1), (1, -1), (1, 0), (1, 1)]:\\n            nr, nc = r + dr, c + dc\\n            if 0 <= nr < 8 and 0 <= nc < 8:\\n                dfs(nr, nc)\\n    count = 0\\n    for i in range(8):\\n        for j in range(8):\\n            if grid[i][j] > 0 and not visited[i][j]:\\n                dfs(i, j)\\n                count += 1\\n    return count\", \"tests\": [\"assert count_islands([[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 2, 3, 0, 0, 0, 0], [0, 0, 0, 4, 5, 6, 0, 0], [0, 7, 8, 9, 10, 11, 0, 0], [0, 12, 13, 14, 15, 16, 17, 0], [0, 18, 19, 20, 21, 22, 23, 0]]) == 4\", \"assert count_islands([[1, 2, 3, 4, 5, 6, 7, 8], [9, 10, 11, 12, 13, 14, 15, 16], [17, 18, 19, 20, 21, 22, 23, 24], [25, 26, 27, 28, 29, 30, 31, 32], [33, 34, 35, 36, 37, 38, 39, 40], [41, 42, 43, 44, 45, 46, 47, 48], [49, 50, 51, 52, 53, 54, 55, 56], [57, 58, 59, 60, 61, 62, 63, 64]]) == 1\", \"assert count_islands([[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 2, 3, 4, 5], [0, 6, 7, 8, 9, 10, 11, 12], [13, 14, 15, 16, 17, 18, 19, 20], [21, 22, 23, 24, 25, 26, 27, 28], [29, 30, 31, 32, 33, 34, 35, 36], [37, 38, 39, 40, 41, 42, 43, 44]]) == 1\", \"assert count_islands([[0 for _ in range(8)] for _ in range(8)]) == 0\"]}\n\nThis problem is of hard difficulty level."