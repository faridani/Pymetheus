"Here's a new question:\n\n{\"title\": \"Hard: Prime Number Sieve\", \"description\": \"Write a function `get_primes` that takes an integer `n` as input and returns a list of all prime numbers less than or equal to `n`. The function should use the Sieve of Eratosthenes algorithm.\\n\\n#### Function Signature\\n```python\\ndef get_primes(n: int) -> list[int]:\\n```\\n\\n#### Input\\n- `n` (int): An integer greater than 1.\\n\\n#### Output\\n- Returns a list of prime numbers less than or equal to `n`.\", \"code\": \"import math\n\ndef get_primes(n: int) -> list[int]:\n    primes = []\n    sieve = [True] * (n + 1)\n    for i in range(2, math.isqrt(n) + 1):\n        if sieve[i]:\n            for j in range(i ** 2, n + 1, i):\n                sieve[j] = False\n    for i in range(2, n + 1):\n        if sieve[i]:\n            primes.append(i)\n    return primes\", \"tests\": [\"assert get_primes(30) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\", \"assert get_primes(50) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47]\", \"assert get_primes(100) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\", \"assert get_primes(1) == []\", \"assert get_primes(0) == []\"]}"