" {\n    \"title\": \"Anagram Detector (Hard)\",\n    \"description\": \"Write a function `anagram_checker` that checks if two given strings are anagrams of each other. Anagram is a word or phrase formed by rearranging the letters of another word or phrase, typically using all the original letters exactly once.\\n\\n#### Function Signature\\n```python\\ndef anagram_checker(str1: str, str2: str) -> bool:\\n```\\n\\n#### Input\\n- `str1` (str): A string that may contain letters (no numbers, spaces or punctuation).\\n- `str2` (str): Another string that may contain letters (no numbers, spaces or punctuation).\\n\\n#### Output\\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\\n\",\n    \"code\": \"def anagram_checker(str1: str, str2: str) -> bool:\\n    # Remove duplicates and sort the strings\\n    sorted_str1 = sorted(list(set(str1.lower())))\\n    sorted_str2 = sorted(list(set(str2.lower())))\\n    \\n    # Check if both lists are equal in length and the corresponding elements are the same\\n    return len(sorted_str1) == len(sorted_str2) and sorted_str1 == sorted_str2\",\n    \"tests\": [\n        'assert anagram_checker(\"listen\", \"silent\") == True',\n        'assert anagram_checker(\"actinium\", \"nicerma\") == True',\n        'assert anagram_checker(\"python\", \"typhon\") == False',\n        'assert anagram_checker(\"hello\", \"world\") == False'\n    ]\n}"