"\nHere is a difficult Python coding question for you:\n\nTitle: Reverse Linked List II\n\nDescription: Given a singly linked list, reverse the order of the nodes without using any auxiliary data structure. The input list will only contain integers.\n\nFunction Signature: `reverse_list(head: ListNode) -> None`\n\nInput: A singly linked list represented as a ListNode object.\n\nOutput: Reverse the order of the nodes in the input list without using any auxiliary data structure.\n\nHere is the function code that solves the problem:\n```python\ndef reverse_list(head):\n    current = head\n    previous = None\n    while current is not None:\n        next = current.next\n        current.next = previous\n        previous = current\n        current = next\n    return previous\n```\nAnd here are the test cases for the function:\n\nTests:\n['assert reverse_list(ListNode(1, ListNode(2, ListNode(3))) == ListNode(3, ListNode(2, ListNode(1))', 'assert reverse_list(ListNode(1, ListNode(2)) == ListNode(2, ListNode(1))', 'assert reverse_list(ListNode()) == ListNode()']\n\nNote: The input list will only contain integers."