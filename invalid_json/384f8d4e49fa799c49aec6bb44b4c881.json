"Here's a hard python coding question for you:\n\n```\n{\n    \"title\": \"Maximum Sum Increasing Subsequence\",\n    \"description\": \"Write a function `max_sum_increasing_subsequence` that takes as input a list of integers and returns the maximum sum of an increasing subsequence. An increasing subsequence is a subsequence where each element is greater than or equal to the previous one.\\n\\n#### Function Signature\\n```python\\ndef max_sum_increasing_subsequence(arr: list[int]) -> int:\\n```\\n\\n#### Input\\n- `arr` (list[int]): A list of integers.\\n\\n#### Output\\n- Returns the maximum sum of an increasing subsequence.\\n\",\n    \"code\": \"\"\"\nimport math\n\ndef max_sum_increasing_subsequence(arr: list[int]) -> int:\n    n = len(arr)\n    dp = [[0] * 2 for _ in range(n)]\n    \n    for i in range(n):\n        for j in range(2):\n            if i == 0:\n                dp[i][j] = arr[i]\n            else:\n                dp[i][j] = max(dp[i-1][0], dp[i-1][1]) + arr[i]\n    \n    return max(max(row) for row in dp)\n    \"\"\",\n    \"tests\": [\"assert max_sum_increasing_subsequence([4, 2, 3, 6, 5, 4]) == 14\", \n              \"assert max_sum_increasing_subsequence([-1, -2, 3, 5, 7]) == 12\", \n              \"assert max_sum_increasing_subsequence([]) == 0\"]\n}\n```\nThis question is quite challenging because it involves dynamic programming and requires a good understanding of the problem domain."