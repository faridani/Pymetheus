" {\n    \"title\": \"'Anagram Finder (Hard)'\",\n    \"description\": \"Write a function `find_anagrams` that takes a list of words and finds all the anagrams within the list. An anagram is a word or phrase that contains the same letters as another word or phrase but in a different order.\\n\\n#### Function Signature\\n```python\\ndef find_anagrams(words: List[str]) -> Dict[str, List[str]]:\\n```\\n\\n#### Input\\n- `words` (List[str]): A list of words containing only letters in lowercase.\\n\\n#### Output\\n- Returns a dictionary where the keys are anagrams and their corresponding values are lists of words that share the same anagram.\\n\",\n    \"code\": \"from collections import Counter, defaultdict\\n\\ndef find_anagrams(words: List[str]) -> Dict[str, List[str]]:\\n    # Create a dictionary to store the anagrams and their lists of words\\n    anagrams = defaultdict(list)\\n    \\n    # Iterate through each word in the list\\n    for word in words:\\n        # Count the frequency of each letter in the word\\n        count = Counter(word)\\n        \\n        # Combine the letter frequencies into a single string for the anagram key\\n        anagram_key = ''.join(str(frequency) for frequency in count.elements())\\n        \\n        # Add the current word to the list of words with the corresponding anagram key\\n        anagrams[anagram_key].append(word)\\n    \\n    # Return the dictionary containing the anagrams and their lists of words\\n    return dict(anagrams)\",\n    \"tests\": [\n        'assert find_anagrams([\"listen\", \"silent\", \"enlist\"]) == {\"enlstlsient\", [\"listen\", \"silent\"], [\"enlist\"]}',\n        'assert find_anagrams([\"movie\", \"emotion picture\", \"drama\", \"actress\", \"cinema\"]) == {\"mvieoetnamicledramsaectrass\", [\"movie\", \"emotion picture\", \"drama\"], [\"actress\", \"cinema\"]}'\n    ]\n}"