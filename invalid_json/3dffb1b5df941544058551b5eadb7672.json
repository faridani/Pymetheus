" {\n    \"title\": \"'Number of Occurrences in a List (Medium Level)',\n    \"description\": 'Write a function called `count_occurrences` that takes in a list and returns a dictionary where the keys are the elements in the input list, and the values are the number of times each key appears in the list.\\n\\n#### Function Signature\\n```python\\ndef count_occurrences(lst: List[Any]) -> Dict[Any, int]:\\n```\\n\\n#### Input\\n- `lst` (List[Any]): A list that may contain duplicates and may be of any data type.\\n\\n#### Output\\n- Returns a dictionary where the keys are unique elements in the input list, and the values are the number of times each key appears in the list.\\n',\n    \"code\": \"def count_occurrences(lst: List[Any]) -> Dict[Any, int]:\\n    # Use a dictionary to store the counts\\n    count = {} \\n    # Iterate through the input list\\n    for item in lst:\\n        # If the item is not already in the dictionary, add it with a value of 1\\n        if item not in count:\\n            count[item] = 1\\n        # If the item is already in the dictionary, increment its count by 1\\n        else:\n            count[item] += 1\\n    \\n    # Return the resulting dictionary\\n    return count\",\n    \"tests\": ['assert count_occurrences([1, 2, 3, 2, 5, 2, 6, 7, 8, 9, 5]) == {1: 1, 2: 3, 3: 1, 5: 2, 6: 1, 7: 1, 8: 1, 9: 1}', 'assert count_occurrences([\"apple\", \"banana\", \"orange\", \"apple\"]) == {\"apple\": 2, \"banana\": 1, \"orange\": 1}', 'assert count_occurrences([True, False, True]) == {True: 2, False: 1}']\n   }"