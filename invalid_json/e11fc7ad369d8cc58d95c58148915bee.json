"Here is your Python coding question:\n\n{\n\"title\": \"Maximum Sum of Subarray (Hard)\",\n\"description\": \"Given an integer array `nums`, return the maximum sum of a subarray within the array. A subarray is a contiguous part of an array.\\n\\n#### Function Signature\\n```python\\ndef max_sum_subarray(nums: list[int]) -> int:\\n```\\n\\n#### Input\\n- `nums` (list[int]): An integer array containing at least one element.\\n\\n#### Output\\n- Returns the maximum sum of a subarray within the input array.\\n\",\n\"code\": \"\ndef max_sum_subarray(nums: list[int]) -> int:\n    if not nums:\n        return 0\n    max_sum = current_sum = nums[0]\n    for num in nums[1:]:\n        current_sum = max(num, current_sum + num)\n        max_sum = max(max_sum, current_sum)\n    return max_sum\n\",\n\"tests\": [\n\"assert max_sum_subarray([-2,1,-3,4,-1,2,1,-5,4]) == 6\",\n\"assert max_sum_subarray([1])) == 1\",\n\"assert max_sum_subarray([-1,-2,-3,-4,-5]) == -1\",\n\"assert max_sum_subarray([]) == 0\"\n]\n}\n\nI hope you find this question challenging and interesting!"