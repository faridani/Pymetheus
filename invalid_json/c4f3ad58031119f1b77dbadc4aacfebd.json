"Here is your new Python coding question:\n\n{\"title\": \"Hard: Permutation Checker\", \"description\": \"Write a function that checks if two given lists of integers are permutations of each other. A permutation of one sequence is another sequence containing the same elements, but possibly in a different order.\\n\\n#### Function Signature\\n```\\ndef are_permutations(list1: list[int], list2: list[int]) -> bool:\\n```\\n\\n#### Input\\n- `list1` (list[int]): The first list of integers.\\n- `list2` (list[int]): The second list of integers.\\n\\n#### Output\\n- Returns `True` if the two input lists are permutations of each other, `False` otherwise.\", \"code\": \"import itertools\\n\\ndef are_permutations(list1: list[int], list2: list[int]) -> bool:\\n    return sorted(list1) == sorted(list2)\\n\", \"tests\": [\"assert are_permutations([1, 2, 3], [3, 2, 1]) == True\", \"assert are_permutations([1, 2, 3], [4, 5, 6]) == False\", \"assert are_permutations([], []) == True\", \"assert are_permutations([1, 2], [2, 1]) == True\"]}"