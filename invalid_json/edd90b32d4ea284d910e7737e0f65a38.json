" {\n    \"title\": \"'Check if a given list is a rotated array (Medium)',\n    \"description\": \"A rotated array is an array that has been sorted, but some elements have been shifted to the beginning or end. Write a function `is_rotated_array` that checks if a given list is a rotated array.\\n\\n#### Function Signature\\n```python\\ndef is_rotated_array(arr: List[int]) -> bool:\\n```\\n\\n#### Input\\n- `arr` (List[int]): A sorted list containing only integers.\\n\\n#### Output\\n- Returns `True` if the input list is a rotated array, `False` otherwise.\\n\",\n    \"code\": \"def is_rotated_array(arr: List[int]) -> bool:\\n    # If the first element of the array is greater than the last one, it can't be a rotated array\\n    if arr[0] > arr[-1]: return False\\n    n = len(arr)\\n    # Find the index where the smallest number appears that should be in the end of the array\\n    smallest_index = next((i for i, x in enumerate(arr) if x == min(arr)), None)\\n    # If the smallest index is not found, it can't be a rotated array\\n    if smallest_index is None: return False\\n    # Check if the remaining part of the array is also sorted\\n    return arr[smallest_index:] == sorted(arr[smallest_index:])\",\n    \"tests\": [\"assert is_rotated_array([3, 4, 5, 6, 7, 1]) == True\", \"assert is_rotated_array([3, 4, 5, 6]) == True\", \"assert is_rotated_array([3, 4, 5, 6, 7]) == False\", \"assert is_rotated_array([2, 2, 1]) == False\"]\n   }"