"{\n    \"title\": \"Hard: Roman Numeral to Integer Conversion\",\n    \"description\": \"You are given a string representing a Roman numeral and you need to convert it into its corresponding integer value. The Roman numerals used for this problem are as follows:\\n\\n- I (1)\\n- v (5)\\n- x (10)\\n- l (50)\\n- c (100)\\n- d (500)\\n- m (1000)\\n\\nThe rules to convert a Roman numeral into an integer are as follows:\\n\\n- If the current digit is less than the previous digit, subtract it. Otherwise, add it.\\n- The last two digits will always be subtractive or non-subtractive depending on their position in the string.\\n\\nWrite a function `roman_to_int` that takes a Roman numeral as input and returns its corresponding integer value.\\n\\n#### Function Signature\\n```python\\ndef roman_to_int(s: str) -> int:\\n```\\n\\n#### Input\\n- `s` (str): A string representing a valid Roman numeral.\\n\\n#### Output\\n- Returns an integer representing the equivalent value of the Roman numeral inputted.\\n\",\n    \"code\": \"def roman_to_int(s: str) -> int:\\n    roman_values = {\\'i\\': 1, \\'v\\': 5, \\'x\\': 10, \\'l\\': 50, \\'c\\': 100, \\'d\\': 500, \\'m\\': 1000}\\n    int_val = roman_values[s[-1]]\\n    for i in range(len(s) - 2, -1, -1):\\n        if roman_values[s[i]] < roman_values[s[i + 1]]:\\n            int_val -= roman_values[s[i]]\\n        else:\\n            int_val += roman_values[s[i]]\\n    return int_val\\n\",\n    \"tests\": [\n        \"assert roman_to_int(\\'I\\') == 1\",\n        \"assert roman_to_int(\\'IV\\') == 4\",\n        \"assert roman_to_int(\\'IX\\') == 9\",\n        \"assert roman_to_int(\\'LVIII\\') == 58\",\n        \"assert roman_to_int(\\'MCMXCIV\\') == 1994\"\n    ]\n}"