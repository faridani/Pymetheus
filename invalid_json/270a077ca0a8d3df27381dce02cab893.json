"{'title': 'Longest Arithmetic Subsequence of Given Array', 'description': 'An arithmetic sequence is a sequence of numbers such that the difference between any two successive members is constant.\\n\\n#### Function Signature\\n```python\\ndef longest_arithmetic_subsequence(nums: list[int]) -> int:\\n```\\n\\n#### Input\\n- `nums` (list[int]): A list of integers.\\n\\n#### Output\\n- Returns the length of the longest arithmetic subsequence.\\n', 'code': \"def longest_arithmetic_subsequence(nums: list[int]) -> int:\\n    if not nums:\\n        return 0\\n\\n    n = len(nums)\\n    max_length = 1\\n\\ndp = [[1] * n for _ in range(n)]\\n\\ngap = float('inf')\\n\\nfor i in range(1, n):\\n    for j in range(i):\\n        gap = min(gap, nums[i] - nums[j])\\n        dp[i][j] = max(dp[i-1][j], dp[i][j-1], dp[i-1][j-1] + (nums[i] - nums[j] == gap))\\n\\nreturn max(max(row) for row in dp)\\n\", 'tests': ['assert longest_arithmetic_subsequence([3, 6, 9, 12]) == 4', 'assert longest_arithmetic_subsequence([9, 4, 7, 2, 1]) == 5', 'assert longest_arithmetic_subsequence([]) == 0', 'assert longest_arithmetic_subsequence([1, 3, 5, 7, 9]) == 5']}"