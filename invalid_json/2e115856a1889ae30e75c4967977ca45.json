"Here is the generated problem:\n\n{\n\"title\": \"Maximum Sum of Subarray Easy\",\n\"description\": \"Given an array of integers, find the maximum sum of a subarray (i.e., a contiguous sequence of elements) within that array.\\n\\n#### Function Signature\\n```python\\ndef max_subarray_sum(arr: list[int)) -> int:\\n```\\n\\n#### Input\\n- `arr` (list[int]): A list of integers.\\n\\n#### Output\\n- Returns the maximum sum of a subarray within the input array.\\n\", \n\"code\": \"\"\"\ndef max_subarray_sum(arr: list[int]) -> int:\n    if not arr:\n        return 0\n    \n    current_max = max_so_far = arr[0]\n    \n    for num in arr[1:]:\n        current_max = max(num, current_max + num)\n        max_so_far = max(max_so_far, current_max)\n    \n    return max_so_far\n\"\"\", \n\"tests\": [\n    \"assert max_subarray_sum([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6\",\n    \"assert max_subarray_sum([1]) == 1\",\n    \"assert max_subarray_sum([]) == 0\",\n    \"assert max_subarray_sum([-2, 1]) == 1\"\n]\n}"