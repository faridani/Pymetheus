"Here is a new Python coding question for you:\n\n```json\n{\n    \"title\": \"Hard: Sierpinski Triangle Generator\",\n    \"description\": \"The Sierpinski triangle, also known as the Sierpinski carpet or Sierpinski gasket, is a famous fractal. It can be generated by repeatedly removing triangles from a larger triangle. Write a function `generate_sierpinski_triangle` that takes an integer `n` and returns the Sierpinski triangle of size `n`. The output should be a list of strings representing the rows of the triangle.\\n\\n#### Function Signature\\n```python\\ndef generate_sierpinski_triangle(n: int) -> List[str]:\\n```\\n\\n#### Input\\n- `n` (int): The size of the Sierpinski triangle.\\n\\n#### Output\\n- Returns a list of strings representing the rows of the Sierpinski triangle.\\n\",\n    \"code\": \"\"\"\nimport math\n\ndef generate_sierpinski_triangle(n: int) -> List[str]:\n    if n == 0:\n        return []\n\n    triangle = [[' ' for _ in range(2 ** n)] for _ in range(2 ** n)]\n\n    def draw_triangle(x, y, size):\n        if size <= 0:\n            return\n\n        for i in range(y - (size // 2), y + (size // 2) + 1):\n            for j in range(x - (size // 2), x + (size // 2) + 1):\n                if math.sqrt((i - y) ** 2 + (j - x) ** 2) <= size / 2:\n                    triangle[i][j] = '*'\n\n        draw_triangle(0, 0, size // 2)\n        draw_triangle(x - size // 2, y, size // 2)\n        draw_triangle(x, y - size // 2, size // 2)\n\n    draw_triangle(2 ** n // 2, 2 ** n // 2, 2 ** (n - 1))\n\n    result = []\n    for row in triangle:\n        result.append(''.join(row))\n\n    return result\n    \"\"\",\n    \"tests\": [\n        'assert len(generate_sierpinski_triangle(1)) == 1',\n        'assert len(generate_sierpinski_triangle(2)) == 4',\n        'assert all('' in generate_sierpinski_triangle(3) for _ in range(4))',\n        'assert all('*' not in generate_sierpinski_triangle(0))'\n    ]\n}\n```"