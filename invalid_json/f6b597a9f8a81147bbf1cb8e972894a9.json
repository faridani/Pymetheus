"Here is a new Python coding question:\n\n{\n\"title\": \"Hard: Find the Maximum Sum of Non-Adjacent Elements\",\n\"description\": \"Given a list of integers, write a function that finds the maximum sum of non-adjacent elements. For example, if the input list is [2, 7, 9, 3, 1], the output should be 12 (2 + 9 + 1). If there are multiple such sums, return any one.\\n\\n#### Function Signature\\n```python\\ndef max_sum_non_adjacent(lst: list[int]) -> int:\\n```\\n\\n#### Input\\n- `lst` (list[int]): A list of integers.\\n\\n#### Output\\n- Returns the maximum sum of non-adjacent elements in the input list.\\n\",\n\"code\": \"\"\"\ndef max_sum_non_adjacent(lst: list[int]) -> int:\n    if len(lst) <= 2:\n        return max(lst)\n    \n    incl = lst[0]\n    excl = 0\n    \n    for i in range(1, len(lst)):\n        new_excl = max(incl, excl)\n        incl = excl + lst[i]\n        excl = new_excl\n    \n    return max(incl, excl)\n\"\"\",\n\"tests\": [\n\"assert max_sum_non_adjacent([2, 7, 9, 3, 1]) == 12\",\n\"assert max_sum_non_adjacent([1, 5, 8, 10, 20, 22]) == 30\",\n\"assert max_sum_non_adjacent([-1, -2, 0, 4, 6, 7, 8]) == 11\",\n\"assert max_sum_non_adjacent([]) == 0\"\n]\n}"