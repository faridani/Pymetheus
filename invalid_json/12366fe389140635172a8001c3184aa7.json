"Here's your requested problem:\n\n{\n\"title\": \"Sorting Words by Length (Hard)\",\n\"description\": \"Write a function `sort_by_length` that sorts a list of words based on their lengths. The function should return the sorted list.\\n\\n#### Function Signature\\n```python\\ndef sort_by_length(words: list[str]) -> list[str]:\\n```\\n\\n#### Input\\n- `words` (list[str]): A list of strings.\\n\\n#### Output\\n- Returns a list of strings, sorted by their lengths.\\n\",\n\"code\": \"\"\"\nimport heapq\n\ndef sort_by_length(words: list[str]) -> list[str]:\n    length_to_words = {}\n    for word in words:\n        if len(word) not in length_to_words:\n            length_to_words[len(word)] = []\n        length_to_words[len(word)].append(word)\n\n    sorted_lengths = sorted(length_to_words.keys())\n    result = []\n\n    for length in sorted_lengths:\n        for word in length_to_words[length]:\n            result.append(word)\n            if len(result) == 10:  # Stop after the first 10 words\n                return result\n\n    return result\n\"\"\",\n\"tests\": [\n    \"assert sort_by_length(['apple', 'banana', 'cherry']) == ['apple', 'banana', 'cherry']\",\n    \"assert sort_by_length(['short', 'longer', 'longest']) == ['short', 'longer', 'longest']\",\n    \"assert sort_by_length(['hi', 'hello', 'world']) == ['hi', 'hello', 'world']\"\n]\n}"