"Here's a new Python coding question:\n\n{\n\"title\": \"Easy: Number of Islands\",\n\"description\": \"Given an `m x n` grid filled with water and land, find the number of islands. An island is a group of connected cells (horizontally or vertically) where every cell is either water or land.\\n\\n#### Function Signature\\n```python\\ndef count_islands(grid: list[list[str]]) -> int:\\n```\\n\\n#### Input\\n- `grid` (list[list[str]]): A 2D grid filled with water ('W') and land ('L').\",\n\"code\": \"\"\"\nimport copy\n\ndef count_islands(grid: list[list[str]]) -> int:\n    # Create a deep copy of the grid\n    grid_copy = copy.deepcopy(grid)\n\n    def dfs(i: int, j: int) -> None:\n        if i < 0 or j < 0 or i >= len(grid_copy) or j >= len(grid_copy[0]) or grid_copy[i][j] != 'L':\n            return\n\n        # Mark the current cell as visited\n        grid_copy[i][j] = 'W'\n\n        dfs(i - 1, j)\n        dfs(i + 1, j)\n        dfs(i, j - 1)\n        dfs(i, j + 1)\n\n    island_count = 0\n    for i in range(len(grid)):\n        for j in range(len(grid[0])):\n            if grid_copy[i][j] == 'L':\n                dfs(i, j)\n                island_count += 1\n\n    return island_count\n\"\"\",\n\"tests\": [\n    \"assert count_islands([['W', 'W', 'W', 'W', 'W'], ['W', 'L', 'L', 'L', 'W'], ['W', 'L', 'W', 'L', 'W'], ['W', 'W', 'W', 'W', 'W']]) == 1\",\n    \"assert count_islands([['W', 'W', 'W', 'W', 'W'], ['W', 'L', 'L', 'L', 'W'], ['W', 'L', 'W', 'L', 'W'], ['W', 'W', 'L', 'L', 'W']]) == 2\",\n    \"assert count_islands([['W', 'W', 'W', 'W', 'W'], ['W', 'L', 'L', 'L', 'W'], ['W', 'L', 'W', 'L', 'W'], ['W', 'W', 'W', 'L', 'W']]) == 3\"\n]\n}"