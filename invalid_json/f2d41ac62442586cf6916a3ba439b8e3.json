"Here's a new Python coding question that I came up with:\n\n```json\n{\n  \"title\": \"Maximum Subarray Sum\",\n  \"description\": \"This problem is a classic example of Kadane's algorithm. Given an array of integers, find the maximum subarray sum that can be obtained by adding some or all elements from the array.\\n\\n#### Function Signature\\n```python\\ndef max_subarray_sum(nums: list[int]) -> int:\\n```\\n\\n#### Input\\n- `nums` (list[int]): A list of integers.\\n\\n#### Output\\n- Returns the maximum subarray sum that can be obtained.\\n\",\n  \"code\": \"\"\"\nimport numpy as np\n\ndef max_subarray_sum(nums: list[int]) -> int:\n    # Initialize max_sum and current_sum to the smallest possible integer\n    max_sum = -np.inf\n    current_sum = -np.inf\n    \n    for num in nums:\n        # Update current_sum to be the maximum of 0 and current_sum + num\n        current_sum = max(0, current_sum + num)\n        \n        # Update max_sum to be the maximum of max_sum and current_sum\n        max_sum = max(max_sum, current_sum)\n    \n    return max_sum\n\"\"\",\n  \"tests\": [\n    \"assert max_subarray_sum([1, -2, 3, 4, -5, 6]) == 7\",\n    \"assert max_subarray_sum([-1, -2, -3, -4, -5]) == -1\",\n    \"assert max_subarray_sum([]) == -np.inf\",\n    \"assert max_subarray_sum([1]) == 1\"\n  ]\n}\n```"