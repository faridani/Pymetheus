"Here's your super hard python coding question:\n\n```json\n{\n    \"title\": \"Hard: Maximum Sum of Distinct Subarrays\",\n    \"description\": \"Given a list of integers, find the maximum sum that can be obtained by choosing at most one subarray from each distinct element in the list. The subarray must start and end with the same value.\\n\\n#### Function Signature\\n```python\\ndef max_sum_distinct_subarrays(nums: List[int]) -> int:\\n```\\n\\n#### Input\\n- `nums` (List[int]): A list of integers.\\n\\n#### Output\\n- Returns the maximum sum that can be obtained by choosing at most one subarray from each distinct element in the list.\\n\",\n    \"code\": \"\"\"\nimport itertools\n\ndef max_sum_distinct_subarrays(nums):\n    # Group elements by value\n    groups = {}\n    for num in nums:\n        if num not in groups:\n            groups[num] = []\n        groups[num].append(num)\n\n    # Find maximum sum of subarrays from each group\n    max_sums = []\n    for group in groups.values():\n        if len(group) == 1:  # If there's only one element, the maximum sum is the element itself\n            max_sum = group[0]\n        else:\n            max_sum = 0\n            for i in range(len(group)):\n                for j in range(i + 1, len(group) + 1):\n                    subarray = group[i:j]\n                    if subarray and sum(subarray) > max_sum:\n                        max_sum = sum(subarray)\n        max_sums.append(max_sum)\n\n    # Return the maximum sum\n    return sum(max_sums)\n\"\"\", \n    \"tests\": [\n        \"assert max_sum_distinct_subarrays([1, 2, 3, 4, 5]) == 15\",\n        \"assert max_sum_distinct_subarrays([1, 2, -1, 3, 1]) == 4\",\n        \"assert max_sum_distinct_subarrays([-1, -2, 0, 0, 1]) == 0\",\n        \"assert max_sum_distinct_subarrays([5, 6, 7, 8, 9]) == 30\"\n    ]\n}\n```"