"Here's a new Python coding question:\n\n{\"title\": \"Elegant Euler Problem\", \"description\": \"The sum of the squares of the first ten integers is 385. The square of the sum of the first ten integers is 3025. However, there is nothing special about the number ten. One may ask why we stop at the tenth integer. Well, that was arbitrary. We could have stopped at any positive integer n. Write a function `sum_of_squares` and `square_of_sum` to calculate the sum of the squares of the first n integers and the square of their sum.\\n\\n#### Function Signature\\n```python\\ndef sum_of_squares(n: int) -> int:\\ndef square_of_sum(n: int) -> int:\\n```\\n\\n#### Input\\n- `n` (int): A positive integer that represents the number of integers to consider.\\n\\n#### Output\\n- Returns the sum of the squares of the first n integers and the square of their sum.\", \"code\": \"import math\\ndef sum_of_squares(n: int) -> int:\\n    return sum(i**2 for i in range(1, n+1))\\n\\ndef square_of_sum(n: int) -> int:\\n    return sum(range(1, n+1)) ** 2\\n\", \"tests\": [\"assert sum_of_squares(10) == 385\", \"assert square_of_sum(10) == 3025\", \"assert sum_of_squares(3) == 14\", \"assert square_of_sum(3) == 36\"]}"