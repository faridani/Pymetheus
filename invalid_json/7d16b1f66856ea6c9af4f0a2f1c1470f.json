"Here's your insanely difficult Python coding question:\n\n{\"title\": \"Hard: Maximum Sum of a Subarray with Consecutive Duplicates\", \"description\": \"Given an array of integers, write a function that finds the maximum sum of any subarray where consecutive duplicates are allowed. For example, if the input array is [1, 2, 3, 4, 5], the function should return the maximum sum which can be achieved by allowing consecutive duplicates, i.e., [1] + [2] + [3] + [4, 4] + [5, 5, 5, 5] = 17. If there are multiple such subarrays with the same maximum sum, any one of them should be returned.\\n\\n#### Function Signature\\n```python\\ndef max_sum_with_consecutive_duplicates(arr: list[int]) -> int:\\n```\\n\\n#### Input\\n- `arr` (list[int]): A list of integers.\\n\\n#### Output\\n- Returns the maximum sum of a subarray where consecutive duplicates are allowed.\\n\", \"code\": \"def max_sum_with_consecutive_duplicates(arr: list[int]) -> int:\\n    n = len(arr)\\n    dp = [0] * (n + 1)\\n    for i in range(n):\\n        dp[i + 1] = max(dp[i], arr[i] + dp[i - 1] if i > 0 else arr[i])\\n    max_sum = 0\\n    curr_sum = 0\\n    for i in range(n, -1, -1):\\n        curr_sum += arr[i]\\n        if curr_sum > max_sum:\\n            max_sum = curr_sum\\n        elif curr_sum < 0:\\n            curr_sum = 0\\n    return dp[-1] + max_sum\\n\", \"tests\": [\"assert max_sum_with_consecutive_duplicates([1, 2, 3, 4, 5]) == 17\", \"assert max_sum_with_consecutive_duplicates([-1, -2, -3, -4, -5]) == -6\", \"assert max_sum_with_consecutive_duplicates([1, 1, 1, 1]) == 4\", \"assert max_sum_with_consecutive_duplicates([0, 0, 0, 0]) == 0\"]}"