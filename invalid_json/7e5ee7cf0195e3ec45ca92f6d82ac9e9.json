"Here's a new Python coding question for you:\n\n{\"title\": \"Easy: Counting Islands\", \"description\": \"#### Problem\\nWrite a function `count_islands` that takes a 2D list of binary values as input and returns the number of islands. An island is defined as a group of connected ones (True) in the grid.\\n\\n#### Function Signature\\n```python\\ndef count_islands(grid: list[list[bool]]) -> int:\\n```\\n\\n#### Input\\n- `grid` (list[list[bool]]): A 2D list of binary values, where True represents a land cell and False represents water.\\n\\n#### Output\\n- Returns the number of islands in the grid.\\n\", \"code\": \"\"\"\ndef count_islands(grid: list[list[bool]]) -> int:\n    if not grid or not grid[0]:\n        return 0\n\n    def dfs(i, j):\n        if i<0 or j<0 or i>=len(grid) or j>=len(grid[0]) or not grid[i][j]:\n            return\n        grid[i][j] = False\n        dfs(i-1, j)\n        dfs(i+1, j)\n        dfs(i, j-1)\n        dfs(i, j+1)\n\n    count = 0\n    for i in range(len(grid)):\n        for j in range(len(grid[0])):\n            if grid[i][j]:\n                dfs(i, j)\n                count += 1\n\n    return count\\n\"\"\", \"tests\": [\"assert count_islands([[True, True, False], [True, True, False], [False, False, False]]) == 1\", \"assert count_islands([[True, True, False], [True, True, True], [False, False, False]]) == 2\", \"assert count_islands([[True, True, True], [True, True, True], [True, True, True]]) == 1\"]}"