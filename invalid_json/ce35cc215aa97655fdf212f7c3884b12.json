"Here's a new Python question that meets the template requirements:\n\n{\n\"title\": \"Hard: Tower of Hanoi\",\n\"description\": \"The Tower of Hanoi is a classic mathematical puzzle where we have three rods and n disks. The objective of the puzzle is to move the entire stack to another rod, obeying the following simple rules:\\n\\n1. Only one disk can be moved at a time.\\n2. Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod.\\nWrite a function `hanoi` that takes three arguments: `n`, the number of disks, and `from_rod`, `to_rod`, and `aux_rod`, the names of the rods. The function should print out the moves necessary to solve the puzzle.\\n\\n#### Function Signature\\n```python\\ndef hanoi(n: int, from_rod: str, to_rod: str, aux_rod: str):\\n```\\n\\n#### Input\\n- `n` (int): The number of disks.\\n- `from_rod` (str), `to_rod` (str), and `aux_rod` (str): The names of the rods.\\n\\n#### Output\\nNone. Prints out the moves necessary to solve the puzzle.\",\n\"code\": \"\"\"\nimport sys\n\ndef hanoi(n: int, from_rod: str, to_rod: str, aux_rod: str):\n    if n == 1:\n        print(f\"Move disk {n} from rod {from_rod} to rod {to_rod}\")\n        return\n    hanoi(n-1, from_rod, aux_rod, to_rod)\n    print(f\"Move disk {n} from rod {from_rod} to rod {to_rod}\")\n    hanoi(n-1, aux_rod, to_rod, from_rod)\n\n# Test cases\nhanoi(3, 'A', 'C', 'B')\n\"\"\",\n\"tests\": [\n\"assert hanoi(1, 'A', 'B', 'C') is None\",\n\"assert hanoi(2, 'A', 'B', 'C') is None\",\n\"assert hanoi(3, 'A', 'B', 'C') is not None\"\n]\n}"