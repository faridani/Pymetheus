"Here is your desired Python coding question:\n\n{\n\"title\": \"Hard: Finding the Maximum Sum of Subarrays\",\n\"description\": \"Given a 2D array of integers, write a function that finds the maximum sum of subarrays. A subarray is any contiguous sequence of elements within the original array.\\n\\n#### Function Signature\\n```python\\ndef max_subarray_sum(arr: list[list[int]]) -> int:\\n```\\n\\n#### Input\\n- `arr` (list[list[int]]): A 2D array of integers, where each inner list represents a row in the array.\\n\\n#### Output\\n- Returns the maximum sum of all possible subarrays within the input array.\",\n\"code\": \"import itertools\\n\\ndef max_subarray_sum(arr: list[list[int]]) -> int:\\n    def get_all_subarrays(arr):\\n        return [list(subarray) for row in arr for subarray in (itertools.chain(*[itertools.combinations(row, r) for r in range(1, len(row) + 1)]))]\\n\\n    max_sum = float('-inf')\\n    for subarray in get_all_subarrays(arr):\\n        max_sum = max(max_sum, sum(subarray))\\n    return max_sum\",\n\"tests\": [\n    \"assert max_subarray_sum([[1, 2], [3, -4], 5]) == 7\",\n    \"assert max_subarray_sum([[-1, -2, -3], [-4, -5, -6]]) == -1\",\n    \"assert max_subarray_sum([]) == float('-inf')\",\n    \"assert max_subarray_sum([[10]]) == 10\"\n]\n}"