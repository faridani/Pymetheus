"Here is the JSON string for the problem:\n\n{\n\"title\": \"Hard: Sudoku Validator\",\n\"description\": \"Write a function `is_valid_sudoku` that validates whether a given 9x9 Sudoku grid is valid. A valid Sudoku grid is one where each row, column, and 3x3 sub-grid contains the numbers from 1 to 9 without repetition.\\n\\n#### Function Signature\\n```python\\ndef is_valid_sudoku(grid: list[list[int]]) -> bool:\\n```\\n\\n#### Input\\n- `grid` (list of lists): A 9x9 Sudoku grid where each cell contains a number from 1 to 9 or 0.\\n\\n#### Output\\n- Returns `True` if the input Sudoku grid is valid, `False` otherwise.\",\n\"code\": \"\"\"\nimport copy\n\ndef is_valid_sudoku(grid: list[list[int]]) -> bool:\n    # Check rows\n    for row in grid:\n        seen = set()\n        for num in row:\n            if num == 0 or num > 9:\n                return False\n            if num in seen:\n                return False\n            seen.add(num)\n\n    # Check columns\n    for col_idx in range(9):\n        seen = set()\n        for row in grid:\n            num = row[col_idx]\n            if num == 0 or num > 9:\n                return False\n            if num in seen:\n                return False\n            seen.add(num)\n\n    # Check sub-grids\n    for start_row in range(0, 7, 3):\n        for start_col in range(0, 7, 3):\n            seen = set()\n            for row_idx in range(start_row, start_row + 3):\n                for col_idx in range(start_col, start_col + 3):\n                    num = grid[row_idx][col_idx]\n                    if num == 0 or num > 9:\n                        return False\n                    if num in seen:\n                        return False\n                    seen.add(num)\n\n    return True\"\"\",\n\"tests\": [\"assert is_valid_sudoku([[5,3,4,6,7,8,9,1,2], [6,7,8,9,1,2,3,4,5], [1,2,3,4,5,6,7,8,9], [8,9,1,2,3,4,5,6,7], [4,5,6,7,8,9,1,2,3], [7,8,9,1,2,3,4,5,6], [9,1,2,3,4,5,6,7,8], [2,3,4,5,6,7,8,9,1], [3,4,5,6,7,8,9,1,2]]) == True\", \"assert is_valid_sudoku([[5,3,4,6,7,8,9,1,0], [6,7,8,9,1,2,3,4,5], [1,2,3,4,5,6,7,8,9], [8,9,1,2,3,4,5,6,7], [4,5,6,7,8,9,1,2,3], [7,8,9,1,2,3,4,5,6], [9,1,2,3,4,5,6,7,8], [2,3,4,5,6,7,8,9,1], [3,4,5,6,7,8,9,1,0]]) == False\"]\n}"