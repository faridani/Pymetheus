"Here's your new Python coding question:\n\n{\"title\": \"Maximal Square\", \"description\": \"Write a function `max_square` that finds the maximal square that can be formed from a given binary matrix.\\n\\n#### Function Signature\\n```python\\ndef max_square(matrix: list[list[int]]) -> int:\\n```\\n\\n#### Input\\n- `matrix` (list[list[int]]): A 2D list of size N x M, where each cell contains either 0 or 1.\\n\\n#### Output\\n- Returns the maximum size of a square sub-matrix that can be formed from the input matrix, containing only 1s.\\n\", \"code\": \"\"\"\nfrom typing import List\n\ndef max_square(matrix: List[List[int]]) -> int:\n    if not matrix:\n        return 0\n    \n    rows, cols = len(matrix), len(matrix[0])\n    dp = [[0] * (cols + 1) for _ in range(rows + 1)]\n    \n    max_size = 0\n    for i in range(1, rows + 1):\n        for j in range(1, cols + 1):\n            if matrix[i-1][j-1] == 1:\n                dp[i][j] = min(dp[i-1][j], dp[i][j-1], dp[i-1][j-1]) + 1\n                max_size = max(max_size, dp[i][j])\n    \n    return max_size\n\n\"\"\", \"tests\": [\"assert max_square([[0, 0, 0], [1, 1, 1], [1, 1, 1]]) == 3\", \"assert max_square([[0, 0, 0], [0, 1, 0], [0, 0, 0]]) == 1\", \"assert max_square([[1, 1, 1], [1, 1, 1], [1, 1, 1]]) == 3\", \"assert max_square([]) == 0\"]}"