"Here is a medium-level Python coding problem for you, along with the requested format:\n\n```json\n{\n    \"title\": \"Sum of Unique Values in a List\",\n    \"description\": \"Given a list of integers, write a function `sum_unique` that calculates the sum of all unique values in the list. The function should return the sum as an integer.\\n\\n#### Function Signature\\n```python\\ndef sum_unique(my_list: list[int]) -> int:\\n```\\n\\n#### Input\\n- `my_list` (list[int]): A list of integers that may contain duplicates.\\n\\n#### Output\\n- Returns the sum of all unique values in the list as an integer.\\n\",\n    \"code\": \"def sum_unique(my_list: list[int]) -> int:\\n    \\\"\\\"\\\"\\n    Calculate the sum of all unique values in the input list.\\n    \\\"\\\"\\\"\\n    # Create a set to store unique values\\n    unique_values = set()\\n    sum = 0\\n\\n    # Iterate through the list\\n    for num in my_list:\\n        # If the number is not in the set, add it and increment the sum\\n        if num not in unique_values:\\n            unique_values.add(num)\\n            sum += num\\n\\n    return sum\",\n    \"tests\": [\n        \"assert sum_unique([1, 2, 3, 2, 4, 5]) == 15\",\n        \"assert sum_unique([-3, -3, 0, 1, 2, 2, 3]) == 7\",\n        \"assert sum_unique([0, 0, 0]) == 0\",\n        \"assert sum_unique([7, 4, 6, 5, 9, 8]) == 39\"\n    ]\n}\n```\n\n### Problem Description:\n\nGiven a list of integers `my_list`, write a function `sum_unique` that calculates the sum of all unique values in the list. The function should return the sum as an integer.\n\n#### Function Signature:\n\n```python\ndef sum_unique(my_list: list[int]) -> int:\n    ...\n```\n\n#### Input:\n\n- `my_list` (list[int]): A list of integers that may contain duplicates.\n\n#### Output:\n\n- Returns the sum of all unique values in the list as an integer.\n\n### Tests:\n\n1. `assert sum_unique([1, 2, 3, 2, 4, 5]) == 15`\n2. `assert sum_unique([-3, -3, 0, 1, 2, 2, 3]) == 7`\n3. `assert sum_unique([0, 0, 0]) == 0`\n4. `assert sum_unique([7, 4, 6, 5, 9, 8]) == 39`"