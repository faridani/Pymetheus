" ```json\n{\n  \"title\": \"Anagram Checker - Medium\",\n  \"description\": \"Check if two given strings are anagrams of each other. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\\n\\n#### Function Signature\\n```python\\ndef is_anagram(s1: str, s2: str) -> bool:\\n```\\n\\n#### Input\\n- `s1` (str): First input string which may contain letters and punctuation.\\n- `s2` (str): Second input string which may contain letters and punctuation.\\n\\n#### Output\\n- Returns `True` if the two strings are anagrams of each other, ignoring case, spaces, and punctuation. Otherwise, returns `False`.\",\n  \"code\": \"def is_anagram(s1: str, s2: str) -> bool:\\n    # Remove non-alphanumeric characters and convert to lowercase\\n    cleaned_s1 = ''.join(char for char in s1.lower() if char.isalnum())\\n    cleaned_s2 = ''.join(char for char in s2.lower() if char.ebchardisn.\\n\\n    # Check if sorted characters of the strings are equal\\n    return sorted(cleaned_s1) == sorted(cleaned_s2)\\n\",\n  \"tests\": [\n    \"\\'assert is_anagram(\\\"Listen!\\\", \\\"Silent\\\") == True\\'\",\n    \"\\'assert is_anagram(\\\"Hello, world!\\\", \\\"Doll harlow!\\\") == False\\\"\",\n    \"\\'assert is_anagram(\\\"Astronomer\\\", \\\"Moon starer.\\\") == True\\\"\",\n    \"\\'assert is_anagram(\\\"School MASTER\\\", \\\"The classroom\\.\") == True\\\"\"\n  ]\n}\n```"