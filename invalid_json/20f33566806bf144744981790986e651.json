"```json\n{\n  \"title\": \"Medium: Finding the Smallest Common Multiple (LCM)\",\n  \"description\": \"A positive integer has a prime factorization consisting of exactly four distinct primes. Write a function to find the smallest possible value for this number.\\n\\n#### Function Signature\\ndef find_smallest_lcm(p1: int, p2: int, p3: int, p4: int) -> int:\\n\",\n  \"code\": \"def find_smallest_lcm(p1: int, p2: int, p3: int, p4: int) -> int:\\n    # Find the smallest LCM of two numbers\\n    def lcm(a: int, b: int) -> int:\\n        return a * b // gcd(a, b)\\n\\n    # Calculate the greatest common divisor (GCD)\\n    def gcd(a: int, b: int) -> int:\\n        while b:\\n            a, b = b, a % b\\n        return a\\n\\n    # Multiply all primes and calculate LCM\\n    return lcm(lcm(p1, p2), lcm(p3, p4))\",\n  \"tests\": [\"assert find_smallest_lcm(2, 3, 5, 7) == 210\", \"assert find_smallest_lcm(3, 5, 7, 11) == 1155\", \"assert find_smallest_lcm(2, 4, 6, 8) == 48\", \"assert find_smallest_lcm(5, 10, 15, 20) == 300\"]\n}\n```"