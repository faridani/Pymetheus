" {\n    \"title\": \"Anagram Checker (Hard)\",\n    \"description\": \"Given two strings, write a function `anagram_checker` that checks if the letters in one string can be rearranged to form the other string.\\n\\n#### Function Signature\\n```python\\ndef anagram_checker(s1: str, s2: str) -> bool:\\n```\\n\\n#### Input\\n- `s1` (str): A non-empty string.\\n- `s2` (str): Another non-empty string.\\n\\n#### Output\\n- Returns `True` if the letters in `s1` can be rearranged to form `s2`, and vice versa. If the strings do not contain the same number of characters, or the characters in either string are not unique, the function should return `False`.\\n\",\n    \"code\": \"def anagram_checker(s1: str, s2: str) -> bool:\\n    # Sort the letters in both strings\\n    s1_sorted = sorted(list(set(s1.lower())))\\n    s2_sorted = sorted(list(set(s2.lower())))\\n    \\n    # Check if the sorted lists are equal\\n    return s1_sorted == s2_sorted\",\n    \"tests\": [\n        'assert anagram_checker(\"listen\", \"silent\") == True',\n        'assert anagram_checker(\"hello\", \"world\") == False',\n        'assert anagram_checker(\"acttor\", \"rotten\") == True',\n        'assert anagram_checker(\"abcd\", \"dcba\") == True'\n    ]\n   }"