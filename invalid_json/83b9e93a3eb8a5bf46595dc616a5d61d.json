"Here is a new Python coding question:\n\n{\"title\": \"Easy: Validating Brackets\", \"description\": \"Write a function `is_valid_bracket_sequence` that checks if a given sequence of brackets is valid. A valid sequence is one where every opening bracket has a corresponding closing bracket and vice versa.\\n\\n#### Function Signature\\n```python\\ndef is_valid_bracket_sequence(s: str) -> bool:\\n```\\n\\n#### Input\\n- `s` (str): A string containing only the characters '(', ')', '[', ']'.\\n\\n#### Output\\n- Returns `True` if the input string represents a valid bracket sequence, `False` otherwise.\\n\", \"code\": \"def is_valid_bracket_sequence(s: str) -> bool:\\n    stack = []\\n    for char in s:\\n        if char == '(' or char == '[':\\n            stack.append(char)\\n        elif char == ')' or char == ']':\\n            if not stack:\\n                return False\\n            top = stack.pop()\\n            if (char == ')' and top != '(') or (char == ']' and top != '['):\\n                return False\\n    return not stack,\\n\", \"tests\": [\"assert is_valid_bracket_sequence(\"\"(())\"\") == True\", \"assert is_valid_bracket_sequence(\"(]\") == False\", \"assert is_valid_bracket_sequence(\"(()[])\") == True\", \"assert is_valid_bracket_sequence(\"([)]\") == False\"]}"