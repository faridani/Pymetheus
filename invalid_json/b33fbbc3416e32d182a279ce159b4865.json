"{'title': 'Prime Number Factorization', 'description': 'A prime factorization function accepts a positive integer and returns its unique prime factors as an unordered set (i.e., no duplicates) of the prime numbers that multiply together to form the original number. The input is guaranteed to be greater than 1.\\n\\n#### Function Signature\\n```python\\ndef prime_factors(n: int) -> set:\\n```\\n\\n#### Input\\n- `n` (int): A positive integer greater than 1.\\n\\n#### Output\\n- Returns an unordered set containing the prime factors of the input number.\\n', 'code': \"def prime_factors(n: int) -> set:\\n    i = 2\\n    factors = set()\\n    while n > 1:\\n        if n % i == 0:\\n            factors.add(i)\\n            n //= i\\n        else:\\n            i += 1\\n    return factors\\n\", 'tests': ['assert prime_factors(8) == {2, 2}', 'assert prime_factors(7) == set([7])', 'assert prime_factors(60) == {2, 3, 5}', 'assert prime_factors(91) == {7, 13}']}"