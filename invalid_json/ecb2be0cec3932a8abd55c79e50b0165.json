"Here's your requested Python coding question:\n\n{\"title\": \"Maximum Contiguous Subarray Sum\", \"description\": \"Given an integer array, find the maximum sum of a contiguous subarray within the array. If there are multiple subarrays with the same maximum sum, return any one.\\n\\n#### Function Signature\\n```python\\ndef max_subarray_sum(arr: list[int]) -> int:\\n```\\n\\n#### Input\\n- `arr` (list[int]): A list of integers representing an array.\\n\\n#### Output\\n- Returns the maximum sum of a contiguous subarray within the input array.\\n\", \"code\": \"\nimport numpy as np\n\ndef max_subarray_sum(arr: list[int]) -> int:\n    # Initialize the maximum current sum and the maximum global sum to the first element of the array\n    max_current = max_global = arr[0]\n\n    # Iterate through the array starting from the second element (index 1)\n    for i in range(1, len(arr)):\n        # Calculate the maximum of the current element and the sum of the current element and the previous maximum current sum\n        max_current = max(arr[i], max_current + arr[i])\n        \n        # Update the global maximum if necessary\n        max_global = max(max_global, max_current)\n\n    return max_global\", \"tests\": [\"assert max_subarray_sum([-2,1,-3,4,-1,2,1,-5,4]) == 6\", \"assert max_subarray_sum([1, -2, 3, 10, -4, 7, 2, -5]) == 12\"]}"