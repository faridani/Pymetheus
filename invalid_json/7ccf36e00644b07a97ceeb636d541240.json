"{\"title\": \"Hard: Maximum Subarray Sum with Negative Numbers\", \"description\": \"Find the maximum sum of a contiguous subsequence (a.k.a. continuous sub-array) in an array containing both positive and negative integers.\\n\\n#### Function Signature\\n```python\\ndef max_subarray_sum(nums: list) -> int:\\n```\\n\\n#### Input\\n- `nums` (list): A list of integers that can be both positive and negative.\\n\\n#### Output\\n- Returns the maximum sum of a contiguous subsequence in the input array. If all elements are negative, returns the largest single element.\", \"code\": \"\\ndef max_subarray_sum(nums: list) -> int:\\n    # Initialize current_max and global_max with the smallest possible integer value\\n    current_max = global_max = float('-inf')\\n\\n    for num in nums:\\n        # Update current_max\\n        current_max = max(num, current_max + num)\\n        # Check if current_max is greater than global_max so far\\n        global_max = max(global_max, current_max)\\n\\n    return int(global_max)\\n\", \"tests\": ['assert max_subarray_sum([1, -2, 3, -4, 5]) == 6', 'assert max_subarray_sum([-1, -2, -3, -4]) == -1', 'assert max_subarray_sum([5, 4, -1, 7, 8]) == 20', 'assert max_subarray_sum([-7, -8, -9, -6]) == -6']}"