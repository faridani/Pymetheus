"Here's a medium-level Python coding question:\n\n```json\n{\n    \"title\": \"Counting Islands\",\n    \"description\": \"You are given an m x n integer matrix `grid` where `grid[i][j]` represents the cell at `(i, j)` in the grid. In this problem, we define an 'island' as any subset of connected cells with a value equal to 1.\\n\\n#### Function Signature\\n```python\\ndef count_islands(grid: list[list[int]]) -> int:\\n```\\n\\n#### Input\\n- `grid` (list[list[int]]): A 2D integer grid where each cell contains either 0 or 1, representing the presence or absence of an island.\\n\\n#### Output\\n- Returns the number of islands in the given grid.\\n\",\n    \"code\": \"\"\"\ndef count_islands(grid: list[list[int]]) -> int:\n    if not grid:\n        return 0\n\n    def dfs(i: int, j: int) -> None:\n        if i < 0 or i >= len(grid) or j < 0 or j >= len(grid[0]) or grid[i][j] == 0:\n            return\n        grid[i][j] = 0\n        dfs(i - 1, j)\n        dfs(i + 1, j)\n        dfs(i, j - 1)\n        dfs(i, j + 1)\n\n    count = 0\n    for i in range(len(grid)):\n        for j in range(len(grid[0])):\n            if grid[i][j] == 1:\n                dfs(i, j)\n                count += 1\n    return count\n\"\"\",\n    \"tests\": [\n        \"assert count_islands([[1, 1], [1, 0]]) == 1\",\n        \"assert count_islands([[0, 0], [1, 0]]) == 0\",\n        \"assert count_islands([[1, 0, 1], [1, 1, 1], [0, 0, 1]]) == 2\",\n        \"assert count_islands([]) == 0\"\n    ]\n}\n```"