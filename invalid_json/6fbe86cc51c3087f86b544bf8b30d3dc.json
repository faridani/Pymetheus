" {\n    \"title\": \"Anagram Checker (Hard)\",\n    \"description\": \"Given two strings, write a function `are_anagrams` that checks if the letters of one string can be rearranged to form the other string. Ignore case and consider spaces as separators.\\n\\n#### Function Signature\\n```python\\ndef are_anagrams(s1: str, s2: str) -> bool:\\n```\\n\\n#### Input\\n- `s1`, `s2` (str): Two strings that may contain letters, spaces, and punctuation.\\n\\n#### Output\\n- Returns `True` if the two input strings are anagrams of each other, `False` otherwise.\\n\",\n    \"code\": \"from collections import Counter\\n\\ndef are_anagrams(s1: str, s2: str) -> bool:\\n    # Remove non-alphabetic characters and convert to lowercase\\n    s1 = ''.join(char for char in s1 if char.isalpha()).lower()\\n    s2 = ''.join(char for char in s2 if char.isalpha()).lower()\\n    \\n    # Count the frequency of each letter in both strings\\n    counter1 = Counter(s1)\\n    counter2 = Counter(s2)\\n    \\n    # Check if both counters have the same number of elements and if every element is the same except for spaces\\n    return len(counter1) == len(counter2) and not any([count1 != count2[key] for key, count1 in counter1.items() if key != ' '])\",\n    \"tests\": [\n        \"assert are_anagrams('listen', 'silent') == True\",\n        \"assert are_anagrams('Hello World', 'World Hello') == True\",\n        \"assert are_anagrams('hello', 'olleh') == True\",\n        \"assert are_anagrams('Hello, World!', 'World, Hello!') == True\",\n        \"assert are_anagrams('abcdefghijklmnopqrstuvwxyz', 'zyxwvutsrqponmlkjihgfedcba') == True\",\n        \"assert are_anagrams('a man, a plan, a canal: Panama', 'amanaplanacanalpanama',) == True\",\n        \"assert are_anagrams('apple', 'appel') == False\"\n    ]\n   }"