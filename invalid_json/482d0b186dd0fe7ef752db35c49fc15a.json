"Here's your new Python coding question:\n\n{\"title\": \"Sorting a List of Complex Numbers\", \"description\": \"Given a list of complex numbers represented as strings in the format `a+bi`, where `a` and `b` are integers, write a function that sorts this list in ascending order. The sorting should be done based on the real part of the complex number (i.e., the first integer `a`) if it is equal, then sort by the imaginary part (i.e., the second integer `b`).\\n\\n#### Function Signature\\n```python\\ndef sort_complex_numbers(complex_numbers: list[str]) -> list[str]:\\n```\\n\\n#### Input\\n- `complex_numbers` (list[str]): A list of complex numbers represented as strings in the format `a+bi`, where `a` and `b` are integers.\\n\\n#### Output\\n- Returns a sorted list of complex numbers as strings in the same format.\", \"code\": \"from re import findall\\n\\ndef sort_complex_numbers(complex_numbers: list[str]) -> list[str]:\\n    def parse_complex_number(c: str) -> tuple[int, int]:\\n        real, imag = map(int, findall(r'(\\d+)', c))\\n        return (real, imag)\\n    complex_numbers.sort(key=parse_complex_number)\\n    return [f'{real}+{imag}i' for real, imag in complex_numbers]\\n\", \"tests\": [\"assert sort_complex_numbers(['1+2i', '3+4i', '0+5i']) == ['0+5i', '1+2i', '3+4i']\", \"assert sort_complex_numbers(['-1+2i', '-3+4i', '0+5i']) == ['0+5i', '-1+2i', '-3+4i']\"]}"