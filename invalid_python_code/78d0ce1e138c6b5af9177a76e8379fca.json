{
    "title": "Hard: Maximum Sum of Subarray",
    "description": "Given an array of integers, find the maximum sum of a subarray (contiguous segment) within the given array.\n\n#### Function Signature\n```python\ndef max_sum_subarray(arr: list[int)) -> int:\n```\n\n#### Input\n- `arr` (list[int]): A list of integers.\n\n#### Output\n- Returns the maximum sum of a subarray.\n",
    "code": "def max_sum_subarray(arr: list[int)) -> int:\n    if len(arr) == 0:\n        return 0\n    max_sum = arr[0]\n    current_sum = arr[0]\n    for num in arr[1:]:\n        current_sum = max(num, current_sum + num)\n        max_sum = max(max_sum, current_sum)\n    return max_sum\n",
    "tests": [
        "assert max_sum_subarray([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6",
        "assert max_sum_subarray([1, 2, -1, 3, 4, -1]) == 9",
        "assert max_sum_subarray([-1, -2, -3, -4, -5]) == -1"
    ]
}